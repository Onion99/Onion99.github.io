<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://onion66.gitee.io/blog</id>
    <title>Stay hungry , Stay foolish • Posts by &#34;图形绘制&#34; tag</title>
    <link href="http://onion66.gitee.io/blog" />
    <updated>2021-11-03T14:09:36.000Z</updated>
    <category term="源码解析" />
    <category term="性能优化" />
    <category term="并发" />
    <category term="图形绘制" />
    <category term="课程学习" />
    <category term="理论学习" />
    <entry>
        <id>http://onion66.gitee.io/blog/2021/11/03/cNDSpE5p4avS2tOi/</id>
        <title>自定义View(11) - 滚动速度和滚动计算</title>
        <link rel="alternate" href="http://onion66.gitee.io/blog/2021/11/03/cNDSpE5p4avS2tOi/"/>
        <content type="html">&lt;h3 id=&#34;velocitytracker&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#velocitytracker&#34;&gt;#&lt;/a&gt; VelocityTracker&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;跟踪手指在滑动过程中的速度，包括水平和竖直方向的速度&lt;/p&gt;
&lt;/blockquote&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;VelocityTrackerTestView&lt;/span&gt;(&lt;span class=&#34;title&#34;&gt;context&lt;/span&gt;: &lt;span class=&#34;title&#34;&gt;Context&lt;/span&gt;?, &lt;span class=&#34;title&#34;&gt;attrs&lt;/span&gt;: &lt;span class=&#34;title&#34;&gt;AttributeSet&lt;/span&gt;?) : &lt;span class=&#34;title&#34;&gt;View&lt;/span&gt;(&lt;span class=&#34;title&#34;&gt;context&lt;/span&gt;, &lt;span class=&#34;title&#34;&gt;attrs&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//1、创建实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; mVelocityTracker = VelocityTracker.obtain()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@SuppressLint(&amp;quot;ClickableViewAccessibility&amp;quot;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;override fun &lt;span class=&#34;title&#34;&gt;onTouchEvent&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(event: MotionEvent)&lt;/span&gt;: Boolean &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//2、重置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (event.actionMasked == MotionEvent.ACTION_DOWN) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            mVelocityTracker.clear()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//3、开始追踪&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mVelocityTracker.addMovement(event)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        when (event.actionMasked) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            MotionEvent.ACTION_DOWN -&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            MotionEvent.ACTION_MOVE -&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//o...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            MotionEvent.ACTION_UP -&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//速度 = （ 终点位置(px) - 起点位置(px) ）/ 时间段(ms)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//4、设置时间段&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                mVelocityTracker.computeCurrentVelocity(&lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//5、获取x方向、y方向的速度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//其中getXVelocity、getYVelocity方法的参数是pointerId，用于多指触控。不考虑多指时，可以不用传参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; xVelocity = mVelocityTracker.getXVelocity(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; yVelocity = mVelocityTracker.getYVelocity(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;override fun &lt;span class=&#34;title&#34;&gt;onDetachedFromWindow&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//6、当不需要使用时，重置并回收内存&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mVelocityTracker.clear()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mVelocityTracker.recycle()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;super&lt;/span&gt;.onDetachedFromWindow()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;VelocityTracker 一般用来判断当前是否达到一定的滑动速度来触发 Fling 的效果，这个滑动速度我们可以自己设置，也可以通过系统提供的来获取&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; mViewConfiguration : ViewConfiguration = ViewConfiguration.get(context)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; mMaxFlingVelocity = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;//触发fling的速度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; mMinFlingVelocity = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;init &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mMaxFlingVelocity = mViewConfiguration.scaledMaximumFlingVelocity&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mMinFlingVelocity = mViewConfiguration.scaledMinimumFlingVelocity&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;scroller&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#scroller&#34;&gt;#&lt;/a&gt; Scroller&lt;/h3&gt;
&lt;p&gt;在 View 类里面，有两个和滚动相关的类 scrollTo () 和 scrollBy。这两个方法可以实现 View 内容的移动，比如说一个 TextView，如果使用 scrollTo ()，那么移动的是里面的文字而不是位置，scrollBy () 也是一样的。那么为什么是移动，不是滚动呢？这是因为这两个方法都是瞬间完成，而不是带有滚动过程的滚动，所以说如果要实现效果比较好的滚动还是需要 Scroller&lt;/p&gt;
&lt;p&gt;常用 API:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;API&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;简介&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;computeScrollOffset()&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;判断当前的滑动动作是否完成的&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;getCurrX()、getCurrY()&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;获取当前滑动的坐标值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;getFinalX()、getFinalY()&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;获取最终滑动停止时的坐标&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;isFinished()&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;用来判断当前滚动是否结束&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;startScroll(int startX, int startY, int dx, int dy)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;用来开始滚动，这个是很重要的一个触发 computeScroll () 的方法，调用这个方法之后，我们就可以在 computeScroll 里面获取滚动的信息，然后完成我们的需要。这个还有一个带有滚动持续时间的重载函数，可以根据需求自由使用。特别要注意这四个参数，startX 和 startY 是开始的坐标位置，正数左上，负数右下，dx、dy 同理，当在 computeScroll () 获取 getCurrX () 的时候，变化范围就与这里地设置有关。&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;overscroller&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#overscroller&#34;&gt;#&lt;/a&gt; OverScroller&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;对超出滑动边界的情况的处理&lt;/p&gt;
&lt;/blockquote&gt;
</content>
        <category term="图形绘制" />
        <updated>2021-11-03T14:09:36.000Z</updated>
    </entry>
    <entry>
        <id>http://onion66.gitee.io/blog/2021/11/03/dY7a31QepeVitGkX/</id>
        <title>自定义View(10) - GestureDetector</title>
        <link rel="alternate" href="http://onion66.gitee.io/blog/2021/11/03/dY7a31QepeVitGkX/"/>
        <content type="html">&lt;h3 id=&#34;gesturedetector&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#gesturedetector&#34;&gt;#&lt;/a&gt; GestureDetector&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;监听器&lt;/th&gt;
&lt;th&gt;简介&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;OnContextClickListener&lt;/td&gt;
&lt;td&gt;这个很容易让人联想到 ContextMenu，然而它和 ContextMenu 并没有什么关系，它是在 Android6.0 (API 23) 才添加的一个选项，是用于检测外部设备上的按钮是否按下的，例如蓝牙触控笔上的按钮，一般情况下，忽略即可。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OnDoubleTapListener&lt;/td&gt;
&lt;td&gt;双击事件，有三个回调类型：双击 (DoubleTap)、单击确认 (SingleTapConfirmed) 和 双击事件回调 (DoubleTapEvent)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OnGestureListener&lt;/td&gt;
&lt;td&gt;手势检测，主要有以下类型事件：按下 (Down)、 一扔 (Fling)、长按 (LongPress)、滚动 (Scroll)、触摸反馈 (ShowPress) 和 单击抬起 (SingleTapUp)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SimpleOnGestureListener&lt;/td&gt;
&lt;td&gt;这个是上述三个接口的空实现，一般情况下使用这个比较多，也比较方便&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 1.创建一个监听回调&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;SimpleOnGestureListener listener = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; SimpleOnGestureListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;onDoubleTap&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(MotionEvent e)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Toast.makeText(MainActivity.&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;双击666&amp;quot;&lt;/span&gt;, Toast.LENGTH_SHORT).show();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;super&lt;/span&gt;.onDoubleTap(e);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 2.创建一个检测器&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; GestureDetector detector = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; GestureDetector(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, listener);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 3.给监听器设置数据源&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;view.setOnTouchListener(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; View.OnTouchListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;onTouch&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(View v, MotionEvent event)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; detector.onTouchEvent(event);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;scalegesturedetector&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#scalegesturedetector&#34;&gt;#&lt;/a&gt; ScaleGestureDetector&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Android 缩放手势检测 ScaleGestureDetector，在大多数的情况下缩放手势都不是单独存在的，需要配合其它的手势来使用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;sample&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sample&#34;&gt;#&lt;/a&gt; sample&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;ScaleGestureDemoView&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;View&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; String TAG = &lt;span class=&#34;string&#34;&gt;&amp;quot;ScaleGestureDemoView&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; ScaleGestureDetector mScaleGestureDetector;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;ScaleGestureDemoView&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Context context)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;super&lt;/span&gt;(context);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;ScaleGestureDemoView&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Context context, &lt;span class=&#34;meta&#34;&gt;@Nullable&lt;/span&gt; AttributeSet attrs)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;super&lt;/span&gt;(context, attrs);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        initScaleGestureDetector();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;initScaleGestureDetector&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mScaleGestureDetector = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ScaleGestureDetector(getContext(), &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ScaleGestureDetector.SimpleOnScaleGestureListener() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;onScaleBegin&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(ScaleGestureDetector detector)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;onScale&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(ScaleGestureDetector detector)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                Log.i(TAG, &lt;span class=&#34;string&#34;&gt;&amp;quot;focusX = &amp;quot;&lt;/span&gt; + detector.getFocusX());       &lt;span class=&#34;comment&#34;&gt;// 缩放中心，x坐标&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                Log.i(TAG, &lt;span class=&#34;string&#34;&gt;&amp;quot;focusY = &amp;quot;&lt;/span&gt; + detector.getFocusY());       &lt;span class=&#34;comment&#34;&gt;// 缩放中心y坐标&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                Log.i(TAG, &lt;span class=&#34;string&#34;&gt;&amp;quot;scale = &amp;quot;&lt;/span&gt; + detector.getScaleFactor());   &lt;span class=&#34;comment&#34;&gt;// 缩放因子&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;onScaleEnd&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(ScaleGestureDetector detector)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;onTouchEvent&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(MotionEvent event)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mScaleGestureDetector.onTouchEvent(event);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
        <category term="图形绘制" />
        <updated>2021-11-03T14:08:39.000Z</updated>
    </entry>
    <entry>
        <id>http://onion66.gitee.io/blog/2021/11/03/z3aQsRLVolBbFVsl/</id>
        <title>自定义View(9) - 事件分发</title>
        <link rel="alternate" href="http://onion66.gitee.io/blog/2021/11/03/z3aQsRLVolBbFVsl/"/>
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;事件分发的过程其实也就是事件传递过程。事件传递的顺序由 Acticity 传递到根 View，这个根 View 通常是一个 ViewGroup (ViewGroup 本身也是 View 的子类)，然后再传递给 ViewGroup 下的子 View, 若事件在自上而下的传递过程中一直没有被消费，则事件会反向向上传递，此时父 ViewGroup 可以对事件进行消费，若仍然没有被消费的话，最后会回到 Activity 的 onTouchEvent&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以很多时候如果有冲突的话，最先消费的是最底部的子 View&lt;br&gt;
&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/03/IE3gqf.png&#34; alt=&#34;IE3gqf.png&#34;&gt;&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h3 id=&#34;事件分发method&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#事件分发method&#34;&gt;#&lt;/a&gt; 事件分发 Method&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;方法&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;作用&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;调用时刻&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;dispatchTouchEvent()&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;用来进行事件传递&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;如果事件能够传递给当前 View，那么此方法一定会被调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;onInterceptTouchEvent()&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;用来是否拦截事件&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;如果当前 View 拦截了某个事件，那么在同一个事件序列当中，此方法不会被再次调用&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;onTouchEvent()&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;处理事件&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;在 dispatchTouchEvent () 方法中调用&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;事件分发顺序&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#事件分发顺序&#34;&gt;#&lt;/a&gt; 事件分发顺序&lt;/h3&gt;
&lt;p&gt;Activity&amp;amp;Window&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;dispatchTouchEvent&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(MotionEvent ev)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (ev.getAction() == MotionEvent.ACTION_DOWN) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        onUserInteraction();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 当事件没有被任何子View 消费时,即这里为false时,最终执行自己的nTouchEvent&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (getWindow().superDispatchTouchEvent(ev)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; onTouchEvent(ev);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;DecorView (FrameLayout 的子类)&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;PhoneWindow&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Window&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;MenuBuilder&lt;/span&gt;.&lt;span class=&#34;title&#34;&gt;Callback&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;superDispatchTouchEvent&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(MotionEvent event)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; mDecor.superDispatchTouchEvent(event);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;DecorView&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;FrameLayout&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;implements&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;RootViewSurfaceTaker&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &lt;span class=&#34;comment&#34;&gt;//FrameLayout 并没有重写dispatchTouchEvent方法，所以事件开始交由 ViewGroup 的 dispatchTouchEvent 开始分发了&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;superDispatchTouchEvent&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(MotionEvent event)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;super&lt;/span&gt;.dispatchTouchEvent(event);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;ViewGroup&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;判断事件是够需要被 ViewGroup 拦截&lt;/li&gt;
&lt;li&gt;遍历所有子 View，逐个分发事件&lt;/li&gt;
&lt;li&gt;将事件交给 ViewGroup 自己或者目标子 View 处理&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;dispatchTouchEvent&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(MotionEvent ev)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; handled = &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (onFilterTouchEventForSecurity(ev)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; action = ev.getAction();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 先检验事件是否需要被ViewGroup拦截&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; intercepted;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (actionMasked == MotionEvent.ACTION_DOWN || mFirstTouchTarget != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 校验是否给mGroupFlags设置了FLAG_DISALLOW_INTERCEPT标志位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; disallowIntercept = (mGroupFlags &amp;amp; FLAG_DISALLOW_INTERCEPT) != &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!disallowIntercept) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 走onInterceptTouchEvent判断是否拦截事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                intercepted = onInterceptTouchEvent(ev);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                intercepted = &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            intercepted = &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; split = (mGroupFlags &amp;amp; FLAG_SPLIT_MOTION_EVENTS) != &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!canceled &amp;amp;&amp;amp; !intercepted) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 注意ACTION_DOWN等事件才会走遍历所有子View的流程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (actionMasked == MotionEvent.ACTION_DOWN&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    || (split &amp;amp;&amp;amp; actionMasked == MotionEvent.ACTION_POINTER_DOWN)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    || actionMasked == MotionEvent.ACTION_HOVER_MOVE) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 开始遍历所有子View开始逐个分发事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; childrenCount = mChildrenCount;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (childrenCount != &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = childrenCount - &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;; i &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i--) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;comment&#34;&gt;// 判断触摸点是否在这个View的内部&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; View child = children[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!canViewReceivePointerEvents(child)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                                || !isTransformedTouchPointInView(x, y, child, &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;comment&#34;&gt;// 事件被子View消费，退出循环，不再继续分发给其他子View&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (dispatchTransformedTouchEvent(ev, &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;, child, idBitsToAssign)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            &lt;span class=&#34;comment&#34;&gt;// addTouchTarget内部将mFirstTouchTarget设置为child，即不为null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            newTouchTarget = addTouchTarget(child, idBitsToAssign);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            alreadyDispatchedToNewTouchTarget = &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 事件未被任何子View消费，自己处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (mFirstTouchTarget == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// No touch targets so treat this as an ordinary view.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            handled = dispatchTransformedTouchEvent(ev, canceled, &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    TouchTarget.ALL_POINTER_IDS);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 将MotionEvent.ACTION_DOWN后续事件分发给mFirstTouchTarget指向的View&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            TouchTarget predecessor = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            TouchTarget target = mFirstTouchTarget;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (target != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; TouchTarget next = target.next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 如果已经在上面的遍历过程中传递过事件，跳过本次传递&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (alreadyDispatchedToNewTouchTarget &amp;amp;&amp;amp; target == newTouchTarget) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    handled = &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; cancelChild = resetCancelNextUpFlag(target.child)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            || intercepted;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (dispatchTransformedTouchEvent(ev, cancelChild,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                            target.child, target.pointerIdBits)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                        handled = &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                predecessor = target;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                target = next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// Update list of touch targets for pointer up or cancel, if needed.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (canceled&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                || actionMasked == MotionEvent.ACTION_UP&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                || actionMasked == MotionEvent.ACTION_HOVER_MOVE) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            resetTouchState();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (split &amp;amp;&amp;amp; actionMasked == MotionEvent.ACTION_POINTER_UP) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; actionIndex = ev.getActionIndex();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; idBitsToRemove = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; ev.getPointerId(actionIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            removePointersFromTouchTargets(idBitsToRemove);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; handled;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;resetTouchState&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    clearTouchTargets();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    resetCancelNextUpFlag(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mGroupFlags &amp;amp;= ~FLAG_DISALLOW_INTERCEPT;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;clearTouchTargets&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    TouchTarget target = mFirstTouchTarget;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (target != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;do&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            TouchTarget next = target.next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            target.recycle();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            target = next;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;while&lt;/span&gt; (target != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mFirstTouchTarget = &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; TouchTarget &lt;span class=&#34;title&#34;&gt;addTouchTarget&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(View child, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; pointerIdBits)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    TouchTarget target = TouchTarget.obtain(child, pointerIdBits);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    target.next = mFirstTouchTarget;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mFirstTouchTarget = target;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; target;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;dispatchTransformedTouchEvent&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(MotionEvent event, &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; cancel,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;params&#34;&gt;&lt;span class=&#34;function&#34;&gt;                                              View child, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; desiredPointerIdBits)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; handled;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 注意传参child为null时，调用的是自己的dispatchTouchEvent&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (child == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        handled = &lt;span class=&#34;keyword&#34;&gt;super&lt;/span&gt;.dispatchTouchEvent(event);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        handled = child.dispatchTouchEvent(transformedEvent);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; handled;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;onInterceptTouchEvent&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(MotionEvent ev)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 默认不拦截事件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;View:&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;dispatchTouchEvent&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(MotionEvent event)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (onFilterTouchEventForSecurity(event)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        	&lt;span class=&#34;comment&#34;&gt;// 判断事件是否先交给ouTouch方法处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (mOnTouchListener != &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt; &amp;amp;&amp;amp; (mViewFlags &amp;amp; ENABLED_MASK) == ENABLED &amp;amp;&amp;amp;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                    mOnTouchListener.onTouch(&lt;span class=&#34;keyword&#34;&gt;this&lt;/span&gt;, event)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// onTouch未消费事件，传给onTouchEvent&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (onTouchEvent(event)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;综上&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#综上&#34;&gt;#&lt;/a&gt; 综上&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;View 事件分发的本质是递归。&lt;/li&gt;
&lt;li&gt;递归的本质是，任务的下发和结果的上报。&lt;/li&gt;
&lt;li&gt;View 事件分发设计成递归，是为了配合 View 的排版规则，形成符合用户直觉的触控体验。&lt;/li&gt;
&lt;li&gt;View 事件分发的对象是一个 MotionEvent。&lt;/li&gt;
&lt;li&gt;一次用户触控操作包含多个 MotionEvent（例如从 ACTION_DOWN 到 ACTION_UP ），也即会走多次事件分发流程。&lt;/li&gt;
&lt;li&gt;一次 View 事件分发流程包含 “递” 流程和 “归” 流程，“递” 流程可以因 ViewGroup 的拦截而提前步入 “归” 流程。&lt;/li&gt;
&lt;li&gt;child 可以通过 getParent.requestDisallowInterceptTouchEvent 阻止父容器的拦截。因而需要差异化地配置阈值，来确保 child 执行 getParent.requestDisallowInterceptTouchEvent 优先于父容器 onInterceptTouchEvent 返回 true（不然都先被拦截了，child 哪有机会阻止？）&lt;/li&gt;
&lt;li&gt;在 “归” 流程中，唯有当前层级的 super.dispatchTouchEvent 返回了 true，才认定被消费，被消费前，下级都有干活，只是结果不 OK。被消费后，上级都不需要干活，直接向上传达消费者的功。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;事件冲突解决&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#事件冲突解决&#34;&gt;#&lt;/a&gt; 事件冲突解决&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;从父 View 着手，重写 onInterceptTouchEvent 方法，在父 View 需要拦截的时候拦截，不要的时候返回 false&lt;/li&gt;
&lt;li&gt;从子 View 着手，重写子 View 的 dispatchTouchEvent 方法，在 Action_down 动作中通过方法 requestDisallowInterceptTouchEvent（true） 先请求 父 View 不要拦截事件，这样保证子 View 能够接受到 Action_move 事件，再在 Action_move 动作中根据自己的逻辑是否要拦截事件，不需要拦截事件的话再交给 父 View 处理&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;refer&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#refer&#34;&gt;#&lt;/a&gt; Refer&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC82ODQ0OTAzODk0MTAzODgzNzg5&#34;&gt;学习 View 事件分发，就像外地人上了黑车！ - 掘金 (juejin.cn)&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9qdWVqaW4uY24vcG9zdC82OTY1NjQ5MTk0NzQ0ODA3NDYx&#34;&gt; View 事件分发机制，看这一篇就够了 - 掘金 (juejin.cn)&lt;/span&gt;&lt;br&gt;
&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyODk4MDIvYXJ0aWNsZS9kZXRhaWxzLzg2MTY5OTM5&#34;&gt; Android 手把手进阶自定义 View（十）- 事件分发机制解析_lerendan 的博客 - CSDN 博客&lt;/span&gt;&lt;/p&gt;
</content>
        <category term="图形绘制" />
        <updated>2021-11-03T14:07:31.000Z</updated>
    </entry>
    <entry>
        <id>http://onion66.gitee.io/blog/2021/11/03/p4CRfuQemJ4TOlAs/</id>
        <title>自定义View(8) - draw 绘制过程</title>
        <link rel="alternate" href="http://onion66.gitee.io/blog/2021/11/03/p4CRfuQemJ4TOlAs/"/>
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;Android 里面的绘制都是按顺序的，先绘制的内容会被后绘制的盖住&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/03/IES7KP.png&#34; alt=&#34;IES7KP.png&#34;&gt;&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h3 id=&#34;draw-过程解析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#draw-过程解析&#34;&gt;#&lt;/a&gt; draw 过程解析&lt;/h3&gt;
&lt;p&gt;一个完整的绘制过程会依次绘制以下几个内容：&lt;br&gt;
&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/03/IEp3Ie.png&#34; alt=&#34;IEp3Ie.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;drawBackground()&lt;/code&gt;  绘制背景
&lt;ul&gt;
&lt;li&gt;这个方法是 private 的，不能重写，你如果要设置背景，只能用自带的 API 去设置&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onDraw()&lt;/code&gt;  绘制主体
&lt;ul&gt;
&lt;li&gt;这个方法在 View 和 ViewGroup 里都是空实现，因此自定义时需要复写&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;dispatchDraw()&lt;/code&gt;  绘制子 View
&lt;ul&gt;
&lt;li&gt;在于单一 View 中无子 View，故在 View 中此方法默认为空实&lt;/li&gt;
&lt;li&gt;在 ViewGroup 中系统已经复写好此方法对其子视图进行绘制因此我们不需要复写&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onDrawForeground()&lt;/code&gt;  滑动边缘渐变和滑动条以及前景&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ViewGroup 中的 &lt;code&gt;dispatchDraw()&lt;/code&gt; :&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;dispatchDraw&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Canvas canvas)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; usingRenderNodeProperties = canvas.isRecordingFor(mRenderNode);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; childrenCount = mChildrenCount;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; View[] children = mChildren;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; flags = mGroupFlags;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 动画处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((flags &amp;amp; FLAG_RUN_ANIMATION) != &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; canAnimate()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; buildCache = !isHardwareAccelerated();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; childrenCount; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; View child = children[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((child.mViewFlags &amp;amp; VISIBILITY_MASK) == VISIBLE) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; LayoutParams params = child.getLayoutParams();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                attachLayoutAnimationParameters(child, params, i, childrenCount);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                bindLayoutAnimation(child);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        controller.start();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 间距处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; clipSaveCount = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; clipToPadding = (flags &amp;amp; CLIP_TO_PADDING_MASK) == CLIP_TO_PADDING_MASK;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (clipToPadding) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        clipSaveCount = canvas.save(Canvas.CLIP_SAVE_FLAG);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        canvas.clipRect(mScrollX + mPaddingLeft, mScrollY + mPaddingTop,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                mScrollX + mRight - mLeft - mPaddingRight,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                mScrollY + mBottom - mTop - mPaddingBottom);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 遍历子View&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; childrenCount; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt;            if ((transientChild.mViewFlags &amp;amp; VISIBILITY_MASK) == VISIBLE ||transientChild.getAnimation() != null) &amp;#123;
                // // 2. 绘制子View视图    
                more |= drawChild(canvas, transientChild, drawingTime);
            &amp;#125;
        ...
    &amp;#125;
&amp;#125;
&lt;/code&gt;&lt;/pre&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;### draw顺序&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;####  onDraw() &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; 自定义绘制最基本的形态：继承 View 类，在 onDraw() 中完全自定义它的绘制&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;定义 View 时，绘制代码写在 super.onDraw() 的上面还是下面都无所谓,但基于已有控件的自定义绘制，就不能不考虑 `super.onDraw()` 了，你需要根据自己的需求，判断出你绘制的内容需要盖住控件原有的内容还是需要被控件原有的内容盖住，从而确定你的绘制代码是应该写在 super.onDraw() 的上面还是下面。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|上面| 下面 |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;|:--:|:--:|&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;| ![IEFrgH.png](https://z3.ax1x.com/2021/11/03/IEFrgH.png)  | ![IEFHrn.png](https://z3.ax1x.com/2021/11/03/IEFHrn.png) |&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#### dispatchDraw()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt;  如果想在一个ViewGroup中按上面的做法在下面添加绘制内容则是不行的,因为在绘制过程中每一个 ViewGroup 会先调用自己的 onDraw() 来绘制完自己的主体之后再去绘制它的子 View,会覆盖其主体&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;![IEEpH1.png](https://z3.ax1x.com/2021/11/03/IEEpH1.png)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;public class SpottedLinearLayout extends LinearLayout {&lt;br&gt;
…&lt;br&gt;
// 把 onDraw () 换成了 dispatchDraw ()&lt;br&gt;
protected void dispatchDraw(Canvas canvas) {&lt;br&gt;
super.dispatchDraw(canvas);&lt;br&gt;
… // 绘制斑点&lt;br&gt;
}&lt;br&gt;
}&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;虽然 View 和 ViewGroup 都有 dispatchDraw() 方法，不过由于 View 是没有子 View 的，所以一般来说 dispatchDraw() 这个方法只对 ViewGroup（以及它的子类）有意义。&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;#### onDrawForeground()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;gt; 前景前后处理&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;在 super.onDrawForeground() 的上面&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;```java&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;public class AppImageView extends ImageView &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    public void onDrawForeground(Canvas canvas) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       ... // 绘制「New」标签&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       super.onDrawForeground(canvas);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/03/IEVgSS.png&#34; alt=&#34;IEVgSS.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;在 super.onDrawForeground () 的下面:&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;AppImageView&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;extends&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;ImageView&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;onDrawForeground&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Canvas canvas)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;super&lt;/span&gt;.onDrawForeground(canvas);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       ... &lt;span class=&#34;comment&#34;&gt;// 绘制「New」标签&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/03/IEZV0A.png&#34; alt=&#34;IEZV0A.png&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;draw&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#draw&#34;&gt;#&lt;/a&gt; draw()&lt;/h4&gt;
&lt;h3 id=&#34;总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#总结&#34;&gt;#&lt;/a&gt; 总结&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/03/IEZ1XQ.png&#34; alt=&#34;IEZ1XQ.png&#34;&gt;&lt;/p&gt;
</content>
        <category term="图形绘制" />
        <updated>2021-11-03T14:03:38.000Z</updated>
    </entry>
    <entry>
        <id>http://onion66.gitee.io/blog/2021/11/03/ZyOr4iLxJj7nAQxR/</id>
        <title>自定义View(7) - layout 布局过程</title>
        <link rel="alternate" href="http://onion66.gitee.io/blog/2021/11/03/ZyOr4iLxJj7nAQxR/"/>
        <content type="html">&lt;p&gt;&lt;img data-src=&#34;https://s2.ax1x.com/2019/12/06/QJQEcR.jpg&#34; alt=&#34;viewasds&#34;&gt;&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h3 id=&#34;layout-类型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#layout-类型&#34;&gt;#&lt;/a&gt; layout 类型&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/03/IA7tv4.png&#34; alt=&#34;IA7tv4.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;view-的-layout-过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#view-的-layout-过程&#34;&gt;#&lt;/a&gt; View 的 layout 过程&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 指定视图及其所有子视图的大小和位置 这是布局机制的第二阶段&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;layout&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; t, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; r, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; b)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 判断是否measure,没有的话再measure一遍&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((mPrivateFlags3 &amp;amp; PFLAG3_MEASURE_NEEDED_BEFORE_LAYOUT) != &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        onMeasure(mOldWidthMeasureSpec, mOldHeightMeasureSpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        mPrivateFlags3 &amp;amp;= ~PFLAG3_MEASURE_NEEDED_BEFORE_LAYOUT;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 当前视图的四个顶点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; oldL = mLeft;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; oldT = mTop;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; oldB = mBottom;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; oldR = mRight;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 判断视图大小或者位置是否发生改变&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; changed = isLayoutModeOptical(mParent) ?&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            setOpticalFrame(l, t, r, b) : setFrame(l, t, r, b);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 发生改变        &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (changed || (mPrivateFlags &amp;amp; PFLAG_LAYOUT_REQUIRED) == PFLAG_LAYOUT_REQUIRED) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        onLayout(changed, l, t, r, b);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 对于单一View的laytou过程：由于单一View是没有子View的，故onLayout（）是一个空实现-&amp;gt;&amp;gt;分析3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 对于ViewGroup的laytou过程：由于确定位置与具体布局有关，所以onLayout（）在ViewGroup为1个抽象方法，需重写实现&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/03/IAqjZd.png&#34; alt=&#34;IAqjZd.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;viewgroup-的-layout-过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#viewgroup-的-layout-过程&#34;&gt;#&lt;/a&gt; ViewGroup 的 layout 过程&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;ViewGroup 的 layout 过程确定位置与具体的布局有关，所以在 ViewGroup 中是一个抽象方法，需要重写实现&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;复写 &lt;code&gt; onLayout()&lt;/code&gt;  步骤:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;遍历所有子 View&lt;/li&gt;
&lt;li&gt;根据自身需求计算当前子 View 的四个位置值（需自身实现）&lt;/li&gt;
&lt;li&gt;根据上述 4 个位置的计算值，设置子 View 的 4 个顶点：调用子 View 的 layout 方法，即确定了子 View 在父容器里的位置&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// ViewGroup的onLayout实现的大致思路&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;onLayout&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; changed, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; left, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; top, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; right, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; bottom)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;comment&#34;&gt;// 参数说明&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;comment&#34;&gt;// changed 当前View的大小和位置改变了 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;comment&#34;&gt;// left 左部位置  top 顶部位置  right 右部位置  bottom 底部位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;comment&#34;&gt;// 1. 遍历子View：循环所有子View&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i&amp;lt;getChildCount(); i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         View child = getChildAt(i);   &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         &lt;span class=&#34;comment&#34;&gt;// 2. 计算当前子View的四个位置值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         &lt;span class=&#34;comment&#34;&gt;// 2.1 位置的计算逻辑需自己实现，也是自定义View的关键&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         calculate();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         &lt;span class=&#34;comment&#34;&gt;// 2.2 对计算后的位置值进行赋值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; mLeft  = Left&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; mTop  = Top&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; mRight = Right&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; mBottom = Bottom&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;comment&#34;&gt;// 3. 根据上述4个位置的计算值设置子View的4个顶点：调用子view的layout() &amp;amp; 传递计算过的参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;comment&#34;&gt;// 即确定了子View在父容器的位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       child.layout(mLeft, mTop, mRight, mBottom);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;comment&#34;&gt;// 该过程类似于单一View的layout过程中的layout()和onLayout()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/03/IAL1L4.png&#34; alt=&#34;IAL1L4.png&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;viewgroup-子类linearlayout的-layout-过程分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#viewgroup-子类linearlayout的-layout-过程分析&#34;&gt;#&lt;/a&gt; ViewGroup 子类（LinearLayout）的 layout 过程分析&lt;/h4&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;onLayout&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;boolean&lt;/span&gt; changed, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; l, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; t, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; r, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; b)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 根据自身方向属性，而选择不同的处理方式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (mOrientation == VERTICAL) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        layoutVertical(l, t, r, b);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        layoutHorizontal(l, t, r, b);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;根据 LinearLayout 的方向（vertical、horizontal）进入不同的布局过程，这里我们只选垂直方向的布局过程，即 layoutVertical ()&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;layoutVertical&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; left, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; top, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; right, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; bottom)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 子View的数量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; count = getVirtualChildCount();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 1. 遍历子View&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; count; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; View child = getVirtualChildAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (child == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            childTop += measureNullChild(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (child.getVisibility() != GONE) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 2. 计算子View的测量宽 / 高值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; childWidth = child.getMeasuredWidth();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; childHeight = child.getMeasuredHeight();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 3. 确定自身子View的位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 即：递归调用子View的setChildFrame()，实际上是调用了子View的layout() -&amp;gt;&amp;gt;分析2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            setChildFrame(child, childLeft, childTop + getLocationOffset(child), childWidth, childHeight);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// childTop逐渐增大，即后面的子元素会被放置在靠下的位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 这符合垂直方向的LinearLayout的特性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            childTop += childHeight + lp.bottomMargin + getNextLocationOffset(child);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            i += getChildrenSkipCount(child, i);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;setChildFrame&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;( View child, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; left, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; top, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; width, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; height)&lt;/span&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// setChildFrame（）仅仅只是调用了子View的layout（）而已&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    child.layout(left, top, left ++ width, top + height);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 在子View的layout（）又通过调用setFrame（）确定View的四个顶点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 即确定了子View的位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 如此不断循环确定所有子View的位置，最终确定ViewGroup的位置&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;getmeasurewidth-和-getwidth-区别&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#getmeasurewidth-和-getwidth-区别&#34;&gt;#&lt;/a&gt; getMeasureWidth 和 getWidth 区别&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;某些情况下，View 需要多次 measure 才能确定自己的测量宽高，在前几次的测量过程中，其得出的测量宽高有可能和最终宽高不一致.，但最终来说，测量宽高还是和最终宽高相同。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/03/IAjrmF.png&#34; alt=&#34;IAjrmF.png&#34;&gt;&lt;/p&gt;
</content>
        <category term="图形绘制" />
        <updated>2021-11-03T14:02:46.000Z</updated>
    </entry>
    <entry>
        <id>http://onion66.gitee.io/blog/2021/11/03/Qj9f1VMJJowv5Lfb/</id>
        <title>自定义View(6) - measure 测量过程</title>
        <link rel="alternate" href="http://onion66.gitee.io/blog/2021/11/03/Qj9f1VMJJowv5Lfb/"/>
        <content type="html">&lt;p&gt;&lt;img data-src=&#34;https://s2.ax1x.com/2019/12/06/QJQEcR.jpg&#34; alt=&#34;QJQEcR.jpg&#34;&gt;&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h3 id=&#34;measurespec&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#measurespec&#34;&gt;#&lt;/a&gt; MeasureSpec&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;MeasureSpec 代表测量规格，是一个 32 位的 int 值，高 2 位代表 SpecMode（测量模式），低 30 位代表 SpecSize（测量大小）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/02/IF7OM9.png&#34; alt=&#34;IF7OM9.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;MeasureSpec 通过将 SpecMode 和 SpecSize 打包成一个 int 值来避免过多的内存分配，并提供了打包和解包的方法&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;onMeasure&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; widthMeasureSpec, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; heightMeasureSpec)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; widthMode = MeasureSpec.getMode(widthMeasureSpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; widthSize = MeasureSpec.getSize(widthMeasureSpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; heightMode = MeasureSpec.getMode(heightMeasureSpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; heightSize = MeasureSpec.getSize(heightMeasureSpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;specmode&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#specmode&#34;&gt;#&lt;/a&gt; SpecMode&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/02/IFbTc4.png&#34; alt=&#34;IFbTc4.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;measurespec值计算&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#measurespec值计算&#34;&gt;#&lt;/a&gt; MeasureSpec 值计算&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;View 的 MeasureSpec 值是由 View 的布局参数和父容器 的 MeasureSpec 值计算&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/03/IAVp1e.png&#34; alt=&#34;IAVp1e.png&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 源码分析：getChildMeasureSpec（）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 作用：根据父视图的MeasureSpec &amp;amp; 布局参数LayoutParams，计算单个子View的MeasureSpec&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 注：子view的大小由父view的MeasureSpec值 和 子view的LayoutParams属性 共同决定&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 参数说明&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; spec           父view的详细测量值 (MeasureSpec)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; padding        view当前尺寸的的内边距和外边距(padding, margin)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; childDimension 子视图的布局参数（宽 / 高）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; **/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;getChildMeasureSpec&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; spec, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; padding, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; childDimension)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//父view的测量模式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; specMode = MeasureSpec.getMode(spec);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//父view的大小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; specSize = MeasureSpec.getSize(spec);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//通过父view计算出的子view大小 = 父大小-边距（父要求的大小，但子view不一定用这个值）   &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; size = Math.max(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, specSize - padding);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//子view想要的实际大小和模式（需要计算）  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; resultSize = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; resultMode = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//通过父view的MeasureSpec和子view的LayoutParams确定子view的大小  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;switch&lt;/span&gt; (specMode) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//当父view的模式为EXACITY时，父view强加给子view确切的值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;//一般是父view设置为match_parent或者固定值的ViewGroup &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; MeasureSpec.EXACTLY:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 当子view的LayoutParams&amp;gt;0，即有确切的值  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (childDimension &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//子view大小为子自身所赋的值，模式大小为EXACTLY  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                resultSize = childDimension;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                resultMode = MeasureSpec.EXACTLY;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//当子view的LayoutParams为MATCH_PARENT时(-1)  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (childDimension == LayoutParams.MATCH_PARENT) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//子view大小为父view大小，模式为EXACTLY  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                resultSize = size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                resultMode = MeasureSpec.EXACTLY;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 当子view的LayoutParams为WRAP_CONTENT时(-2)      &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (childDimension == LayoutParams.WRAP_CONTENT) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//子view决定自己的大小，但最大不能超过父view，模式为AT_MOST  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                resultSize = size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                resultMode = MeasureSpec.AT_MOST;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 当父view的模式为AT_MOST时，父view强加给子view一个最大的值。（一般是父view设置为wrap_content）  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; MeasureSpec.AT_MOST:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 道理同上  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (childDimension &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                resultSize = childDimension;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                resultMode = MeasureSpec.EXACTLY;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (childDimension == LayoutParams.MATCH_PARENT) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                resultSize = size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                resultMode = MeasureSpec.AT_MOST;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (childDimension == LayoutParams.WRAP_CONTENT) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                resultSize = size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                resultMode = MeasureSpec.AT_MOST;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 当父view的模式为UNSPECIFIED时，父容器不对view有任何限制，要多大给多大&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 多见于ListView、GridView  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; MeasureSpec.UNSPECIFIED:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (childDimension &amp;gt;= &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 子view大小为子自身所赋的值  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                resultSize = childDimension;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                resultMode = MeasureSpec.EXACTLY;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (childDimension == LayoutParams.MATCH_PARENT) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 因为父view为UNSPECIFIED，所以MATCH_PARENT的话子类大小为0  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                resultSize = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                resultMode = MeasureSpec.UNSPECIFIED;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (childDimension == LayoutParams.WRAP_CONTENT) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// 因为父view为UNSPECIFIED，所以WRAP_CONTENT的话子类大小为0  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                resultSize = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                resultMode = MeasureSpec.UNSPECIFIED;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; MeasureSpec.makeMeasureSpec(resultSize, resultMode);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/03/IAemLj.png&#34; alt=&#34;IAemLj.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;measure-过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#measure-过程&#34;&gt;#&lt;/a&gt; Measure 过程&lt;/h3&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/03/IAuMTA.png&#34; alt=&#34;IAuMTA.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;布局过程自定义的方式&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;重写   &lt;code&gt;onMeasure()&lt;/code&gt;   来修改已有的   &lt;code&gt;View&lt;/code&gt;   的尺寸；&lt;/li&gt;
&lt;li&gt;重写   &lt;code&gt;onMeasure()&lt;/code&gt;   来全新定制自定义   &lt;code&gt;View&lt;/code&gt;   的尺寸；&lt;/li&gt;
&lt;li&gt;重写   &lt;code&gt;onMeasure()&lt;/code&gt;   和   &lt;code&gt;onLayout()&lt;/code&gt;   来全新定制自定义   &lt;code&gt;ViewGroup&lt;/code&gt;   的内部布局。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;view的measure&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#view的measure&#34;&gt;#&lt;/a&gt; View 的 measure&lt;/h4&gt;
&lt;p&gt;View 的 measure 过程由其 &lt;code&gt;measure()&lt;/code&gt;  方法完成：&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;* 源码分析：measure（）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;* 定义：Measure过程的入口；属于View.java类 &amp;amp; final类型，即子类不能重写此方法&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;* 作用：基本测量逻辑的判断&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;**/&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;measure&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; widthMeasureSpec, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; heightMeasureSpec)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 判断是否需要重新测量           &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (forceLayout || needsLayout) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 判断是否有缓存&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; cacheIndex = forceLayout ? -&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; : mMeasureCache.indexOfKey(key);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (cacheIndex &amp;lt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; || sIgnoreMeasureCache) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 开始测量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            onMeasure(widthMeasureSpec, heightMeasureSpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            mPrivateFlags3 &amp;amp;= ~PFLAG3_MEASURE_NEEDED_BEFORE_LAYOUT;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;long&lt;/span&gt; value = mMeasureCache.valueAt(cacheIndex);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// Casting a long to int drops the high 32 bits, no mask needed&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            setMeasuredDimensionRaw((&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;) (value &amp;gt;&amp;gt; &lt;span class=&#34;number&#34;&gt;32&lt;/span&gt;), (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt;) value);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            mPrivateFlags3 |= PFLAG3_MEASURE_NEEDED_BEFORE_LAYOUT;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;setMeasuredDimension()&lt;/code&gt;  方法会设置 View 的宽 / 高的测量值，因此我们只需要看 &lt;code&gt;getDefaultSize()&lt;/code&gt;  方法即可&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/03/IAGYZT.png&#34; alt=&#34;IAGYZT.png&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * onMeasure（）要的做是事情&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 1. 根据View宽/高的测量规格计算View的宽/高值：getDefaultSize()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 2. 存储测量后的View宽 / 高：setMeasuredDimension()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; **/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;onMeasure&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; widthMeasureSpec, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; heightMeasureSpec)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     setMeasuredDimension(getDefaultSize(getSuggestedMinimumWidth(), widthMeasureSpec),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;             getDefaultSize(getSuggestedMinimumHeight(), heightMeasureSpec));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;  * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; size        提供的默认大小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;  * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; measureSpec 宽/高的测量规格&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;  */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;public&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;getDefaultSize&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; size, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; measureSpec)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;span class=&#34;comment&#34;&gt;// 设置默认大小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; result = size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;span class=&#34;comment&#34;&gt;// 获取宽/高测量规格的模式 &amp;amp; 测量大小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; specMode = MeasureSpec.getMode(measureSpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; specSize = MeasureSpec.getSize(measureSpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;span class=&#34;keyword&#34;&gt;switch&lt;/span&gt; (specMode) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;comment&#34;&gt;// 模式为UNSPECIFIED时，使用提供的默认大小 = 参数Size&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; MeasureSpec.UNSPECIFIED:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         result = size;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;comment&#34;&gt;// 模式为AT_MOST,EXACTLY时，使用View测量后的宽/高值 = measureSpec中的Size  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; MeasureSpec.AT_MOST:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;       &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; MeasureSpec.EXACTLY:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         result = specSize;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;         &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;span class=&#34;comment&#34;&gt;// 返回View的宽/高值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;     &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;当模式是 UNSPECIFIED 时，使用的是提供的默认大小:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若 View 无设置背景，那么 View 的宽度 = mMinWidth。mMinWidth 为 android:minWidth 属性所指定的值，默认为 0&lt;/li&gt;
&lt;li&gt;若 View 设置了背景，View 的宽度为 mMinWidth 和 mBackground.getMinimumWidth () 中的最大值。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;getSuggestedMinimumWidth&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; (mBackground == &lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;) ? mMinWidth : max(mMinWidth, mBackground.getMinimumWidth());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;过程&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;行为作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/03/IAJ9mV.png&#34; alt=&#34;IAJ9mV.png&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/03/IAJ1te.png&#34; alt=&#34;IAJ1te.png&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;viewgroup的measure&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#viewgroup的measure&#34;&gt;#&lt;/a&gt; ViewGroup 的 measure&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;ViewGroup 是个抽象类，不同 ViewGroup 的 onMeasure 的实现都个不相同，除了完成自己的 measure 过程以外，还会遍历去调用所有子元素的 measure 方法，各个子元素再递归去执行这个过程&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;遍历所有子 View &amp;amp; 测量：measureChildren ()&lt;/li&gt;
&lt;li&gt;合并所有子 View 的尺寸大小，最终得到 ViewGroup 的测量值（需自身实现）&lt;/li&gt;
&lt;li&gt;存储测量后 View 宽 / 高的值：调用 setMeasuredDimension ()&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;onMeasure&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; widthMeasureSpec, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; heightMeasureSpec)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// 定义存放测量后的View宽/高的变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; widthMeasure ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; heightMeasure ;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// 1. 遍历所有子 View &amp;amp; 测量(measureChildren())&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      measureChildren(widthMeasureSpec, heightMeasureSpec)；&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// 2. 合并所有子View的尺寸大小，最终得到ViewGroup父视图的测量值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// 需自身实现&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      measureMerge();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// 3. 存储测量后View宽/高的值：调用setMeasuredDimension()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// 类似单一View的过程，此处不作过多描述&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      setMeasuredDimension(widthMeasure,  heightMeasure);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;measureChildren()&lt;/code&gt;  遍历子 View 并且调用 measureChild () 进行下一步测量&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;measureChildren&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; widthMeasureSpec, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; heightMeasureSpec)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 要求该视图的所有子视图度量自己，同时考虑该视图的MeasureSpec要求及其填充。我们跳过了处于GONE状态的子节点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; size = mChildrenCount;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; View[] children = mChildren;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; size; ++i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; View child = children[i];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ((child.mViewFlags &amp;amp; VISIBILITY_MASK) != GONE) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            measureChild(child, widthMeasureSpec, heightMeasureSpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;过程&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;行为作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/03/IAokqI.png&#34; alt=&#34;IAokqI.png&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/03/IAo1Ln.png&#34; alt=&#34;IAo1Ln.png&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;linearlayout-measure分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linearlayout-measure分析&#34;&gt;#&lt;/a&gt; LinearLayout measure 分析&lt;/h5&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;onMeasure&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; widthMeasureSpec, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; heightMeasureSpec)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 根据不同的布局属性进行不同的计算&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (mOrientation == VERTICAL) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        measureVertical(widthMeasureSpec, heightMeasureSpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        measureHorizontal(widthMeasureSpec, heightMeasureSpec);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;measureVertical&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; widthMeasureSpec, &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; heightMeasureSpec)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 获取垂直方向上的子View个数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; count = getVirtualChildCount();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 遍历子View获取其高度，并记录下子View中最高的高度数值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; i = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;; i &amp;lt; count; ++i) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; View child = getVirtualChildAt(i);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 子View不可见，直接跳过该View的measure过程，getChildrenSkipCount()返回值恒为0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 注：若view的可见属性设置为VIEW.INVISIBLE，还是会计算该view大小&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (child.getVisibility() == View.GONE) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           i += getChildrenSkipCount(child, i);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;           &lt;span class=&#34;keyword&#34;&gt;continue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// 记录子View是否有weight属性设置，用于后面判断是否需要二次measure&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        totalWeight += lp.weight;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (heightMode == MeasureSpec.EXACTLY &amp;amp;&amp;amp; lp.height == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; lp.weight &amp;gt; &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 如果LinearLayout的specMode为EXACTLY且子View设置了weight属性，在这里会跳过子View的measure过程&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 同时标记skippedMeasure属性为true，后面会根据该属性决定是否进行第二次measure&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 若LinearLayout的子View设置了weight，会进行两次measure计算，比较耗时&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 这就是为什么LinearLayout的子View需要使用weight属性时候，最好替换成RelativeLayout布局&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; totalLength = mTotalLength;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            mTotalLength = Math.max(totalLength, totalLength + lp.topMargin + lp.bottomMargin);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            skippedMeasure = &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; oldHeight = Integer.MIN_VALUE;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 步骤1：遍历所有子View &amp;amp; 测量：measureChildren（）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 注：该方法内部，最终会调用measureChildren（），从而 遍历所有子View &amp;amp; 测量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            measureChildBeforeLayout(child, i, widthMeasureSpec, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, heightMeasureSpec, totalWeight == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; ? mTotalLength : &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                   ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;//步骤2：合并所有子View的尺寸大小,最终得到ViewGroup父视图的测量值（自身实现）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; childHeight = child.getMeasuredHeight();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 1. mTotalLength用于存储LinearLayout在竖直方向的高度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;final&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; totalLength = mTotalLength;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;comment&#34;&gt;// 2. 每测量一个子View的高度， mTotalLength就会增加&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            mTotalLength = Math.max(totalLength, totalLength + childHeight + lp.topMargin +&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                           lp.bottomMargin + getNextLocationOffset(child));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 3. 记录LinearLayout占用的总高度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// 即除了子View的高度，还有本身的padding属性值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    mTotalLength += mPaddingTop + mPaddingBottom;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; heightSize = mTotalLength;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; heightSizeAndState = resolveSizeAndState(heightSize, heightMeasureSpec, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//步骤3：存储测量后View宽/高的值：调用setMeasuredDimension()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    setMeasuredDimension(resolveSizeAndState(maxWidth, widthMeasureSpec, childState), heightSizeAndState);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;获取view的宽高&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#获取view的宽高&#34;&gt;#&lt;/a&gt; 获取 View 的宽高&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Activity 启动时，在 onCreate ()、onStart ()、onResume () 中均无法正确的得到某个 View 的宽高信息，这是因为 View 的 measure 过程和 Activity 的生命周期方法不是同步执行的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;onWindowFocusChanged()
&lt;ul&gt;
&lt;li&gt;需要注意的是，onWindowFocusChanged () 会被调用多次，当 Activity 的窗口得到焦点和失去焦点时均会被调用一次。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;View.post(runnable)&lt;/li&gt;
&lt;li&gt;ViewTreeObserver&lt;/li&gt;
&lt;li&gt;手动调用 View 的 measure 方法&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;refer&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#refer&#34;&gt;#&lt;/a&gt; Refer&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTAyODk4MDIvYXJ0aWNsZS9kZXRhaWxzLzgwMTgzMTQy&#34;&gt;Android 知识体系学习目录_lerendan 的博客 - CSDN 博客&lt;/span&gt;&lt;/p&gt;
</content>
        <category term="图形绘制" />
        <updated>2021-11-03T14:00:58.000Z</updated>
    </entry>
    <entry>
        <id>http://onion66.gitee.io/blog/2021/11/03/SA664RldODNgeCrz/</id>
        <title>自定义View(5) - 动画</title>
        <link rel="alternate" href="http://onion66.gitee.io/blog/2021/11/03/SA664RldODNgeCrz/"/>
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;三者性能是一样的，因为 ViewPropertyAnimator 和 ObjectAnimator 的内部实现其实都是 ValueAnimator，ObjectAnimator 更是本来就是 ValueAnimator 的子类，差别只是使用的便捷性以及功能的灵活性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/02/IFf4h9.gif&#34; alt=&#34;IFf4h9.gif&#34;&gt;&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h3 id=&#34;viewpropertyanimator&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#viewpropertyanimator&#34;&gt;#&lt;/a&gt; ViewPropertyAnimator&lt;/h3&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;view.animate()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .scaleX(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .scaleY(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        .alpha(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;objectanimator&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#objectanimator&#34;&gt;#&lt;/a&gt; ObjectAnimator&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;多个动画配合执行&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;PropertyValuesHolder holder1 = PropertyValuesHolder.ofFloat(&lt;span class=&#34;string&#34;&gt;&amp;quot;scaleX&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PropertyValuesHolder holder2 = PropertyValuesHolder.ofFloat(&lt;span class=&#34;string&#34;&gt;&amp;quot;scaleY&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PropertyValuesHolder holder3 = PropertyValuesHolder.ofFloat(&lt;span class=&#34;string&#34;&gt;&amp;quot;alpha&amp;quot;&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;ObjectAnimator animator = ObjectAnimator.ofPropertyValuesHolder(view, holder1, holder2, holder3)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;animator.start();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;valueanimator&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#valueanimator&#34;&gt;#&lt;/a&gt; ValueAnimator&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;ValueAnimator 本身不作用于任何一个属性，也不提供任何一种动画。它就是一个数值发生器，可以产生想要的各种数值&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;ValueAnimator 并不常用，因为它的功能太基础了。ValueAnimator 是 ObjectAnimator 的父类，实际上，ValueAnimator 就是一个不能指定目标对象版本的 ObjectAnimato&lt;/p&gt;
</content>
        <category term="图形绘制" />
        <updated>2021-11-03T13:59:44.000Z</updated>
    </entry>
    <entry>
        <id>http://onion66.gitee.io/blog/2021/11/03/ZOnr24kULe7cQgsc/</id>
        <title>自定义View(4) - Canvas相关</title>
        <link rel="alternate" href="http://onion66.gitee.io/blog/2021/11/03/ZOnr24kULe7cQgsc/"/>
        <content type="html">&lt;h3 id=&#34;范围裁切&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#范围裁切&#34;&gt;#&lt;/a&gt; 范围裁切&lt;/h3&gt;
&lt;h4 id=&#34;cliprect&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cliprect&#34;&gt;#&lt;/a&gt; clipRect&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/02/IFKTER.png&#34; alt=&#34;IFKTER.png&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;canvas.clipRect(left, top, right, bottom);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.drawBitmap(bitmap, x, y, paint);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 加上 Canvas.save() 和 Canvas.restore() 来及时恢复绘制范围&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.save();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.clipRect(left, top, right, bottom);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.drawBitmap(bitmap, x, y, paint);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.restore();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h4 id=&#34;clippath&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#clippath&#34;&gt;#&lt;/a&gt; clipPath&lt;/h4&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/02/IFM9UI.md.png&#34; alt=&#34;IFM9UI.md.png&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;canvas.save();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.clipPath(path1);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.drawBitmap(bitmap, point1.x, point1.y, paint);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.restore();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.save();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.clipPath(path2);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.drawBitmap(bitmap, point2.x, point2.y, paint);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.restore();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;几何变换&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#几何变换&#34;&gt;#&lt;/a&gt; 几何变换&lt;/h3&gt;
&lt;h4 id=&#34;二维变换&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#二维变换&#34;&gt;#&lt;/a&gt; 二维变换&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;处理常见的二维变换&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Canvas.translate()&lt;/code&gt;  平移&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Canvas.rotate()&lt;/code&gt;  旋转&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Canvas.scale()&lt;/code&gt;  缩放&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Canvas.skew()&lt;/code&gt;  错切&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;matrix变换&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#matrix变换&#34;&gt;#&lt;/a&gt; Matrix 变换&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;用来处理不常见的二维变换&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/02/IFn6qs.png&#34; alt=&#34;IFn6qs.png&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Canvas.setMatrix(matrix)&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;用  &lt;code&gt;Matrix&lt;/code&gt;  直接替换  &lt;code&gt;Canvas&lt;/code&gt;  当前的变换矩阵，即抛弃  &lt;code&gt;Canvas&lt;/code&gt;  当前的变换&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Canvas.concat(matrix)&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;用  &lt;code&gt;Canvas&lt;/code&gt;  当前的变换矩阵和  &lt;code&gt;Matrix&lt;/code&gt;  相乘，即基于  &lt;code&gt;Canvas&lt;/code&gt;  当前的变换，叠加上  &lt;code&gt;Matrix&lt;/code&gt;  中的变换&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Matrix matrix = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Matrix();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;float&lt;/span&gt; pointsSrc = &amp;#123;left, top, right, top, left, bottom, right, bottom&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;float&lt;/span&gt; pointsDst = &amp;#123;left - &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;, top + &lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;, right + &lt;span class=&#34;number&#34;&gt;120&lt;/span&gt;, top - &lt;span class=&#34;number&#34;&gt;90&lt;/span&gt;, left + &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;, bottom + &lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;, right + &lt;span class=&#34;number&#34;&gt;20&lt;/span&gt;, bottom + &lt;span class=&#34;number&#34;&gt;60&lt;/span&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;matrix.reset();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;matrix.setPolyToPoly(pointsSrc, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, pointsDst, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.save();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.concat(matrix);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.drawBitmap(bitmap, x, y, paint);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.restore();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;camera&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#camera&#34;&gt;#&lt;/a&gt; Camera&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;处理三维旋转&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5 id=&#34;camerarotate&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#camerarotate&#34;&gt;#&lt;/a&gt; Camera.rotate*&lt;/h5&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/02/IFZoMd.md.png&#34; alt=&#34;IFZoMd.md.png&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Camera camera =  &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt;  Camera();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Point point1 = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Point(&lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Point point2 = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; Point(&lt;span class=&#34;number&#34;&gt;600&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;protected&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;onDraw&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(Canvas canvas)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   canvas.save();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   camera.save(); &lt;span class=&#34;comment&#34;&gt;// 保存 Camera 的状态&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   camera.rotateX(&lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// 旋转 Camera 的三维空间&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   camera.applyToCanvas(canvas); &lt;span class=&#34;comment&#34;&gt;// 把旋转投影到 Canvas&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   camera.restore(); &lt;span class=&#34;comment&#34;&gt;// 恢复 Camera 的状态&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   canvas.drawBitmap(bitmap, point1.x, point1.y, paint);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;   canvas.restore();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;居中处理:&lt;br&gt;
&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/02/IFesfS.png&#34; alt=&#34;IFesfS.png&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; bitmapWidth = bitmap.getWidth();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; bitmapHeight = bitmap.getHeight();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; center1X = point1.x + bitmapWidth / &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; center1Y = point1.y + bitmapHeight / &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; center2X = point2.x + bitmapWidth / &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;int&lt;/span&gt; center2Y = point2.y + bitmapHeight / &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;camera.save();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;matrix.reset();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;camera.rotateX(&lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;camera.getMatrix(matrix);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;camera.restore();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;matrix.preTranslate(-center1X, -center1Y);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;matrix.postTranslate(center1X, center1Y);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.save();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.concat(matrix);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.drawBitmap(bitmap, point1.x, point1.y, paint);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.restore();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;cameratranslate&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cameratranslate&#34;&gt;#&lt;/a&gt; Camera.translate&lt;/h5&gt;
&lt;h5 id=&#34;camerasetlocation&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#camerasetlocation&#34;&gt;#&lt;/a&gt; Camera.setLocation&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;设置虚拟相机的位置&lt;/p&gt;
&lt;/blockquote&gt;
</content>
        <category term="图形绘制" />
        <updated>2021-11-03T13:58:53.000Z</updated>
    </entry>
    <entry>
        <id>http://onion66.gitee.io/blog/2021/11/03/VjI1fQxy8MSFqUqm/</id>
        <title>自定义View(3) - Text相关</title>
        <link rel="alternate" href="http://onion66.gitee.io/blog/2021/11/03/VjI1fQxy8MSFqUqm/"/>
        <content type="html">&lt;h3 id=&#34;文字绘制canvas&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文字绘制canvas&#34;&gt;#&lt;/a&gt; 文字绘制 (Canvas)&lt;/h3&gt;
&lt;h4 id=&#34;绘制方式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#绘制方式&#34;&gt;#&lt;/a&gt; 绘制方式&lt;/h4&gt;
&lt;h5 id=&#34;drawtext&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#drawtext&#34;&gt;#&lt;/a&gt; drawText&lt;/h5&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/02/IiheJA.png&#34; alt=&#34;IiheJA.png&#34;&gt;&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;String text = &lt;span class=&#34;string&#34;&gt;&amp;quot;Hello HenCoder&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.drawText(text, &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, paint);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;drawtextrun&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#drawtextrun&#34;&gt;#&lt;/a&gt; drawTextRun&lt;/h5&gt;
&lt;h5 id=&#34;drawtextonpath&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#drawtextonpath&#34;&gt;#&lt;/a&gt; drawTextOnPath&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;沿着一条 Path 来绘制文字&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/02/IihNzq.png&#34; alt=&#34;IihNzq.png&#34;&gt;&lt;br&gt;
 &lt;code&gt;drawTextOnPath()&lt;/code&gt;  使用的  &lt;code&gt;Path&lt;/code&gt;  ，拐弯处全用圆角，别用尖角&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;canvas.drawPath(path, paint); &lt;span class=&#34;comment&#34;&gt;// 把 Path 也绘制出来，理解起来更方便&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.drawTextOnPath(&lt;span class=&#34;string&#34;&gt;&amp;quot;Hello HeCoder&amp;quot;&lt;/span&gt;, path, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, paint);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;staticlayout&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#staticlayout&#34;&gt;#&lt;/a&gt; StaticLayout&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;进行多行文字的绘制&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;View 的边缘自动折行&lt;/li&gt;
&lt;li&gt;在换行符  &lt;code&gt;\n&lt;/code&gt;  处换行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/02/Iih7Yd.md.png&#34; alt=&#34;Iih7Yd.md.png&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;String text1 = &lt;span class=&#34;string&#34;&gt;&amp;quot;Lorem Ipsum is simply dummy text of the printing and typesetting industry.&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;StaticLayout staticLayout1 = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; StaticLayout(text1, paint, &lt;span class=&#34;number&#34;&gt;600&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Layout.Alignment.ALIGN_NORMAL, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;String text2 = &lt;span class=&#34;string&#34;&gt;&amp;quot;a\nbc\ndefghi\njklm\nnopqrst\nuvwx\nyz&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;StaticLayout staticLayout2 = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; StaticLayout(text2, paint, &lt;span class=&#34;number&#34;&gt;600&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Layout.Alignment.ALIGN_NORMAL, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.save();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.translate(&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;staticLayout1.draw(canvas);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.translate(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;staticLayout2.draw(canvas);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.restore();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&#34;文字绘制辅助paint&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文字绘制辅助paint&#34;&gt;#&lt;/a&gt; 文字绘制辅助 (Paint)&lt;/h3&gt;
&lt;h4 id=&#34;样式设置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#样式设置&#34;&gt;#&lt;/a&gt; 样式设置&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;setTextSize(float textSize)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setTypeface(Typeface typeface)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setFakeBoldText(boolean fakeBoldText)&lt;/code&gt;  是否使用伪粗体&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setStrikeThruText(boolean strikeThruText)&lt;/code&gt;  是否加删除线&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setUnderlineText(boolean underlineText)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setTextSkewX(float skewX)&lt;/code&gt;  文字横切角度&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setTextScaleX(float scaleX)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setLetterSpacing(float letterSpacing)&lt;/code&gt;  字符间距&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setFontFeatureSettings(String settings)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setTextAlign(Paint.Align align)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setTextLocale(Locale locale)&lt;/code&gt;  语言区域&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setHinting(int mode)&lt;/code&gt;  字体微调&lt;/li&gt;
&lt;li&gt;&lt;code&gt;setSubpixelText(boolean subpixelText)&lt;/code&gt;  是否开启像素级的抗锯齿&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;测量&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#测量&#34;&gt;#&lt;/a&gt; 测量&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;getFontSpacing()&lt;/code&gt;  获取推荐的行距
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/02/IiboRg.png&#34; alt=&#34;IiboRg.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getFontMetrics()&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/02/IibtM9.png&#34; alt=&#34;IibtM9.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getTextBounds()&lt;/code&gt;  获取文字范围&lt;/li&gt;
&lt;li&gt;&lt;code&gt;measureText()&lt;/code&gt;  测量文字的宽度并返回&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getTextWidths()&lt;/code&gt;  获取字符串中每个字符的宽度&lt;/li&gt;
&lt;li&gt;&lt;code&gt;breakText()&lt;/code&gt;  和  &lt;code&gt;measureText()&lt;/code&gt;  的区别是， breakText () 是在给出宽度上限的前提下测量文字的宽度。如果文字的宽度超出了上限，那么在临近超限的位置截断文字&lt;/li&gt;
&lt;li&gt;光标相关
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;getRunAdvance()&lt;/code&gt;  计算出某个字符处光标的  &lt;code&gt;x&lt;/code&gt;  坐标
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/02/Iibnrn.png&#34; alt=&#34;Iibnrn.png&#34;&gt;&lt;/li&gt;
&lt;li&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/02/IibMV0.md.png&#34; alt=&#34;IibMV0.md.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getOffsetForAdvance&lt;/code&gt;  计算第几个字符最接近这个坐标&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hasGlyph()&lt;/code&gt;  检查指定的字符串中是否是一个单独的字形
&lt;ul&gt;
&lt;li&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/02/IiH9tU.png&#34; alt=&#34;IiH9tU.png&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
        <category term="图形绘制" />
        <updated>2021-11-03T13:57:48.000Z</updated>
    </entry>
    <entry>
        <id>http://onion66.gitee.io/blog/2021/11/01/weRgrdLnBqIUWkcH/</id>
        <title>自定义View(2) - Paint相关</title>
        <link rel="alternate" href="http://onion66.gitee.io/blog/2021/11/01/weRgrdLnBqIUWkcH/"/>
        <content type="html">&lt;h3 id=&#34;color&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#color&#34;&gt;#&lt;/a&gt; Color&lt;/h3&gt;
&lt;h4 id=&#34;基本颜色&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#基本颜色&#34;&gt;#&lt;/a&gt; 基本颜色&lt;/h4&gt;
&lt;p&gt;setColor(int color):&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;paint.setColor(Color.parseColor(&lt;span class=&#34;string&#34;&gt;&amp;quot;#009688&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.drawRect(&lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;30&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;230&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;180&lt;/span&gt;, paint);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;p&gt;setARGB(int a, int r, int g, int b)&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;paint.setARGB(&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.drawLine(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;, paint);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;shader&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#shader&#34;&gt;#&lt;/a&gt; Shader&lt;/h4&gt;
&lt;h5 id=&#34;lineargradient线性渐变&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#lineargradient线性渐变&#34;&gt;#&lt;/a&gt; LinearGradient (线性渐变)&lt;/h5&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICK7e1.png&#34; alt=&#34;ICK7e1.png&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Shader shader = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; LinearGradient(&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;500&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;500&lt;/span&gt;, Color.parseColor(&lt;span class=&#34;string&#34;&gt;&amp;quot;#E91E63&amp;quot;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Color.parseColor(&lt;span class=&#34;string&#34;&gt;&amp;quot;#2196F3&amp;quot;&lt;/span&gt;), Shader.TileMode.CLAMP);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;paint.setShader(shader);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.drawCircle(&lt;span class=&#34;number&#34;&gt;300&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;300&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;, paint);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;CLAMP&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;MIRROR&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;REPEAT&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICuIVP.png&#34; alt=&#34;ICuIVP.png&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICKWJU.png&#34; alt=&#34;ICKWJU.png&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICK5QJ.png&#34; alt=&#34;ICK5QJ.png&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;radialgradient辐射渐变&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#radialgradient辐射渐变&#34;&gt;#&lt;/a&gt; RadialGradient (辐射渐变)&lt;/h5&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/IClQRU.png&#34; alt=&#34;IClQRU.png&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Shader shader = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; RadialGradient(&lt;span class=&#34;number&#34;&gt;300&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;300&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;, Color.parseColor(&lt;span class=&#34;string&#34;&gt;&amp;quot;#E91E63&amp;quot;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Color.parseColor(&lt;span class=&#34;string&#34;&gt;&amp;quot;#2196F3&amp;quot;&lt;/span&gt;), Shader.TileMode.CLAMP);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;paint.setShader(shader);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.drawCircle(&lt;span class=&#34;number&#34;&gt;300&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;300&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;, paint);  &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;CLAMP&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;MIRROR&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;REPEAT&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/IClfW8.png&#34; alt=&#34;IClfW8.png&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/IC1SOJ.png&#34; alt=&#34;IC1SOJ.png&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/IC1SOJ.png&#34; alt=&#34;IC1SOJ.png&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;sweepgradient扫描渐变&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sweepgradient扫描渐变&#34;&gt;#&lt;/a&gt; SweepGradient (扫描渐变)&lt;/h5&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/IC3N8K.png&#34; alt=&#34;IC3N8K.png&#34;&gt;]&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Shader shader = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; SweepGradient(&lt;span class=&#34;number&#34;&gt;300&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;300&lt;/span&gt;, Color.parseColor(&lt;span class=&#34;string&#34;&gt;&amp;quot;#E91E63&amp;quot;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        Color.parseColor(&lt;span class=&#34;string&#34;&gt;&amp;quot;#2196F3&amp;quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;paint.setShader(shader);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.drawCircle(&lt;span class=&#34;number&#34;&gt;300&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;300&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;, paint);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5 id=&#34;bitmapshader&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#bitmapshader&#34;&gt;#&lt;/a&gt; BitmapShader&lt;/h5&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/IC8dJ0.png&#34; alt=&#34;IC8dJ0.png&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Bitmap bitmap = BitmapFactory.decodeResource(getResources(), R.drawable.batman);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Shader shader = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; BitmapShader(bitmap, Shader.TileMode.CLAMP, Shader.TileMode.CLAMP);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;paint.setShader(shader);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.drawCircle(&lt;span class=&#34;number&#34;&gt;300&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;300&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;, paint);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;CLAMP&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;MIRROR&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;REPEAT&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICGhAs.png&#34; alt=&#34;ICGhAs.png&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICG7cT.png&#34; alt=&#34;ICG7cT.png&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICGLB4.png&#34; alt=&#34;ICGLB4.png&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h5 id=&#34;composeshader-混合着色器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#composeshader-混合着色器&#34;&gt;#&lt;/a&gt; ComposeShader 混合着色器&lt;/h5&gt;
&lt;blockquote&gt;
&lt;p&gt;所谓混合，就是把两个 Shader 一起使用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICUmdg.png&#34; alt=&#34;ICUmdg.png&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 第一个 Shader：头像的 Bitmap&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Bitmap bitmap1 = BitmapFactory.decodeResource(getResources(), R.drawable.batman);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Shader shader1 = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; BitmapShader(bitmap1, Shader.TileMode.CLAMP, Shader.TileMode.CLAMP);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 第二个 Shader：从上到下的线性渐变（由透明到黑色）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Bitmap bitmap2 = BitmapFactory.decodeResource(getResources(), R.drawable.batman_logo);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Shader shader2 = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; BitmapShader(bitmap2, Shader.TileMode.CLAMP, Shader.TileMode.CLAMP);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// ComposeShader：结合两个 Shader&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Shader shader = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; ComposeShader(shader1, shader2, PorterDuff.Mode.SRC_OVER);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;paint.setShader(shader);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.drawCircle(&lt;span class=&#34;number&#34;&gt;300&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;300&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;300&lt;/span&gt;, paint);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;porterduff&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#porterduff&#34;&gt;#&lt;/a&gt; PorterDuff&lt;/h4&gt;
&lt;h3 id=&#34;patheffect&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#patheffect&#34;&gt;#&lt;/a&gt; PathEffect&lt;/h3&gt;
&lt;h4 id=&#34;style&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#style&#34;&gt;#&lt;/a&gt; Style&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;Paint.setStrokeWidth&lt;/code&gt; : 线条宽度&lt;br&gt;
&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICvqQe.png&#34; alt=&#34;ICvqQe.png&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;paint.setStyle(Paint.Style.STROKE);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;paint.setStrokeWidth(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.drawCircle(&lt;span class=&#34;number&#34;&gt;150&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;125&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, paint);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;paint.setStrokeWidth(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.drawCircle(&lt;span class=&#34;number&#34;&gt;400&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;125&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, paint);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;paint.setStrokeWidth(&lt;span class=&#34;number&#34;&gt;40&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.drawCircle(&lt;span class=&#34;number&#34;&gt;650&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;125&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, paint);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;Paint.setStrokeCap&lt;/code&gt; : 线条形状&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICxkLj.png&#34; alt=&#34;ICxkLj.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Paint.setStrokeJoin&lt;/code&gt; : 拐角形状&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICxQlF.png&#34; alt=&#34;ICxQlF.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Paint.setStrokeMiter&lt;/code&gt; : 拐角边缘&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICzenH.png&#34; alt=&#34;image&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;filter&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#filter&#34;&gt;#&lt;/a&gt; Filter&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;PathEffect.setDither()&lt;/code&gt; : 图像抖动&lt;br&gt;
&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICL31H.png&#34; alt=&#34;ICL31H.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PathEffect.setFilterBitmap()&lt;/code&gt; : 双线性过滤&lt;br&gt;
&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICvZ8O.png&#34; alt=&#34;ICvZ8O.png&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;effect&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#effect&#34;&gt;#&lt;/a&gt; Effect&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Name&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Effect&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;CornerPathEffect&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICgRkq.png&#34; alt=&#34;ICgRkq.png&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;DiscretePathEffect&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICgGOH.png&#34; alt=&#34;ICgGOH.png&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;DashPathEffect&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICcXQg.png&#34; alt=&#34;ICcXQg.png&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;PathDashPathEffect&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/IC6T8U.png&#34; alt=&#34;IC6T8U.png&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;SumPathEffect&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICyBpF.png&#34; alt=&#34;ICyBpF.png&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;ComposePathEffect&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICy8yj.png&#34; alt=&#34;ICy8yj.png&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;shadowlayer&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#shadowlayer&#34;&gt;#&lt;/a&gt; ShadowLayer&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;绘制层下方的阴影效果&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICstPO.png&#34; alt=&#34;ICstPO.png&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;paint.setShadowLayer(&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, Color.RED);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.drawText(text, &lt;span class=&#34;number&#34;&gt;80&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;300&lt;/span&gt;, paint);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;maskfilter&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#maskfilter&#34;&gt;#&lt;/a&gt; MaskFilter&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;绘制层上方的附加效果&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;BlurMaskFilter (模糊效果):&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICrhE6.md.png&#34; alt=&#34;ICrhE6.md.png&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;paint.setMaskFilter(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; BlurMaskFilter(&lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;, BlurMaskFilter.Blur.NORMAL));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.drawBitmap(bitmap, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, paint);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;EmbossMaskFilter (浮雕效果):&lt;br&gt;
&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICr0EV.png&#34; alt=&#34;ICr0EV.png&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 数组:光源方向,光强度,炫光系数,应用光线范围 &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;paint.setMaskFilter(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; EmbossMaskFilter(&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;float&lt;/span&gt;[]&amp;#123;&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;&amp;#125;, &lt;span class=&#34;number&#34;&gt;0.2f&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;canvas.drawBitmap(bitmap, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, paint);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;getpath&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#getpath&#34;&gt;#&lt;/a&gt; getPath&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;PathEffect.getFillPath()&lt;/code&gt;  获取图形 Path&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICDOtU.md.png&#34; alt=&#34;ICDOtU.md.png&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;PathEffect.getTextPath()&lt;/code&gt;  获取图形 Path&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICDAQs.png&#34; alt=&#34;ICDAQs.png&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;refer&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#refer&#34;&gt;#&lt;/a&gt; Refer&lt;/h3&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yZW5nd3V4aWFuLmNvbS91aS0xLTIv&#34;&gt;HenCoder Android 开发进阶：自定义 View 1-2 Paint 详解 (rengwuxian.com)&lt;/span&gt;&lt;/p&gt;
</content>
        <category term="图形绘制" />
        <updated>2021-11-01T14:19:10.000Z</updated>
    </entry>
    <entry>
        <id>http://onion66.gitee.io/blog/2021/11/01/K0uh0dFU4QBtZ8Wm/</id>
        <title>自定义View(1) - 基本绘制</title>
        <link rel="alternate" href="http://onion66.gitee.io/blog/2021/11/01/K0uh0dFU4QBtZ8Wm/"/>
        <content type="html">&lt;blockquote&gt;
&lt;p&gt;简单的绘制基本由 &lt;code&gt;Canvas.drawxxx()&lt;/code&gt;  和 Paint 的配置组成&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/IC9uZj.png&#34; alt=&#34;IC9uZj.png&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight kotlin&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;class&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;PaintView&lt;/span&gt; &lt;span class=&#34;meta&#34;&gt;@JvmOverloads&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;constructor&lt;/span&gt;&lt;/span&gt;(context: Context, attrs: AttributeSet? = &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;, defStyleAttr: &lt;span class=&#34;built_in&#34;&gt;Int&lt;/span&gt; = &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) : View(context, attrs, defStyleAttr) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;private&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;val&lt;/span&gt; mPaint &lt;span class=&#34;keyword&#34;&gt;by&lt;/span&gt; lazy &amp;#123; Paint() &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;override&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;fun&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;onDraw&lt;/span&gt;&lt;span class=&#34;params&#34;&gt;(canvas: &lt;span class=&#34;type&#34;&gt;Canvas&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt; &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;super&lt;/span&gt;.onDraw(canvas)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    paint.setColor(Color.RED)&lt;span class=&#34;comment&#34;&gt;// 设置为红色&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    canvas.drawCircle(&lt;span class=&#34;number&#34;&gt;300&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;300&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;, paint)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;
&lt;h3 id=&#34;canvas&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#canvas&#34;&gt;#&lt;/a&gt; Canvas&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Canvas.drawArc()&lt;/code&gt;  绘制弧形或扇形&lt;br&gt;
 +  &lt;code&gt;left&lt;/code&gt; ,  &lt;code&gt;top&lt;/code&gt; ,  &lt;code&gt;right&lt;/code&gt; ,  &lt;code&gt;bottom&lt;/code&gt;  描述的是这个弧形所在的椭圆&lt;br&gt;
 +  &lt;code&gt;startAngle&lt;/code&gt;  是弧形的起始角度&lt;br&gt;
 +  &lt;code&gt;sweepAngle&lt;/code&gt;  是弧形划过的角度&lt;br&gt;
 +  &lt;code&gt;useCenter&lt;/code&gt;  表示是否连接到圆心，如果不连接到圆心，就是弧形，如果连接到圆心，就是扇形&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Canvas.drawPath()&lt;/code&gt;  组合图形&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;paint&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#paint&#34;&gt;#&lt;/a&gt; Paint&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Paint.setStyle(Style style)&lt;/code&gt;   设置绘制模式&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Paint.setColor(int color)&lt;/code&gt;   设置颜色&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Paint.setStrokeWidth(float width)&lt;/code&gt;   设置线条宽度&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Paint.setTextSize(float textSize)&lt;/code&gt;   设置文字大小&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Paint.setAntiAlias(boolean aa)&lt;/code&gt;   设置抗锯齿开关&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;path&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#path&#34;&gt;#&lt;/a&gt; Path&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;如果只画一个圆，没必要用 Path，直接用 drawCircle () 就行了。drawPath () 一般是在绘制组合图形时才会用到的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;pathaddxxx&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pathaddxxx&#34;&gt;#&lt;/a&gt; Path.addXxx&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;添加子图形&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;path.addCircle(300, 300, 200, Path.Direction.CW)&lt;/code&gt;&lt;/p&gt;
&lt;h4 id=&#34;pathxxxto&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pathxxxto&#34;&gt;#&lt;/a&gt; Path.xxxTo&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;用于画线（直线或曲线）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;lineTo(float x, float y) / rLineTo(float x, float y) &lt;/code&gt; 画直线:&lt;br&gt;
&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICkWGR.png&#34; alt=&#34;ICkWGR.png&#34;&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;paint.setStyle(Style.STROKE);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;path.lineTo(&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// 由当前位置 (0, 0) 向 (100, 100) 画一条直线&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;path.rLineTo(&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// 由当前位置 (100, 100) 向正右方 100 像素的位置画一条直线&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICASL8.png&#34; alt=&#34;ICASL8.png&#34;&gt;]&lt;/p&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;paint.setStyle(Style.STROKE);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;path.lineTo(&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// 画斜线&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;path.moveTo(&lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// 我移~~&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;path.lineTo(&lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// 画竖线&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;arcTo()&lt;/code&gt;  和  &lt;code&gt;addArc()&lt;/code&gt;  画弧线:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;true&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;false&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICEuct.png&#34; alt=&#34;ICEuct.png&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICEinK.png&#34; alt=&#34;ICEinK.png&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;paint.setStyle(Style.STROKE);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;path.lineTo(&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// true 直接连线连到弧形起点（有痕迹）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// false 强制移动到弧形起点（无痕迹）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;path.arcTo(&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;300&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;300&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;90&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;/&lt;span class=&#34;keyword&#34;&gt;false&lt;/span&gt;); &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// 等同上面&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;paint.setStyle(Style.STROKE);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;path.lineTo(&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;path.addArc(&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;300&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;300&lt;/span&gt;, -&lt;span class=&#34;number&#34;&gt;90&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;90&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// addArc() 只是一个直接使用了 forceMoveTo = true 的简化版 arcTo()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;close() &lt;/code&gt; 封闭当前子图形:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;no close&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;close&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICVaPH.png&#34; alt=&#34;ICVaPH.png&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICVgIg.png&#34; alt=&#34;ICVgIg.png&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;figure class=&#34;highlight java&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;paint.setStyle(Style.STROKE);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;path.moveTo(&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;path.lineTo(&lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;path.lineTo(&lt;span class=&#34;number&#34;&gt;150&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;150&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;path.close(); &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&#34;pathsetfilltype&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#pathsetfilltype&#34;&gt;#&lt;/a&gt; Path.setFillType&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;设置填充方式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICFucV.png&#34; alt=&#34;ICFucV.png&#34;&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;EVEN_ODD:even-odd rule （奇偶原则）&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;WINDING: non-zero winding rule （非零环绕数原则）&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICFKXT.png&#34; alt=&#34;ICFKXT.png&#34;&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;img data-src=&#34;https://z3.ax1x.com/2021/11/01/ICFJhR.png&#34; alt=&#34;ICFJhR.png&#34;&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</content>
        <category term="图形绘制" />
        <updated>2021-11-01T14:17:37.000Z</updated>
    </entry>
</feed>
