{
    "version": "https://jsonfeed.org/version/1",
    "title": "Stay hungry , Stay foolish • All posts by \"图形绘制\" tag",
    "description": "巴拉巴拉",
    "home_page_url": "https://onion99.github.io",
    "items": [
        {
            "id": "https://onion99.github.io/2021/11/04/cNDSpE5p4avS2tOi/",
            "url": "https://onion99.github.io/2021/11/04/cNDSpE5p4avS2tOi/",
            "title": "自定义View(11) - 滚动速度和滚动计算",
            "date_published": "2021-11-03T22:09:36.000Z",
            "content_html": "<h3 id=\"velocitytracker\">VelocityTracker<a title=\"#velocitytracker\" href=\"#velocitytracker\"></a></h3>\n<blockquote>\n<p>跟踪手指在滑动过程中的速度，包括水平和竖直方向的速度</p>\n</blockquote>\n<span id=\"more\"></span>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">VelocityTrackerTestView</span><span class=\"token punctuation\">(</span>context<span class=\"token operator\">:</span> <span class=\"token class-name\">Context</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> attrs<span class=\"token operator\">:</span> <span class=\"token class-name\">AttributeSet</span><span class=\"token operator\">?</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token class-name\">View</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> attrs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//1、创建实例</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> mVelocityTracker <span class=\"token operator\">=</span> <span class=\"token class-name\">VelocityTracker</span><span class=\"token punctuation\">.</span><span class=\"token function\">obtain</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token annotation punctuation\">@SuppressLint</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ClickableViewAccessibility\"</span><span class=\"token punctuation\">)</span>\n    override fun <span class=\"token function\">onTouchEvent</span><span class=\"token punctuation\">(</span>event<span class=\"token operator\">:</span> <span class=\"token class-name\">MotionEvent</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token class-name\">Boolean</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//2、重置</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>actionMasked <span class=\"token operator\">==</span> <span class=\"token class-name\">MotionEvent</span><span class=\"token punctuation\">.</span>ACTION_DOWN<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            mVelocityTracker<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">//3、开始追踪</span>\n        mVelocityTracker<span class=\"token punctuation\">.</span><span class=\"token function\">addMovement</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span>\n \n        when <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>actionMasked<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">MotionEvent</span><span class=\"token punctuation\">.</span>ACTION_DOWN <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">//...</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token class-name\">MotionEvent</span><span class=\"token punctuation\">.</span>ACTION_MOVE <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">//o...</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token class-name\">MotionEvent</span><span class=\"token punctuation\">.</span>ACTION_UP <span class=\"token operator\">-></span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">//速度 = （ 终点位置(px) - 起点位置(px) ）/ 时间段(ms)</span>\n                <span class=\"token comment\">//4、设置时间段</span>\n                mVelocityTracker<span class=\"token punctuation\">.</span><span class=\"token function\">computeCurrentVelocity</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n                <span class=\"token comment\">//5、获取x方向、y方向的速度</span>\n                <span class=\"token comment\">//其中getXVelocity、getYVelocity方法的参数是pointerId，用于多指触控。不考虑多指时，可以不用传参数</span>\n                <span class=\"token keyword\">var</span> xVelocity <span class=\"token operator\">=</span> mVelocityTracker<span class=\"token punctuation\">.</span><span class=\"token function\">getXVelocity</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                <span class=\"token keyword\">var</span> yVelocity <span class=\"token operator\">=</span> mVelocityTracker<span class=\"token punctuation\">.</span><span class=\"token function\">getYVelocity</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n                <span class=\"token comment\">//...</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">&#125;</span>\n \n    override fun <span class=\"token function\">onDetachedFromWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//6、当不需要使用时，重置并回收内存</span>\n        mVelocityTracker<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        mVelocityTracker<span class=\"token punctuation\">.</span><span class=\"token function\">recycle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onDetachedFromWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>VelocityTracker 一般用来判断当前是否达到一定的滑动速度来触发 Fling 的效果，这个滑动速度我们可以自己设置，也可以通过系统提供的来获取</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> mViewConfiguration <span class=\"token operator\">:</span> <span class=\"token class-name\">ViewConfiguration</span> <span class=\"token operator\">=</span> <span class=\"token class-name\">ViewConfiguration</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> mMaxFlingVelocity <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n<span class=\"token comment\">//触发fling的速度</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">var</span> mMinFlingVelocity <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\ninit <span class=\"token punctuation\">&#123;</span>\n    mMaxFlingVelocity <span class=\"token operator\">=</span> mViewConfiguration<span class=\"token punctuation\">.</span>scaledMaximumFlingVelocity\n    mMinFlingVelocity <span class=\"token operator\">=</span> mViewConfiguration<span class=\"token punctuation\">.</span>scaledMinimumFlingVelocity\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"scroller\">Scroller<a title=\"#scroller\" href=\"#scroller\"></a></h3>\n<p>在 View 类里面，有两个和滚动相关的类 scrollTo() 和 scrollBy。这两个方法可以实现 View 内容的移动，比如说一个 TextView，如果使用 scrollTo()，那么移动的是里面的文字而不是位置，scrollBy() 也是一样的。那么为什么是移动，不是滚动呢？这是因为这两个方法都是瞬间完成，而不是带有滚动过程的滚动，所以说如果要实现效果比较好的滚动还是需要 Scroller</p>\n<p>常用API:</p>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th style=\"text-align:center\">API</th>\n<th style=\"text-align:center\">简介</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">computeScrollOffset()</td>\n<td style=\"text-align:center\">判断当前的滑动动作是否完成的</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">getCurrX()、getCurrY()</td>\n<td style=\"text-align:center\">获取当前滑动的坐标值</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">getFinalX()、getFinalY()</td>\n<td style=\"text-align:center\">获取最终滑动停止时的坐标</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">isFinished()</td>\n<td style=\"text-align:center\">用来判断当前滚动是否结束</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">startScroll(int startX, int startY, int dx, int dy)</td>\n<td style=\"text-align:center\">用来开始滚动，这个是很重要的一个触发computeScroll()的方法，调用这个方法之后，我们就可以在computeScroll里面获取滚动的信息，然后完成我们的需要。这个还有一个带有滚动持续时间的重载函数，可以根据需求自由使用。特别要注意这四个参数，startX和startY是开始的坐标位置，正数左上，负数右下，dx、dy同理，当在computeScroll()获取getCurrX()的时候，变化范围就与这里地设置有关。</td>\n</tr>\n</tbody>\n</table></div></div><h3 id=\"overscroller\">OverScroller<a title=\"#overscroller\" href=\"#overscroller\"></a></h3>\n<blockquote>\n<p>对超出滑动边界的情况的处理</p>\n</blockquote>\n",
            "tags": [
                "图形绘制"
            ]
        },
        {
            "id": "https://onion99.github.io/2021/11/04/dY7a31QepeVitGkX/",
            "url": "https://onion99.github.io/2021/11/04/dY7a31QepeVitGkX/",
            "title": "自定义View(10) - GestureDetector",
            "date_published": "2021-11-03T22:08:39.000Z",
            "content_html": "<h3 id=\"gesturedetector\">GestureDetector<a title=\"#gesturedetector\" href=\"#gesturedetector\"></a></h3>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th>监听器</th>\n<th>简介</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>OnContextClickListener</td>\n<td>这个很容易让人联想到ContextMenu，然而它和ContextMenu并没有什么关系，它是在Android6.0(API 23)才添加的一个选项，是用于检测外部设备上的按钮是否按下的，例如蓝牙触控笔上的按钮，一般情况下，忽略即可。</td>\n</tr>\n<tr>\n<td>OnDoubleTapListener</td>\n<td>双击事件，有三个回调类型：双击(DoubleTap)、单击确认(SingleTapConfirmed) 和 双击事件回调(DoubleTapEvent)</td>\n</tr>\n<tr>\n<td>OnGestureListener</td>\n<td>手势检测，主要有以下类型事件：按下(Down)、 一扔(Fling)、长按(LongPress)、滚动(Scroll)、触摸反馈(ShowPress) 和 单击抬起(SingleTapUp)</td>\n</tr>\n<tr>\n<td>SimpleOnGestureListener</td>\n<td>这个是上述三个接口的空实现，一般情况下使用这个比较多，也比较方便</td>\n</tr>\n</tbody>\n</table></div></div><span id=\"more\"></span>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 1.创建一个监听回调</span>\n<span class=\"token class-name\">SimpleOnGestureListener</span> listener <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SimpleOnGestureListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token annotation punctuation\">@Override</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">onDoubleTap</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MotionEvent</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">Toast</span><span class=\"token punctuation\">.</span><span class=\"token function\">makeText</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MainActivity</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"双击666\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Toast</span><span class=\"token punctuation\">.</span>LENGTH_SHORT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">show</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onDoubleTap</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token comment\">// 2.创建一个检测器</span>\n<span class=\"token keyword\">final</span> <span class=\"token class-name\">GestureDetector</span> detector <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GestureDetector</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> listener<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n<span class=\"token comment\">// 3.给监听器设置数据源</span>\nview<span class=\"token punctuation\">.</span><span class=\"token function\">setOnTouchListener</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">View<span class=\"token punctuation\">.</span>OnTouchListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token annotation punctuation\">@Override</span> <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">onTouch</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">View</span> v<span class=\"token punctuation\">,</span> <span class=\"token class-name\">MotionEvent</span> event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> detector<span class=\"token punctuation\">.</span><span class=\"token function\">onTouchEvent</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"scalegesturedetector\">ScaleGestureDetector<a title=\"#scalegesturedetector\" href=\"#scalegesturedetector\"></a></h3>\n<blockquote>\n<p>Android 缩放手势检测 ScaleGestureDetector，在大多数的情况下缩放手势都不是单独存在的，需要配合其它的手势来使用</p>\n</blockquote>\n<h4 id=\"sample\">sample<a title=\"#sample\" href=\"#sample\"></a></h4>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ScaleGestureDemoView</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">View</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> TAG <span class=\"token operator\">=</span> <span class=\"token string\">\"ScaleGestureDemoView\"</span><span class=\"token punctuation\">;</span>\n \n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">ScaleGestureDetector</span> mScaleGestureDetector<span class=\"token punctuation\">;</span>\n \n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ScaleGestureDemoView</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Context</span> context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n \n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">ScaleGestureDemoView</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Context</span> context<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">AttributeSet</span> attrs<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> attrs<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">initScaleGestureDetector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n \n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">initScaleGestureDetector</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        mScaleGestureDetector <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ScaleGestureDetector</span><span class=\"token punctuation\">(</span><span class=\"token function\">getContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> \n                <span class=\"token keyword\">new</span> <span class=\"token class-name\">ScaleGestureDetector<span class=\"token punctuation\">.</span>SimpleOnScaleGestureListener</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token annotation punctuation\">@Override</span>\n            <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">onScaleBegin</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ScaleGestureDetector</span> detector<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n \n            <span class=\"token annotation punctuation\">@Override</span>\n            <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">onScale</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ScaleGestureDetector</span> detector<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span>TAG<span class=\"token punctuation\">,</span> <span class=\"token string\">\"focusX = \"</span> <span class=\"token operator\">+</span> detector<span class=\"token punctuation\">.</span><span class=\"token function\">getFocusX</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 缩放中心，x坐标</span>\n                <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span>TAG<span class=\"token punctuation\">,</span> <span class=\"token string\">\"focusY = \"</span> <span class=\"token operator\">+</span> detector<span class=\"token punctuation\">.</span><span class=\"token function\">getFocusY</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">// 缩放中心y坐标</span>\n                <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">i</span><span class=\"token punctuation\">(</span>TAG<span class=\"token punctuation\">,</span> <span class=\"token string\">\"scale = \"</span> <span class=\"token operator\">+</span> detector<span class=\"token punctuation\">.</span><span class=\"token function\">getScaleFactor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   <span class=\"token comment\">// 缩放因子</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n \n            <span class=\"token annotation punctuation\">@Override</span>\n            <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onScaleEnd</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ScaleGestureDetector</span> detector<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n \n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">onTouchEvent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MotionEvent</span> event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        mScaleGestureDetector<span class=\"token punctuation\">.</span><span class=\"token function\">onTouchEvent</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n",
            "tags": [
                "图形绘制"
            ]
        },
        {
            "id": "https://onion99.github.io/2021/11/04/z3aQsRLVolBbFVsl/",
            "url": "https://onion99.github.io/2021/11/04/z3aQsRLVolBbFVsl/",
            "title": "自定义View(9) - 事件分发",
            "date_published": "2021-11-03T22:07:31.000Z",
            "content_html": "<blockquote>\n<p>事件分发的过程其实也就是事件传递过程。事件传递的顺序由Acticity传递到根View，这个根View 通常是一个ViewGroup(ViewGroup本身也是View的子类)，然后再传递给ViewGroup下的子View, 若事件在自上而下的传递过程中一直没有被消费，则事件会反向向上传递，此时父ViewGroup可以对事件进行消费，若仍然没有被消费的话，最后会回到Activity的onTouchEvent</p>\n</blockquote>\n<p>所以很多时候如果有冲突的话,最先消费的是最底部的子View<br>\n<img src=\"https://z3.ax1x.com/2021/11/03/IE3gqf.png\" alt=\"IE3gqf.png\" loading=\"lazy\"></p>\n<span id=\"more\"></span>\n<h3 id=\"事件分发method\">事件分发Method<a title=\"#事件分发method\" href=\"#事件分发method\"></a></h3>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th style=\"text-align:center\">方法</th>\n<th style=\"text-align:center\">作用</th>\n<th style=\"text-align:center\">调用时刻</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">dispatchTouchEvent()</td>\n<td style=\"text-align:center\">用来进行事件传递</td>\n<td style=\"text-align:center\">如果事件能够传递给当前 View，那么此方法一定会被调用</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">onInterceptTouchEvent()</td>\n<td style=\"text-align:center\">用来是否拦截事件</td>\n<td style=\"text-align:center\">如果当前 View 拦截了某个事件，那么在同一个事件序列当中，此方法不会被再次调用</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">onTouchEvent()</td>\n<td style=\"text-align:center\">处理事件</td>\n<td style=\"text-align:center\">在 dispatchTouchEvent()方法中调用</td>\n</tr>\n</tbody>\n</table></div></div><h3 id=\"事件分发顺序\">事件分发顺序<a title=\"#事件分发顺序\" href=\"#事件分发顺序\"></a></h3>\n<p>Activity&amp;Window</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">dispatchTouchEvent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MotionEvent</span> ev<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">.</span><span class=\"token function\">getAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token class-name\">MotionEvent</span><span class=\"token punctuation\">.</span>ACTION_DOWN<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">onUserInteraction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 当事件没有被任何子View 消费时,即这里为false时,最终执行自己的nTouchEvent</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">superDispatchTouchEvent</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">onTouchEvent</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>DecorView(FrameLayout 的子类)</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PhoneWindow</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Window</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">MenuBuilder<span class=\"token punctuation\">.</span>Callback</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">superDispatchTouchEvent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MotionEvent</span> event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t    <span class=\"token keyword\">return</span> mDecor<span class=\"token punctuation\">.</span><span class=\"token function\">superDispatchTouchEvent</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n \n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DecorView</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">FrameLayout</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">RootViewSurfaceTaker</span><span class=\"token punctuation\">&#123;</span>\n\t    <span class=\"token comment\">//FrameLayout 并没有重写dispatchTouchEvent方法，所以事件开始交由 ViewGroup 的 dispatchTouchEvent 开始分发了</span>\n\t    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">superDispatchTouchEvent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MotionEvent</span> event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t        <span class=\"token keyword\">return</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">dispatchTouchEvent</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t    <span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>ViewGroup</p>\n<ul>\n<li>判断事件是够需要被 ViewGroup 拦截</li>\n<li>遍历所有子View，逐个分发事件</li>\n<li>将事件交给ViewGroup自己或者目标子View处理</li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">dispatchTouchEvent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MotionEvent</span> ev<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n \n    <span class=\"token keyword\">boolean</span> handled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">onFilterTouchEventForSecurity</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> action <span class=\"token operator\">=</span> ev<span class=\"token punctuation\">.</span><span class=\"token function\">getAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n        <span class=\"token comment\">// 先检验事件是否需要被ViewGroup拦截</span>\n        <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> intercepted<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>actionMasked <span class=\"token operator\">==</span> <span class=\"token class-name\">MotionEvent</span><span class=\"token punctuation\">.</span>ACTION_DOWN <span class=\"token operator\">||</span> mFirstTouchTarget <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// 校验是否给mGroupFlags设置了FLAG_DISALLOW_INTERCEPT标志位</span>\n            <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> disallowIntercept <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>mGroupFlags <span class=\"token operator\">&amp;</span> FLAG_DISALLOW_INTERCEPT<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>disallowIntercept<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">// 走onInterceptTouchEvent判断是否拦截事件</span>\n                intercepted <span class=\"token operator\">=</span> <span class=\"token function\">onInterceptTouchEvent</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                intercepted <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            intercepted <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    \n        <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> split <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>mGroupFlags <span class=\"token operator\">&amp;</span> FLAG_SPLIT_MOTION_EVENTS<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>canceled <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>intercepted<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// 注意ACTION_DOWN等事件才会走遍历所有子View的流程</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>actionMasked <span class=\"token operator\">==</span> <span class=\"token class-name\">MotionEvent</span><span class=\"token punctuation\">.</span>ACTION_DOWN\n                    <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>split <span class=\"token operator\">&amp;&amp;</span> actionMasked <span class=\"token operator\">==</span> <span class=\"token class-name\">MotionEvent</span><span class=\"token punctuation\">.</span>ACTION_POINTER_DOWN<span class=\"token punctuation\">)</span>\n                    <span class=\"token operator\">||</span> actionMasked <span class=\"token operator\">==</span> <span class=\"token class-name\">MotionEvent</span><span class=\"token punctuation\">.</span>ACTION_HOVER_MOVE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            \n                <span class=\"token comment\">// 开始遍历所有子View开始逐个分发事件</span>\n                <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> childrenCount <span class=\"token operator\">=</span> mChildrenCount<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>childrenCount <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> childrenCount <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        <span class=\"token comment\">// 判断触摸点是否在这个View的内部</span>\n                        <span class=\"token keyword\">final</span> <span class=\"token class-name\">View</span> child <span class=\"token operator\">=</span> children<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">canViewReceivePointerEvents</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span>\n                                <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token function\">isTransformedTouchPointInView</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> child<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                            <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">&#125;</span>\n                    \n                        <span class=\"token comment\">// 事件被子View消费，退出循环，不再继续分发给其他子View</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">dispatchTransformedTouchEvent</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> child<span class=\"token punctuation\">,</span> idBitsToAssign<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        \n                            <span class=\"token comment\">// addTouchTarget内部将mFirstTouchTarget设置为child，即不为null</span>\n                            newTouchTarget <span class=\"token operator\">=</span> <span class=\"token function\">addTouchTarget</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">,</span> idBitsToAssign<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            alreadyDispatchedToNewTouchTarget <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">&#125;</span>\n                    <span class=\"token punctuation\">&#125;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">// 事件未被任何子View消费，自己处理</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mFirstTouchTarget <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// No touch targets so treat this as an ordinary view.</span>\n            handled <span class=\"token operator\">=</span> <span class=\"token function\">dispatchTransformedTouchEvent</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">,</span> canceled<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token class-name\">TouchTarget</span><span class=\"token punctuation\">.</span>ALL_POINTER_IDS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// 将MotionEvent.ACTION_DOWN后续事件分发给mFirstTouchTarget指向的View</span>\n            <span class=\"token class-name\">TouchTarget</span> predecessor <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">TouchTarget</span> target <span class=\"token operator\">=</span> mFirstTouchTarget<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>target <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">final</span> <span class=\"token class-name\">TouchTarget</span> next <span class=\"token operator\">=</span> target<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">// 如果已经在上面的遍历过程中传递过事件，跳过本次传递</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>alreadyDispatchedToNewTouchTarget <span class=\"token operator\">&amp;&amp;</span> target <span class=\"token operator\">==</span> newTouchTarget<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    handled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> cancelChild <span class=\"token operator\">=</span> <span class=\"token function\">resetCancelNextUpFlag</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>child<span class=\"token punctuation\">)</span>\n                            <span class=\"token operator\">||</span> intercepted<span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">dispatchTransformedTouchEvent</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">,</span> cancelChild<span class=\"token punctuation\">,</span>\n                            target<span class=\"token punctuation\">.</span>child<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">.</span>pointerIdBits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        handled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">&#125;</span>\n                \n                <span class=\"token punctuation\">&#125;</span>\n                predecessor <span class=\"token operator\">=</span> target<span class=\"token punctuation\">;</span>\n                target <span class=\"token operator\">=</span> next<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">// Update list of touch targets for pointer up or cancel, if needed.</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>canceled\n                <span class=\"token operator\">||</span> actionMasked <span class=\"token operator\">==</span> <span class=\"token class-name\">MotionEvent</span><span class=\"token punctuation\">.</span>ACTION_UP\n                <span class=\"token operator\">||</span> actionMasked <span class=\"token operator\">==</span> <span class=\"token class-name\">MotionEvent</span><span class=\"token punctuation\">.</span>ACTION_HOVER_MOVE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">resetTouchState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>split <span class=\"token operator\">&amp;&amp;</span> actionMasked <span class=\"token operator\">==</span> <span class=\"token class-name\">MotionEvent</span><span class=\"token punctuation\">.</span>ACTION_POINTER_UP<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> actionIndex <span class=\"token operator\">=</span> ev<span class=\"token punctuation\">.</span><span class=\"token function\">getActionIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> idBitsToRemove <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> ev<span class=\"token punctuation\">.</span><span class=\"token function\">getPointerId</span><span class=\"token punctuation\">(</span>actionIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">removePointersFromTouchTargets</span><span class=\"token punctuation\">(</span>idBitsToRemove<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> handled<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n \n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">resetTouchState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">clearTouchTargets</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">resetCancelNextUpFlag</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    mGroupFlags <span class=\"token operator\">&amp;=</span> <span class=\"token operator\">~</span>FLAG_DISALLOW_INTERCEPT<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n \n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">clearTouchTargets</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">TouchTarget</span> target <span class=\"token operator\">=</span> mFirstTouchTarget<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>target <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">do</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">TouchTarget</span> next <span class=\"token operator\">=</span> target<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span>\n            target<span class=\"token punctuation\">.</span><span class=\"token function\">recycle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            target <span class=\"token operator\">=</span> next<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>target <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mFirstTouchTarget <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n \n<span class=\"token keyword\">private</span> <span class=\"token class-name\">TouchTarget</span> <span class=\"token function\">addTouchTarget</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">View</span> child<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> pointerIdBits<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">TouchTarget</span> target <span class=\"token operator\">=</span> <span class=\"token class-name\">TouchTarget</span><span class=\"token punctuation\">.</span><span class=\"token function\">obtain</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">,</span> pointerIdBits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    target<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> mFirstTouchTarget<span class=\"token punctuation\">;</span>\n    mFirstTouchTarget <span class=\"token operator\">=</span> target<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> target<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n \n<span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">dispatchTransformedTouchEvent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MotionEvent</span> event<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> cancel<span class=\"token punctuation\">,</span>\n                                              <span class=\"token class-name\">View</span> child<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> desiredPointerIdBits<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> handled<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 注意传参child为null时，调用的是自己的dispatchTouchEvent</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>child <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        handled <span class=\"token operator\">=</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">dispatchTouchEvent</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        handled <span class=\"token operator\">=</span> child<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchTouchEvent</span><span class=\"token punctuation\">(</span>transformedEvent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> handled<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n \n<span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">onInterceptTouchEvent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MotionEvent</span> ev<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 默认不拦截事件</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>View:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">dispatchTouchEvent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MotionEvent</span> event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">onFilterTouchEventForSecurity</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        \t<span class=\"token comment\">// 判断事件是否先交给ouTouch方法处理</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mOnTouchListener <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>mViewFlags <span class=\"token operator\">&amp;</span> ENABLED_MASK<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> ENABLED <span class=\"token operator\">&amp;&amp;</span>\n                    mOnTouchListener<span class=\"token punctuation\">.</span><span class=\"token function\">onTouch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token comment\">// onTouch未消费事件，传给onTouchEvent</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">onTouchEvent</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"综上\">综上<a title=\"#综上\" href=\"#综上\"></a></h3>\n<ul>\n<li>View 事件分发的本质是递归。</li>\n<li>递归的本质是，任务的下发和结果的上报。</li>\n<li>View 事件分发设计成递归，是为了配合 View 的排版规则，形成符合用户直觉的触控体验。</li>\n<li>View 事件分发的对象是一个 MotionEvent。</li>\n<li>一次用户触控操作包含多个 MotionEvent（例如从 ACTION_DOWN 到 ACTION_UP ），也即会走多次事件分发流程。</li>\n<li>一次 View 事件分发流程包含 “递” 流程和 “归” 流程，“递” 流程可以因 ViewGroup 的拦截而提前步入 “归” 流程。</li>\n<li>child 可以通过 getParent.requestDisallowInterceptTouchEvent 阻止父容器的拦截。因而需要差异化地配置阈值，来确保 child 执行 getParent.requestDisallowInterceptTouchEvent 优先于父容器 onInterceptTouchEvent 返回 true（不然都先被拦截了，child 哪有机会阻止？）</li>\n<li>在“归”流程中，唯有当前层级的 super.dispatchTouchEvent 返回了 true，才认定被消费，被消费前，下级都有干活，只是结果不 OK。被消费后，上级都不需要干活，直接向上传达消费者的功。</li>\n</ul>\n<h3 id=\"事件冲突解决\">事件冲突解决<a title=\"#事件冲突解决\" href=\"#事件冲突解决\"></a></h3>\n<ul>\n<li>从父View着手, 重写onInterceptTouchEvent方法，在父View需要拦截的时候拦截，不要的时候返回false</li>\n<li>从子View着手, 重写子 View的dispatchTouchEvent方法，在Action_down 动作中通过方法 requestDisallowInterceptTouchEvent（true） 先请求 父 View不要拦截事件，这样保证子 View 能够接受到 Action_move 事件，再在 Action_move 动作中根据自己的逻辑是否要拦截事件，不需要拦截事件的话再交给 父 View 处理</li>\n</ul>\n<h3 id=\"refer\">Refer<a title=\"#refer\" href=\"#refer\"></a></h3>\n<p><a href=\"https://juejin.cn/post/6844903894103883789\" target=\"_blank\">学习 View 事件分发，就像外地人上了黑车！ - 掘金 (juejin.cn)</a><br>\n<a href=\"https://juejin.cn/post/6965649194744807461\" target=\"_blank\">View 事件分发机制，看这一篇就够了 - 掘金 (juejin.cn)</a><br>\n<a href=\"https://blog.csdn.net/u010289802/article/details/86169939\" target=\"_blank\">Android 手把手进阶自定义View（十）- 事件分发机制解析_lerendan的博客-CSDN博客</a></p>\n",
            "tags": [
                "图形绘制"
            ]
        },
        {
            "id": "https://onion99.github.io/2021/11/04/p4CRfuQemJ4TOlAs/",
            "url": "https://onion99.github.io/2021/11/04/p4CRfuQemJ4TOlAs/",
            "title": "自定义View(8) - draw 绘制过程",
            "date_published": "2021-11-03T22:03:38.000Z",
            "content_html": "<blockquote>\n<p>Android 里面的绘制都是按顺序的，先绘制的内容会被后绘制的盖住</p>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/11/03/IES7KP.png\" alt=\"IES7KP.png\" loading=\"lazy\" class=\"φbp\"></p>\n<span id=\"more\"></span>\n<h3 id=\"draw-过程解析\">draw 过程解析<a title=\"#draw-过程解析\" href=\"#draw-过程解析\"></a></h3>\n<p>一个完整的绘制过程会依次绘制以下几个内容：<br>\n<img src=\"https://z3.ax1x.com/2021/11/03/IEp3Ie.png\" alt=\"IEp3Ie.png\" loading=\"lazy\"></p>\n<ul>\n<li><code>drawBackground()</code>绘制背景\n<ul>\n<li>这个方法是 private 的，不能重写，你如果要设置背景，只能用自带的 API 去设置</li>\n</ul>\n</li>\n<li><code>onDraw()</code>绘制主体\n<ul>\n<li>这个方法在 View 和 ViewGroup 里都是空实现，因此自定义时需要复写</li>\n</ul>\n</li>\n<li><code>dispatchDraw()</code>绘制子 View\n<ul>\n<li>在于单一 View 中无子 View，故在 View 中此方法默认为空实</li>\n<li>在 ViewGroup中系统已经复写好此方法对其子视图进行绘制因此我们不需要复写</li>\n</ul>\n</li>\n<li><code>onDrawForeground()</code>滑动边缘渐变和滑动条以及前景</li>\n</ul>\n<p>ViewGroup中的<code>dispatchDraw()</code>:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">dispatchDraw</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Canvas</span> canvas<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">boolean</span> usingRenderNodeProperties <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">isRecordingFor</span><span class=\"token punctuation\">(</span>mRenderNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> childrenCount <span class=\"token operator\">=</span> mChildrenCount<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">final</span> <span class=\"token class-name\">View</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> children <span class=\"token operator\">=</span> mChildren<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> flags <span class=\"token operator\">=</span> mGroupFlags<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 动画处理</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>flags <span class=\"token operator\">&amp;</span> FLAG_RUN_ANIMATION<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">canAnimate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> buildCache <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token function\">isHardwareAccelerated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> childrenCount<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">final</span> <span class=\"token class-name\">View</span> child <span class=\"token operator\">=</span> children<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">.</span>mViewFlags <span class=\"token operator\">&amp;</span> VISIBILITY_MASK<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> VISIBLE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">final</span> <span class=\"token class-name\">LayoutParams</span> params <span class=\"token operator\">=</span> child<span class=\"token punctuation\">.</span><span class=\"token function\">getLayoutParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">attachLayoutAnimationParameters</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> childrenCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">bindLayoutAnimation</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">// xxx</span>\n        controller<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 间距处理</span>\n    <span class=\"token keyword\">int</span> clipSaveCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> clipToPadding <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>flags <span class=\"token operator\">&amp;</span> CLIP_TO_PADDING_MASK<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> CLIP_TO_PADDING_MASK<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>clipToPadding<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        clipSaveCount <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Canvas</span><span class=\"token punctuation\">.</span>CLIP_SAVE_FLAG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        canvas<span class=\"token punctuation\">.</span><span class=\"token function\">clipRect</span><span class=\"token punctuation\">(</span>mScrollX <span class=\"token operator\">+</span> mPaddingLeft<span class=\"token punctuation\">,</span> mScrollY <span class=\"token operator\">+</span> mPaddingTop<span class=\"token punctuation\">,</span>\n                mScrollX <span class=\"token operator\">+</span> mRight <span class=\"token operator\">-</span> mLeft <span class=\"token operator\">-</span> mPaddingRight<span class=\"token punctuation\">,</span>\n                mScrollY <span class=\"token operator\">+</span> mBottom <span class=\"token operator\">-</span> mTop <span class=\"token operator\">-</span> mPaddingBottom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// 遍历子View</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> childrenCount<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>transientChild<span class=\"token punctuation\">.</span>mViewFlags <span class=\"token operator\">&amp;</span> VISIBILITY_MASK<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> VISIBLE <span class=\"token operator\">||</span>transientChild<span class=\"token punctuation\">.</span><span class=\"token function\">getAnimation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">// 2. 绘制子View视图    </span>\n                more <span class=\"token operator\">|=</span> <span class=\"token function\">drawChild</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">,</span> transientChild<span class=\"token punctuation\">,</span> drawingTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"draw顺序\">draw顺序<a title=\"#draw顺序\" href=\"#draw顺序\"></a></h3>\n<h4 id=\"ondraw()\">onDraw()<a title=\"#ondraw()\" href=\"#ondraw()\"></a></h4>\n<blockquote>\n<p>自定义绘制最基本的形态：继承 View 类，在 onDraw() 中完全自定义它的绘制</p>\n</blockquote>\n<p>定义 View 时，绘制代码写在 super.onDraw() 的上面还是下面都无所谓,但基于已有控件的自定义绘制，就不能不考虑 <code>super.onDraw()</code> 了，你需要根据自己的需求，判断出你绘制的内容需要盖住控件原有的内容还是需要被控件原有的内容盖住，从而确定你的绘制代码是应该写在 super.onDraw() 的上面还是下面。</p>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th style=\"text-align:center\">上面</th>\n<th style=\"text-align:center\">下面</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><img src=\"https://z3.ax1x.com/2021/11/03/IEFrgH.png\" alt=\"IEFrgH.png\" loading=\"lazy\"></td>\n<td style=\"text-align:center\"><img src=\"https://z3.ax1x.com/2021/11/03/IEFHrn.png\" alt=\"IEFHrn.png\" loading=\"lazy\"></td>\n</tr>\n</tbody>\n</table></div></div><h4 id=\"dispatchdraw()\">dispatchDraw()<a title=\"#dispatchdraw()\" href=\"#dispatchdraw()\"></a></h4>\n<blockquote>\n<p>如果想在一个ViewGroup中按上面的做法在下面添加绘制内容则是不行的,因为在绘制过程中每一个 ViewGroup 会先调用自己的 onDraw() 来绘制完自己的主体之后再去绘制它的子 View,会覆盖其主体</p>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/11/03/IEEpH1.png\" alt=\"IEEpH1.png\" loading=\"lazy\" class=\"φbp\"></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpottedLinearLayout</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">LinearLayout</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token comment\">// 把 onDraw() 换成了 dispatchDraw()</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">dispatchDraw</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Canvas</span> canvas<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">dispatchDraw</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token comment\">// 绘制斑点</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>虽然 View 和 ViewGroup 都有 dispatchDraw() 方法，不过由于 View 是没有子 View 的，所以一般来说 dispatchDraw() 这个方法只对 ViewGroup（以及它的子类）有意义。</p>\n<h4 id=\"ondrawforeground()\">onDrawForeground()<a title=\"#ondrawforeground()\" href=\"#ondrawforeground()\"></a></h4>\n<blockquote>\n<p>前景前后处理</p>\n</blockquote>\n<p>在 super.onDrawForeground() 的上面</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppImageView</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ImageView</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onDrawForeground</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Canvas</span> canvas<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token comment\">// 绘制「New」标签</span>\n       <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onDrawForeground</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://z3.ax1x.com/2021/11/03/IEVgSS.png\" alt=\"IEVgSS.png\" loading=\"lazy\" class=\"φbp\"></p>\n<p>在 super.onDrawForeground() 的下面:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppImageView</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ImageView</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onDrawForeground</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Canvas</span> canvas<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onDrawForeground</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token comment\">// 绘制「New」标签</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://z3.ax1x.com/2021/11/03/IEZV0A.png\" alt=\"IEZV0A.png\" loading=\"lazy\" class=\"φbp\"></p>\n<h4 id=\"draw()\">draw()<a title=\"#draw()\" href=\"#draw()\"></a></h4>\n<h3 id=\"总结\">总结<a title=\"#总结\" href=\"#总结\"></a></h3>\n<p><img src=\"https://z3.ax1x.com/2021/11/03/IEZ1XQ.png\" alt=\"IEZ1XQ.png\" loading=\"lazy\" class=\"φbp\"></p>\n",
            "tags": [
                "图形绘制"
            ]
        },
        {
            "id": "https://onion99.github.io/2021/11/04/ZyOr4iLxJj7nAQxR/",
            "url": "https://onion99.github.io/2021/11/04/ZyOr4iLxJj7nAQxR/",
            "title": "自定义View(7) - layout 布局过程",
            "date_published": "2021-11-03T22:02:46.000Z",
            "content_html": "<p><img src=\"https://s2.ax1x.com/2019/12/06/QJQEcR.jpg\" alt=\"viewasds\" loading=\"lazy\" class=\"φbp\"></p>\n<span id=\"more\"></span>\n<h3 id=\"layout-类型\">layout 类型<a title=\"#layout-类型\" href=\"#layout-类型\"></a></h3>\n<p><img src=\"https://z3.ax1x.com/2021/11/03/IA7tv4.png\" alt=\"IA7tv4.png\" loading=\"lazy\" class=\"φbp\"></p>\n<h3 id=\"view-的-layout-过程\">View 的 layout 过程<a title=\"#view-的-layout-过程\" href=\"#view-的-layout-过程\"></a></h3>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 指定视图及其所有子视图的大小和位置 这是布局机制的第二阶段</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">layout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> l<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> t<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 判断是否measure,没有的话再measure一遍</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>mPrivateFlags3 <span class=\"token operator\">&amp;</span> PFLAG3_MEASURE_NEEDED_BEFORE_LAYOUT<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">onMeasure</span><span class=\"token punctuation\">(</span>mOldWidthMeasureSpec<span class=\"token punctuation\">,</span> mOldHeightMeasureSpec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mPrivateFlags3 <span class=\"token operator\">&amp;=</span> <span class=\"token operator\">~</span>PFLAG3_MEASURE_NEEDED_BEFORE_LAYOUT<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 当前视图的四个顶点</span>\n    <span class=\"token keyword\">int</span> oldL <span class=\"token operator\">=</span> mLeft<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> oldT <span class=\"token operator\">=</span> mTop<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> oldB <span class=\"token operator\">=</span> mBottom<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> oldR <span class=\"token operator\">=</span> mRight<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 判断视图大小或者位置是否发生改变</span>\n    <span class=\"token keyword\">boolean</span> changed <span class=\"token operator\">=</span> <span class=\"token function\">isLayoutModeOptical</span><span class=\"token punctuation\">(</span>mParent<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span>\n            <span class=\"token function\">setOpticalFrame</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">setFrame</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 发生改变        </span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>changed <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>mPrivateFlags <span class=\"token operator\">&amp;</span> PFLAG_LAYOUT_REQUIRED<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> PFLAG_LAYOUT_REQUIRED<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">onLayout</span><span class=\"token punctuation\">(</span>changed<span class=\"token punctuation\">,</span> l<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 对于单一View的laytou过程：由于单一View是没有子View的，故onLayout（）是一个空实现->>分析3</span>\n        <span class=\"token comment\">// 对于ViewGroup的laytou过程：由于确定位置与具体布局有关，所以onLayout（）在ViewGroup为1个抽象方法，需重写实现</span>\n\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://z3.ax1x.com/2021/11/03/IAqjZd.png\" alt=\"IAqjZd.png\" loading=\"lazy\" class=\"φbp\"></p>\n<h3 id=\"viewgroup-的-layout-过程\">ViewGroup 的 layout 过程<a title=\"#viewgroup-的-layout-过程\" href=\"#viewgroup-的-layout-过程\"></a></h3>\n<blockquote>\n<p>ViewGroup 的 layout 过程确定位置与具体的布局有关，所以在 ViewGroup 中是一个抽象方法，需要重写实现</p>\n</blockquote>\n<p>复写<code> onLayout()</code>步骤:</p>\n<ol>\n<li>遍历所有子 View</li>\n<li>根据自身需求计算当前子 View 的四个位置值（需自身实现）</li>\n<li>根据上述 4 个位置的计算值，设置子 View 的 4 个顶点：调用子 View 的 layout 方法，即确定了子 View 在父容器里的位置</li>\n</ol>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// ViewGroup的onLayout实现的大致思路</span>\n<span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onLayout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">boolean</span> changed<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> left<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> top<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> right<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> bottom<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   <span class=\"token comment\">// 参数说明</span>\n   <span class=\"token comment\">// changed 当前View的大小和位置改变了 </span>\n   <span class=\"token comment\">// left 左部位置  top 顶部位置  right 右部位置  bottom 底部位置</span>\n   <span class=\"token comment\">// 1. 遍历子View：循环所有子View</span>\n   <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">&lt;</span><span class=\"token function\">getChildCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n         <span class=\"token class-name\">View</span> child <span class=\"token operator\">=</span> <span class=\"token function\">getChildAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   \n         <span class=\"token comment\">// 2. 计算当前子View的四个位置值</span>\n         <span class=\"token comment\">// 2.1 位置的计算逻辑需自己实现，也是自定义View的关键</span>\n         <span class=\"token function\">calculate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token comment\">// 2.2 对计算后的位置值进行赋值</span>\n         <span class=\"token keyword\">int</span> mLeft  <span class=\"token operator\">=</span> <span class=\"token class-name\">Left</span>\n         <span class=\"token keyword\">int</span> mTop  <span class=\"token operator\">=</span> <span class=\"token class-name\">Top</span>\n         <span class=\"token keyword\">int</span> mRight <span class=\"token operator\">=</span> <span class=\"token class-name\">Right</span>\n         <span class=\"token keyword\">int</span> mBottom <span class=\"token operator\">=</span> <span class=\"token class-name\">Bottom</span>\n \n       <span class=\"token comment\">// 3. 根据上述4个位置的计算值设置子View的4个顶点：调用子view的layout() &amp; 传递计算过的参数</span>\n       <span class=\"token comment\">// 即确定了子View在父容器的位置</span>\n       child<span class=\"token punctuation\">.</span><span class=\"token function\">layout</span><span class=\"token punctuation\">(</span>mLeft<span class=\"token punctuation\">,</span> mTop<span class=\"token punctuation\">,</span> mRight<span class=\"token punctuation\">,</span> mBottom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token comment\">// 该过程类似于单一View的layout过程中的layout()和onLayout()</span>\n   <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://z3.ax1x.com/2021/11/03/IAL1L4.png\" alt=\"IAL1L4.png\" loading=\"lazy\" class=\"φbp\"></p>\n<h4 id=\"viewgroup-子类（linearlayout）的-layout-过程分析\">ViewGroup 子类（LinearLayout）的 layout 过程分析<a title=\"#viewgroup-子类（linearlayout）的-layout-过程分析\" href=\"#viewgroup-子类（linearlayout）的-layout-过程分析\"></a></h4>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onLayout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">boolean</span> changed<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> l<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> t<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> r<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> b<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 根据自身方向属性，而选择不同的处理方式</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mOrientation <span class=\"token operator\">==</span> VERTICAL<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">layoutVertical</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">layoutHorizontal</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">,</span> t<span class=\"token punctuation\">,</span> r<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>根据 LinearLayout 的方向（vertical、horizontal）进入不同的布局过程，这里我们只选垂直方向的布局过程，即layoutVertical()</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">void</span> <span class=\"token function\">layoutVertical</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> left<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> top<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> right<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> bottom<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 子View的数量</span>\n    <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token function\">getVirtualChildCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 1. 遍历子View</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> count<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">final</span> <span class=\"token class-name\">View</span> child <span class=\"token operator\">=</span> <span class=\"token function\">getVirtualChildAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>child <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            childTop <span class=\"token operator\">+=</span> <span class=\"token function\">measureNullChild</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">.</span><span class=\"token function\">getVisibility</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> GONE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// 2. 计算子View的测量宽 / 高值</span>\n            <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> childWidth <span class=\"token operator\">=</span> child<span class=\"token punctuation\">.</span><span class=\"token function\">getMeasuredWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> childHeight <span class=\"token operator\">=</span> child<span class=\"token punctuation\">.</span><span class=\"token function\">getMeasuredHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n            <span class=\"token comment\">// 3. 确定自身子View的位置</span>\n            <span class=\"token comment\">// 即：递归调用子View的setChildFrame()，实际上是调用了子View的layout() ->>分析2</span>\n            <span class=\"token function\">setChildFrame</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">,</span> childLeft<span class=\"token punctuation\">,</span> childTop <span class=\"token operator\">+</span> <span class=\"token function\">getLocationOffset</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> childWidth<span class=\"token punctuation\">,</span> childHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n            <span class=\"token comment\">// childTop逐渐增大，即后面的子元素会被放置在靠下的位置</span>\n            <span class=\"token comment\">// 这符合垂直方向的LinearLayout的特性</span>\n            childTop <span class=\"token operator\">+=</span> childHeight <span class=\"token operator\">+</span> lp<span class=\"token punctuation\">.</span>bottomMargin <span class=\"token operator\">+</span> <span class=\"token function\">getNextLocationOffset</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n            i <span class=\"token operator\">+=</span> <span class=\"token function\">getChildrenSkipCount</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n \n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setChildFrame</span><span class=\"token punctuation\">(</span> <span class=\"token class-name\">View</span> child<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> left<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> top<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// setChildFrame（）仅仅只是调用了子View的layout（）而已</span>\n    child<span class=\"token punctuation\">.</span><span class=\"token function\">layout</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">,</span> left <span class=\"token operator\">++</span> width<span class=\"token punctuation\">,</span> top <span class=\"token operator\">+</span> height<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 在子View的layout（）又通过调用setFrame（）确定View的四个顶点</span>\n    <span class=\"token comment\">// 即确定了子View的位置</span>\n    <span class=\"token comment\">// 如此不断循环确定所有子View的位置，最终确定ViewGroup的位置</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"getmeasurewidth-和-getwidth-区别\">getMeasureWidth 和 getWidth 区别<a title=\"#getmeasurewidth-和-getwidth-区别\" href=\"#getmeasurewidth-和-getwidth-区别\"></a></h3>\n<blockquote>\n<p>某些情况下，View 需要多次 measure 才能确定自己的测量宽高，在前几次的测量过程中，其得出的测量宽高有可能和最终宽高不一致.，但最终来说，测量宽高还是和最终宽高相同。</p>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/11/03/IAjrmF.png\" alt=\"IAjrmF.png\" loading=\"lazy\" class=\"φbp\"></p>\n",
            "tags": [
                "图形绘制"
            ]
        },
        {
            "id": "https://onion99.github.io/2021/11/04/Qj9f1VMJJowv5Lfb/",
            "url": "https://onion99.github.io/2021/11/04/Qj9f1VMJJowv5Lfb/",
            "title": "自定义View(6) - measure 测量过程",
            "date_published": "2021-11-03T22:00:58.000Z",
            "content_html": "<p><img src=\"https://s2.ax1x.com/2019/12/06/QJQEcR.jpg\" alt=\"QJQEcR.jpg\" loading=\"lazy\" class=\"φbp\"></p>\n<span id=\"more\"></span>\n<h3 id=\"measurespec\">MeasureSpec<a title=\"#measurespec\" href=\"#measurespec\"></a></h3>\n<blockquote>\n<p>MeasureSpec 代表测量规格，是一个 32 位的 int 值，高 2 位代表 SpecMode（测量模式），低 30 位代表 SpecSize（测量大小）</p>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/11/02/IF7OM9.png\" alt=\"IF7OM9.png\" loading=\"lazy\" class=\"φbp\"></p>\n<p>MeasureSpec 通过将 SpecMode 和 SpecSize 打包成一个 int 值来避免过多的内存分配，并提供了打包和解包的方法</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onMeasure</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> widthMeasureSpec<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> heightMeasureSpec<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">int</span> widthMode <span class=\"token operator\">=</span> <span class=\"token class-name\">MeasureSpec</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMode</span><span class=\"token punctuation\">(</span>widthMeasureSpec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> widthSize <span class=\"token operator\">=</span> <span class=\"token class-name\">MeasureSpec</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSize</span><span class=\"token punctuation\">(</span>widthMeasureSpec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> heightMode <span class=\"token operator\">=</span> <span class=\"token class-name\">MeasureSpec</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMode</span><span class=\"token punctuation\">(</span>heightMeasureSpec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> heightSize <span class=\"token operator\">=</span> <span class=\"token class-name\">MeasureSpec</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSize</span><span class=\"token punctuation\">(</span>heightMeasureSpec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"specmode\">SpecMode<a title=\"#specmode\" href=\"#specmode\"></a></h4>\n<p><img src=\"https://z3.ax1x.com/2021/11/02/IFbTc4.png\" alt=\"IFbTc4.png\" loading=\"lazy\" class=\"φbp\"></p>\n<h3 id=\"measurespec值计算\">MeasureSpec值计算<a title=\"#measurespec值计算\" href=\"#measurespec值计算\"></a></h3>\n<blockquote>\n<p>View 的 MeasureSpec 值是由 View 的布局参数和父容器 的 MeasureSpec 值计算</p>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/11/03/IAVp1e.png\" alt=\"IAVp1e.png\" loading=\"lazy\" class=\"φbp\"></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * 源码分析：getChildMeasureSpec（）\n * 作用：根据父视图的MeasureSpec &amp; 布局参数LayoutParams，计算单个子View的MeasureSpec\n * 注：子view的大小由父view的MeasureSpec值 和 子view的LayoutParams属性 共同决定\n * 参数说明\n * @param spec           父view的详细测量值 (MeasureSpec)\n * @param padding        view当前尺寸的的内边距和外边距(padding, margin)\n * @param childDimension 子视图的布局参数（宽 / 高）\n **/</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getChildMeasureSpec</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> spec<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> padding<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> childDimension<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">//父view的测量模式</span>\n    <span class=\"token keyword\">int</span> specMode <span class=\"token operator\">=</span> <span class=\"token class-name\">MeasureSpec</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMode</span><span class=\"token punctuation\">(</span>spec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//父view的大小</span>\n    <span class=\"token keyword\">int</span> specSize <span class=\"token operator\">=</span> <span class=\"token class-name\">MeasureSpec</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSize</span><span class=\"token punctuation\">(</span>spec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">//通过父view计算出的子view大小 = 父大小-边距（父要求的大小，但子view不一定用这个值）   </span>\n    <span class=\"token keyword\">int</span> size <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> specSize <span class=\"token operator\">-</span> padding<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n    <span class=\"token comment\">//子view想要的实际大小和模式（需要计算）  </span>\n    <span class=\"token keyword\">int</span> resultSize <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> resultMode <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n \n    <span class=\"token comment\">//通过父view的MeasureSpec和子view的LayoutParams确定子view的大小  </span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>specMode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">//当父view的模式为EXACITY时，父view强加给子view确切的值</span>\n        <span class=\"token comment\">//一般是父view设置为match_parent或者固定值的ViewGroup </span>\n        <span class=\"token keyword\">case</span> <span class=\"token class-name\">MeasureSpec</span><span class=\"token punctuation\">.</span>EXACTLY<span class=\"token operator\">:</span>\n            <span class=\"token comment\">// 当子view的LayoutParams>0，即有确切的值  </span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>childDimension <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">//子view大小为子自身所赋的值，模式大小为EXACTLY  </span>\n                resultSize <span class=\"token operator\">=</span> childDimension<span class=\"token punctuation\">;</span>\n                resultMode <span class=\"token operator\">=</span> <span class=\"token class-name\">MeasureSpec</span><span class=\"token punctuation\">.</span>EXACTLY<span class=\"token punctuation\">;</span>\n                \n                <span class=\"token comment\">//当子view的LayoutParams为MATCH_PARENT时(-1)  </span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>childDimension <span class=\"token operator\">==</span> <span class=\"token class-name\">LayoutParams</span><span class=\"token punctuation\">.</span>MATCH_PARENT<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">//子view大小为父view大小，模式为EXACTLY  </span>\n                resultSize <span class=\"token operator\">=</span> size<span class=\"token punctuation\">;</span>\n                resultMode <span class=\"token operator\">=</span> <span class=\"token class-name\">MeasureSpec</span><span class=\"token punctuation\">.</span>EXACTLY<span class=\"token punctuation\">;</span>\n\n                <span class=\"token comment\">// 当子view的LayoutParams为WRAP_CONTENT时(-2)      </span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>childDimension <span class=\"token operator\">==</span> <span class=\"token class-name\">LayoutParams</span><span class=\"token punctuation\">.</span>WRAP_CONTENT<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">//子view决定自己的大小，但最大不能超过父view，模式为AT_MOST  </span>\n                resultSize <span class=\"token operator\">=</span> size<span class=\"token punctuation\">;</span>\n                resultMode <span class=\"token operator\">=</span> <span class=\"token class-name\">MeasureSpec</span><span class=\"token punctuation\">.</span>AT_MOST<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n \n        <span class=\"token comment\">// 当父view的模式为AT_MOST时，父view强加给子view一个最大的值。（一般是父view设置为wrap_content）  </span>\n        <span class=\"token keyword\">case</span> <span class=\"token class-name\">MeasureSpec</span><span class=\"token punctuation\">.</span>AT_MOST<span class=\"token operator\">:</span>\n            <span class=\"token comment\">// 道理同上  </span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>childDimension <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                resultSize <span class=\"token operator\">=</span> childDimension<span class=\"token punctuation\">;</span>\n                resultMode <span class=\"token operator\">=</span> <span class=\"token class-name\">MeasureSpec</span><span class=\"token punctuation\">.</span>EXACTLY<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>childDimension <span class=\"token operator\">==</span> <span class=\"token class-name\">LayoutParams</span><span class=\"token punctuation\">.</span>MATCH_PARENT<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                resultSize <span class=\"token operator\">=</span> size<span class=\"token punctuation\">;</span>\n                resultMode <span class=\"token operator\">=</span> <span class=\"token class-name\">MeasureSpec</span><span class=\"token punctuation\">.</span>AT_MOST<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>childDimension <span class=\"token operator\">==</span> <span class=\"token class-name\">LayoutParams</span><span class=\"token punctuation\">.</span>WRAP_CONTENT<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                resultSize <span class=\"token operator\">=</span> size<span class=\"token punctuation\">;</span>\n                resultMode <span class=\"token operator\">=</span> <span class=\"token class-name\">MeasureSpec</span><span class=\"token punctuation\">.</span>AT_MOST<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n \n        <span class=\"token comment\">// 当父view的模式为UNSPECIFIED时，父容器不对view有任何限制，要多大给多大</span>\n        <span class=\"token comment\">// 多见于ListView、GridView  </span>\n        <span class=\"token keyword\">case</span> <span class=\"token class-name\">MeasureSpec</span><span class=\"token punctuation\">.</span>UNSPECIFIED<span class=\"token operator\">:</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>childDimension <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">// 子view大小为子自身所赋的值  </span>\n                resultSize <span class=\"token operator\">=</span> childDimension<span class=\"token punctuation\">;</span>\n                resultMode <span class=\"token operator\">=</span> <span class=\"token class-name\">MeasureSpec</span><span class=\"token punctuation\">.</span>EXACTLY<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>childDimension <span class=\"token operator\">==</span> <span class=\"token class-name\">LayoutParams</span><span class=\"token punctuation\">.</span>MATCH_PARENT<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">// 因为父view为UNSPECIFIED，所以MATCH_PARENT的话子类大小为0  </span>\n                resultSize <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                resultMode <span class=\"token operator\">=</span> <span class=\"token class-name\">MeasureSpec</span><span class=\"token punctuation\">.</span>UNSPECIFIED<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>childDimension <span class=\"token operator\">==</span> <span class=\"token class-name\">LayoutParams</span><span class=\"token punctuation\">.</span>WRAP_CONTENT<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">// 因为父view为UNSPECIFIED，所以WRAP_CONTENT的话子类大小为0  </span>\n                resultSize <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n                resultMode <span class=\"token operator\">=</span> <span class=\"token class-name\">MeasureSpec</span><span class=\"token punctuation\">.</span>UNSPECIFIED<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token class-name\">MeasureSpec</span><span class=\"token punctuation\">.</span><span class=\"token function\">makeMeasureSpec</span><span class=\"token punctuation\">(</span>resultSize<span class=\"token punctuation\">,</span> resultMode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://z3.ax1x.com/2021/11/03/IAemLj.png\" alt=\"IAemLj.png\" loading=\"lazy\" class=\"φbp\"></p>\n<h3 id=\"measure-过程\">Measure 过程<a title=\"#measure-过程\" href=\"#measure-过程\"></a></h3>\n<p><img src=\"https://z3.ax1x.com/2021/11/03/IAuMTA.png\" alt=\"IAuMTA.png\" loading=\"lazy\" class=\"φbp\"></p>\n<p>布局过程自定义的方式</p>\n<ol>\n<li>重写  <code>onMeasure()</code>  来修改已有的  <code>View</code>  的尺寸；</li>\n<li>重写  <code>onMeasure()</code>  来全新定制自定义  <code>View</code>  的尺寸；</li>\n<li>重写  <code>onMeasure()</code>  和  <code>onLayout()</code>  来全新定制自定义  <code>ViewGroup</code>  的内部布局。</li>\n</ol>\n<h4 id=\"view的measure\">View的measure<a title=\"#view的measure\" href=\"#view的measure\"></a></h4>\n<p>View 的 measure 过程由其<code>measure()</code> 方法完成：</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">/**\n* 源码分析：measure（）\n* 定义：Measure过程的入口；属于View.java类 &amp; final类型，即子类不能重写此方法\n* 作用：基本测量逻辑的判断\n**/</span> \n<span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">void</span> <span class=\"token function\">measure</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> widthMeasureSpec<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> heightMeasureSpec<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token comment\">// 判断是否需要重新测量           </span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>forceLayout <span class=\"token operator\">||</span> needsLayout<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n        <span class=\"token comment\">// 判断是否有缓存</span>\n        <span class=\"token keyword\">int</span> cacheIndex <span class=\"token operator\">=</span> forceLayout <span class=\"token operator\">?</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">:</span> mMeasureCache<span class=\"token punctuation\">.</span><span class=\"token function\">indexOfKey</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cacheIndex <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span> <span class=\"token operator\">||</span> sIgnoreMeasureCache<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// 开始测量</span>\n            <span class=\"token function\">onMeasure</span><span class=\"token punctuation\">(</span>widthMeasureSpec<span class=\"token punctuation\">,</span> heightMeasureSpec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            mPrivateFlags3 <span class=\"token operator\">&amp;=</span> <span class=\"token operator\">~</span>PFLAG3_MEASURE_NEEDED_BEFORE_LAYOUT<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">long</span> value <span class=\"token operator\">=</span> mMeasureCache<span class=\"token punctuation\">.</span><span class=\"token function\">valueAt</span><span class=\"token punctuation\">(</span>cacheIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// Casting a long to int drops the high 32 bits, no mask needed</span>\n            <span class=\"token function\">setMeasuredDimensionRaw</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">>></span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            mPrivateFlags3 <span class=\"token operator\">|=</span> PFLAG3_MEASURE_NEEDED_BEFORE_LAYOUT<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">&#125;</span>  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><code>setMeasuredDimension()</code>方法会设置 View 的宽/高的测量值，因此我们只需要看<code>getDefaultSize()</code> 方法即可</p>\n<p><img src=\"https://z3.ax1x.com/2021/11/03/IAGYZT.png\" alt=\"IAGYZT.png\" loading=\"lazy\" class=\"φbp\"></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * onMeasure（）要的做是事情\n * 1. 根据View宽/高的测量规格计算View的宽/高值：getDefaultSize()\n * 2. 存储测量后的View宽 / 高：setMeasuredDimension()\n **/</span>\n <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onMeasure</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> widthMeasureSpec<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> heightMeasureSpec<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token function\">setMeasuredDimension</span><span class=\"token punctuation\">(</span><span class=\"token function\">getDefaultSize</span><span class=\"token punctuation\">(</span><span class=\"token function\">getSuggestedMinimumWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> widthMeasureSpec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n             <span class=\"token function\">getDefaultSize</span><span class=\"token punctuation\">(</span><span class=\"token function\">getSuggestedMinimumHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> heightMeasureSpec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">&#125;</span>\n \n <span class=\"token comment\">/**\n  * @param size        提供的默认大小\n  * @param measureSpec 宽/高的测量规格\n  */</span>\n <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getDefaultSize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> size<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> measureSpec<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n     <span class=\"token comment\">// 设置默认大小</span>\n     <span class=\"token keyword\">int</span> result <span class=\"token operator\">=</span> size<span class=\"token punctuation\">;</span>\n     <span class=\"token comment\">// 获取宽/高测量规格的模式 &amp; 测量大小</span>\n     <span class=\"token keyword\">int</span> specMode <span class=\"token operator\">=</span> <span class=\"token class-name\">MeasureSpec</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMode</span><span class=\"token punctuation\">(</span>measureSpec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">int</span> specSize <span class=\"token operator\">=</span> <span class=\"token class-name\">MeasureSpec</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSize</span><span class=\"token punctuation\">(</span>measureSpec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>specMode<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token comment\">// 模式为UNSPECIFIED时，使用提供的默认大小 = 参数Size</span>\n       <span class=\"token keyword\">case</span> <span class=\"token class-name\">MeasureSpec</span><span class=\"token punctuation\">.</span>UNSPECIFIED<span class=\"token operator\">:</span>\n         result <span class=\"token operator\">=</span> size<span class=\"token punctuation\">;</span>\n         <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n       <span class=\"token comment\">// 模式为AT_MOST,EXACTLY时，使用View测量后的宽/高值 = measureSpec中的Size  </span>\n       <span class=\"token keyword\">case</span> <span class=\"token class-name\">MeasureSpec</span><span class=\"token punctuation\">.</span>AT_MOST<span class=\"token operator\">:</span>\n       <span class=\"token keyword\">case</span> <span class=\"token class-name\">MeasureSpec</span><span class=\"token punctuation\">.</span>EXACTLY<span class=\"token operator\">:</span>\n         result <span class=\"token operator\">=</span> specSize<span class=\"token punctuation\">;</span>\n         <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n     <span class=\"token punctuation\">&#125;</span>\n     <span class=\"token comment\">// 返回View的宽/高值</span>\n     <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">&#125;</span>  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>当模式是 UNSPECIFIED 时，使用的是提供的默认大小:</p>\n<ul>\n<li>若 View 无设置背景，那么 View 的宽度 = mMinWidth。mMinWidth为 android:minWidth属性所指定的值，默认为 0</li>\n<li>若 View设置了背景，View 的宽度为 mMinWidth 和 mBackground.getMinimumWidth()中的最大值。</li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getSuggestedMinimumWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>mBackground <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> mMinWidth <span class=\"token operator\">:</span> <span class=\"token function\">max</span><span class=\"token punctuation\">(</span>mMinWidth<span class=\"token punctuation\">,</span> mBackground<span class=\"token punctuation\">.</span><span class=\"token function\">getMinimumWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th style=\"text-align:center\">过程</th>\n<th style=\"text-align:center\">行为作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><img src=\"https://z3.ax1x.com/2021/11/03/IAJ9mV.png\" alt=\"IAJ9mV.png\" loading=\"lazy\"></td>\n<td style=\"text-align:center\"><img src=\"https://z3.ax1x.com/2021/11/03/IAJ1te.png\" alt=\"IAJ1te.png\" loading=\"lazy\"></td>\n</tr>\n</tbody>\n</table></div></div><h4 id=\"viewgroup的measure\">ViewGroup的measure<a title=\"#viewgroup的measure\" href=\"#viewgroup的measure\"></a></h4>\n<blockquote>\n<p>ViewGroup是个抽象类,不同ViewGroup的onMeasure的实现都个不相同,除了完成自己的 measure 过程以外，还会遍历去调用所有子元素的 measure 方法，各个子元素再递归去执行这个过程</p>\n</blockquote>\n<ol>\n<li>遍历所有子 View &amp; 测量：measureChildren()</li>\n<li>合并所有子 View 的尺寸大小，最终得到 ViewGroup 的测量值（需自身实现）</li>\n<li>存储测量后 View 宽/高的值：调用 setMeasuredDimension()</li>\n</ol>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onMeasure</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> widthMeasureSpec<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> heightMeasureSpec<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 定义存放测量后的View宽/高的变量</span>\n      <span class=\"token keyword\">int</span> widthMeasure <span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">int</span> heightMeasure <span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 1. 遍历所有子 View &amp; 测量(measureChildren())</span>\n      <span class=\"token function\">measureChildren</span><span class=\"token punctuation\">(</span>widthMeasureSpec<span class=\"token punctuation\">,</span> heightMeasureSpec<span class=\"token punctuation\">)</span>；\n      <span class=\"token comment\">// 2. 合并所有子View的尺寸大小，最终得到ViewGroup父视图的测量值</span>\n      <span class=\"token comment\">// 需自身实现</span>\n      <span class=\"token function\">measureMerge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 3. 存储测量后View宽/高的值：调用setMeasuredDimension()</span>\n      <span class=\"token comment\">// 类似单一View的过程，此处不作过多描述</span>\n      <span class=\"token function\">setMeasuredDimension</span><span class=\"token punctuation\">(</span>widthMeasure<span class=\"token punctuation\">,</span>  heightMeasure<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><code>measureChildren()</code>遍历子 View 并且调用 measureChild() 进行下一步测量</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">measureChildren</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> widthMeasureSpec<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> heightMeasureSpec<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 要求该视图的所有子视图度量自己，同时考虑该视图的MeasureSpec要求及其填充。我们跳过了处于GONE状态的子节点</span>\n    <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> size <span class=\"token operator\">=</span> mChildrenCount<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">final</span> <span class=\"token class-name\">View</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> children <span class=\"token operator\">=</span> mChildren<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> size<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">final</span> <span class=\"token class-name\">View</span> child <span class=\"token operator\">=</span> children<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">.</span>mViewFlags <span class=\"token operator\">&amp;</span> VISIBILITY_MASK<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> GONE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">measureChild</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">,</span> widthMeasureSpec<span class=\"token punctuation\">,</span> heightMeasureSpec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th style=\"text-align:center\">过程</th>\n<th style=\"text-align:center\">行为作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><img src=\"https://z3.ax1x.com/2021/11/03/IAokqI.png\" alt=\"IAokqI.png\" loading=\"lazy\"></td>\n<td style=\"text-align:center\"><img src=\"https://z3.ax1x.com/2021/11/03/IAo1Ln.png\" alt=\"IAo1Ln.png\" loading=\"lazy\"></td>\n</tr>\n</tbody>\n</table></div></div><h5 id=\"linearlayout-measure分析\">LinearLayout measure分析<a title=\"#linearlayout-measure分析\" href=\"#linearlayout-measure分析\"></a></h5>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onMeasure</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> widthMeasureSpec<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> heightMeasureSpec<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 根据不同的布局属性进行不同的计算</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mOrientation <span class=\"token operator\">==</span> VERTICAL<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">measureVertical</span><span class=\"token punctuation\">(</span>widthMeasureSpec<span class=\"token punctuation\">,</span> heightMeasureSpec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">measureHorizontal</span><span class=\"token punctuation\">(</span>widthMeasureSpec<span class=\"token punctuation\">,</span> heightMeasureSpec<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">void</span> <span class=\"token function\">measureVertical</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> widthMeasureSpec<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> heightMeasureSpec<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 获取垂直方向上的子View个数</span>\n    <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> count <span class=\"token operator\">=</span> <span class=\"token function\">getVirtualChildCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n    <span class=\"token comment\">// 遍历子View获取其高度，并记录下子View中最高的高度数值</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> count<span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">final</span> <span class=\"token class-name\">View</span> child <span class=\"token operator\">=</span> <span class=\"token function\">getVirtualChildAt</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n        <span class=\"token comment\">// 子View不可见，直接跳过该View的measure过程，getChildrenSkipCount()返回值恒为0</span>\n        <span class=\"token comment\">// 注：若view的可见属性设置为VIEW.INVISIBLE，还是会计算该view大小</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">.</span><span class=\"token function\">getVisibility</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token class-name\">View</span><span class=\"token punctuation\">.</span>GONE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n           i <span class=\"token operator\">+=</span> <span class=\"token function\">getChildrenSkipCount</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n           <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n \n        <span class=\"token comment\">// 记录子View是否有weight属性设置，用于后面判断是否需要二次measure</span>\n        totalWeight <span class=\"token operator\">+=</span> lp<span class=\"token punctuation\">.</span>weight<span class=\"token punctuation\">;</span>\n \n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>heightMode <span class=\"token operator\">==</span> <span class=\"token class-name\">MeasureSpec</span><span class=\"token punctuation\">.</span>EXACTLY <span class=\"token operator\">&amp;&amp;</span> lp<span class=\"token punctuation\">.</span>height <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> lp<span class=\"token punctuation\">.</span>weight <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// 如果LinearLayout的specMode为EXACTLY且子View设置了weight属性，在这里会跳过子View的measure过程</span>\n            <span class=\"token comment\">// 同时标记skippedMeasure属性为true，后面会根据该属性决定是否进行第二次measure</span>\n            <span class=\"token comment\">// 若LinearLayout的子View设置了weight，会进行两次measure计算，比较耗时</span>\n            <span class=\"token comment\">// 这就是为什么LinearLayout的子View需要使用weight属性时候，最好替换成RelativeLayout布局</span>\n            <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> totalLength <span class=\"token operator\">=</span> mTotalLength<span class=\"token punctuation\">;</span>\n            mTotalLength <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>totalLength<span class=\"token punctuation\">,</span> totalLength <span class=\"token operator\">+</span> lp<span class=\"token punctuation\">.</span>topMargin <span class=\"token operator\">+</span> lp<span class=\"token punctuation\">.</span>bottomMargin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            skippedMeasure <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">int</span> oldHeight <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span>MIN_VALUE<span class=\"token punctuation\">;</span>\n            <span class=\"token comment\">// 步骤1：遍历所有子View &amp; 测量：measureChildren（）</span>\n            <span class=\"token comment\">// 注：该方法内部，最终会调用measureChildren（），从而 遍历所有子View &amp; 测量</span>\n            <span class=\"token function\">measureChildBeforeLayout</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> widthMeasureSpec<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> heightMeasureSpec<span class=\"token punctuation\">,</span> totalWeight <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token operator\">?</span> mTotalLength <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                   <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n            <span class=\"token comment\">//步骤2：合并所有子View的尺寸大小,最终得到ViewGroup父视图的测量值（自身实现）</span>\n            <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> childHeight <span class=\"token operator\">=</span> child<span class=\"token punctuation\">.</span><span class=\"token function\">getMeasuredHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n            <span class=\"token comment\">// 1. mTotalLength用于存储LinearLayout在竖直方向的高度</span>\n            <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> totalLength <span class=\"token operator\">=</span> mTotalLength<span class=\"token punctuation\">;</span>\n \n            <span class=\"token comment\">// 2. 每测量一个子View的高度， mTotalLength就会增加</span>\n            mTotalLength <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span>totalLength<span class=\"token punctuation\">,</span> totalLength <span class=\"token operator\">+</span> childHeight <span class=\"token operator\">+</span> lp<span class=\"token punctuation\">.</span>topMargin <span class=\"token operator\">+</span>\n                           lp<span class=\"token punctuation\">.</span>bottomMargin <span class=\"token operator\">+</span> <span class=\"token function\">getNextLocationOffset</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n \n    <span class=\"token comment\">// 3. 记录LinearLayout占用的总高度</span>\n    <span class=\"token comment\">// 即除了子View的高度，还有本身的padding属性值</span>\n    mTotalLength <span class=\"token operator\">+=</span> mPaddingTop <span class=\"token operator\">+</span> mPaddingBottom<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> heightSize <span class=\"token operator\">=</span> mTotalLength<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> heightSizeAndState <span class=\"token operator\">=</span> <span class=\"token function\">resolveSizeAndState</span><span class=\"token punctuation\">(</span>heightSize<span class=\"token punctuation\">,</span> heightMeasureSpec<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n \n    <span class=\"token comment\">//步骤3：存储测量后View宽/高的值：调用setMeasuredDimension()</span>\n    <span class=\"token function\">setMeasuredDimension</span><span class=\"token punctuation\">(</span><span class=\"token function\">resolveSizeAndState</span><span class=\"token punctuation\">(</span>maxWidth<span class=\"token punctuation\">,</span> widthMeasureSpec<span class=\"token punctuation\">,</span> childState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> heightSizeAndState<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"获取view的宽高\">获取View的宽高<a title=\"#获取view的宽高\" href=\"#获取view的宽高\"></a></h3>\n<blockquote>\n<p>Activity 启动时，在 onCreate()、onStart()、onResume() 中均无法正确的得到某个 View 的宽高信息，这是因为 View 的 measure 过程和 Activity 的生命周期方法不是同步执行的</p>\n</blockquote>\n<ul>\n<li>onWindowFocusChanged()\n<ul>\n<li>需要注意的是，onWindowFocusChanged() 会被调用多次，当 Activity 的窗口得到焦点和失去焦点时均会被调用一次。</li>\n</ul>\n</li>\n<li>View.post(runnable)</li>\n<li>ViewTreeObserver</li>\n<li>手动调用 View 的 measure 方法</li>\n</ul>\n<h3 id=\"refer\">Refer<a title=\"#refer\" href=\"#refer\"></a></h3>\n<p><a href=\"https://blog.csdn.net/u010289802/article/details/80183142\" target=\"_blank\">Android 知识体系学习目录_lerendan的博客-CSDN博客</a></p>\n",
            "tags": [
                "图形绘制"
            ]
        },
        {
            "id": "https://onion99.github.io/2021/11/04/SA664RldODNgeCrz/",
            "url": "https://onion99.github.io/2021/11/04/SA664RldODNgeCrz/",
            "title": "自定义View(5) - 动画",
            "date_published": "2021-11-03T21:59:44.000Z",
            "content_html": "<blockquote>\n<p>三者性能是一样的，因为 ViewPropertyAnimator 和 ObjectAnimator 的内部实现其实都是 ValueAnimator，ObjectAnimator 更是本来就是 ValueAnimator 的子类，差别只是使用的便捷性以及功能的灵活性。</p>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/11/02/IFf4h9.gif\" alt=\"IFf4h9.gif\" loading=\"lazy\" class=\"φbp\"></p>\n<span id=\"more\"></span>\n<h3 id=\"viewpropertyanimator\">ViewPropertyAnimator<a title=\"#viewpropertyanimator\" href=\"#viewpropertyanimator\"></a></h3>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">view<span class=\"token punctuation\">.</span><span class=\"token function\">animate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">scaleX</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">scaleY</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">alpha</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"objectanimator\">ObjectAnimator<a title=\"#objectanimator\" href=\"#objectanimator\"></a></h3>\n<blockquote>\n<p>多个动画配合执行</p>\n</blockquote>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">PropertyValuesHolder</span> holder1 <span class=\"token operator\">=</span> <span class=\"token class-name\">PropertyValuesHolder</span><span class=\"token punctuation\">.</span><span class=\"token function\">ofFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"scaleX\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">PropertyValuesHolder</span> holder2 <span class=\"token operator\">=</span> <span class=\"token class-name\">PropertyValuesHolder</span><span class=\"token punctuation\">.</span><span class=\"token function\">ofFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"scaleY\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">PropertyValuesHolder</span> holder3 <span class=\"token operator\">=</span> <span class=\"token class-name\">PropertyValuesHolder</span><span class=\"token punctuation\">.</span><span class=\"token function\">ofFloat</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"alpha\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">ObjectAnimator</span> animator <span class=\"token operator\">=</span> <span class=\"token class-name\">ObjectAnimator</span><span class=\"token punctuation\">.</span><span class=\"token function\">ofPropertyValuesHolder</span><span class=\"token punctuation\">(</span>view<span class=\"token punctuation\">,</span> holder1<span class=\"token punctuation\">,</span> holder2<span class=\"token punctuation\">,</span> holder3<span class=\"token punctuation\">)</span>\nanimator<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"valueanimator\">ValueAnimator<a title=\"#valueanimator\" href=\"#valueanimator\"></a></h3>\n<blockquote>\n<p>ValueAnimator 本身不作用于任何一个属性，也不提供任何一种动画。它就是一个数值发生器，可以产生想要的各种数值</p>\n</blockquote>\n<p>ValueAnimator 并不常用，因为它的功能太基础了。ValueAnimator 是 ObjectAnimator 的父类，实际上，ValueAnimator 就是一个不能指定目标对象版本的 ObjectAnimato</p>\n",
            "tags": [
                "图形绘制"
            ]
        },
        {
            "id": "https://onion99.github.io/2021/11/04/ZOnr24kULe7cQgsc/",
            "url": "https://onion99.github.io/2021/11/04/ZOnr24kULe7cQgsc/",
            "title": "自定义View(4) - Canvas相关",
            "date_published": "2021-11-03T21:58:53.000Z",
            "content_html": "<h3 id=\"范围裁切\">范围裁切<a title=\"#范围裁切\" href=\"#范围裁切\"></a></h3>\n<h4 id=\"cliprect\">clipRect<a title=\"#cliprect\" href=\"#cliprect\"></a></h4>\n<p><img src=\"https://z3.ax1x.com/2021/11/02/IFKTER.png\" alt=\"IFKTER.png\" loading=\"lazy\" class=\"φbp\"></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">canvas<span class=\"token punctuation\">.</span><span class=\"token function\">clipRect</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">,</span> bottom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">drawBitmap</span><span class=\"token punctuation\">(</span>bitmap<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> paint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 加上 Canvas.save() 和 Canvas.restore() 来及时恢复绘制范围</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">clipRect</span><span class=\"token punctuation\">(</span>left<span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">,</span> bottom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">drawBitmap</span><span class=\"token punctuation\">(</span>bitmap<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> paint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<span id=\"more\"></span>\n<h4 id=\"clippath\">clipPath<a title=\"#clippath\" href=\"#clippath\"></a></h4>\n<p><img src=\"https://z3.ax1x.com/2021/11/02/IFM9UI.md.png\" alt=\"IFM9UI.md.png\" loading=\"lazy\" class=\"φbp\"></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">canvas<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">clipPath</span><span class=\"token punctuation\">(</span>path1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">drawBitmap</span><span class=\"token punctuation\">(</span>bitmap<span class=\"token punctuation\">,</span> point1<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> point1<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> paint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">clipPath</span><span class=\"token punctuation\">(</span>path2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">drawBitmap</span><span class=\"token punctuation\">(</span>bitmap<span class=\"token punctuation\">,</span> point2<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> point2<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> paint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"几何变换\">几何变换<a title=\"#几何变换\" href=\"#几何变换\"></a></h3>\n<h4 id=\"二维变换\">二维变换<a title=\"#二维变换\" href=\"#二维变换\"></a></h4>\n<blockquote>\n<p>处理常见的二维变换</p>\n</blockquote>\n<ul>\n<li><code>Canvas.translate()</code> 平移</li>\n<li><code>Canvas.rotate()</code> 旋转</li>\n<li><code>Canvas.scale()</code> 缩放</li>\n<li><code>Canvas.skew()</code> 错切</li>\n</ul>\n<h4 id=\"matrix变换\">Matrix变换<a title=\"#matrix变换\" href=\"#matrix变换\"></a></h4>\n<blockquote>\n<p>用来处理不常见的二维变换</p>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/11/02/IFn6qs.png\" alt=\"IFn6qs.png\" loading=\"lazy\" class=\"φbp\"></p>\n<ul>\n<li><code>Canvas.setMatrix(matrix)</code>\n<ul>\n<li>用 <code>Matrix</code> 直接替换 <code>Canvas</code> 当前的变换矩阵，即抛弃 <code>Canvas</code> 当前的变换</li>\n</ul>\n</li>\n<li><code>Canvas.concat(matrix)</code>\n<ul>\n<li>用 <code>Canvas</code> 当前的变换矩阵和 <code>Matrix</code> 相乘，即基于 <code>Canvas</code> 当前的变换，叠加上 <code>Matrix</code> 中的变换</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">Matrix</span> matrix <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Matrix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">float</span> pointsSrc <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>left<span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">,</span> top<span class=\"token punctuation\">,</span> left<span class=\"token punctuation\">,</span> bottom<span class=\"token punctuation\">,</span> right<span class=\"token punctuation\">,</span> bottom<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">float</span> pointsDst <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span>left <span class=\"token operator\">-</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> top <span class=\"token operator\">+</span> <span class=\"token number\">50</span><span class=\"token punctuation\">,</span> right <span class=\"token operator\">+</span> <span class=\"token number\">120</span><span class=\"token punctuation\">,</span> top <span class=\"token operator\">-</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> left <span class=\"token operator\">+</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> bottom <span class=\"token operator\">+</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> right <span class=\"token operator\">+</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span> bottom <span class=\"token operator\">+</span> <span class=\"token number\">60</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\nmatrix<span class=\"token punctuation\">.</span><span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmatrix<span class=\"token punctuation\">.</span><span class=\"token function\">setPolyToPoly</span><span class=\"token punctuation\">(</span>pointsSrc<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> pointsDst<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">drawBitmap</span><span class=\"token punctuation\">(</span>bitmap<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> paint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"camera\">Camera<a title=\"#camera\" href=\"#camera\"></a></h4>\n<blockquote>\n<p>处理三维旋转</p>\n</blockquote>\n<h5 id=\"camera.rotate*\">Camera.rotate*<a title=\"#camera.rotate*\" href=\"#camera.rotate*\"></a></h5>\n<p><img src=\"https://z3.ax1x.com/2021/11/02/IFZoMd.md.png\" alt=\"IFZoMd.md.png\" loading=\"lazy\" class=\"φbp\"></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">Camera</span> camera <span class=\"token operator\">=</span>  <span class=\"token keyword\">new</span>  <span class=\"token class-name\">Camera</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Point</span> point1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Point</span> point2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Point</span><span class=\"token punctuation\">(</span><span class=\"token number\">600</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onDraw</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Canvas</span> canvas<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n   canvas<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   camera<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 保存 Camera 的状态</span>\n   camera<span class=\"token punctuation\">.</span><span class=\"token function\">rotateX</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 旋转 Camera 的三维空间</span>\n   camera<span class=\"token punctuation\">.</span><span class=\"token function\">applyToCanvas</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 把旋转投影到 Canvas</span>\n   camera<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 恢复 Camera 的状态</span>\n   canvas<span class=\"token punctuation\">.</span><span class=\"token function\">drawBitmap</span><span class=\"token punctuation\">(</span>bitmap<span class=\"token punctuation\">,</span> point1<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> point1<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> paint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   canvas<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>居中处理:<br>\n<img src=\"https://z3.ax1x.com/2021/11/02/IFesfS.png\" alt=\"IFesfS.png\" loading=\"lazy\"></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> bitmapWidth <span class=\"token operator\">=</span> bitmap<span class=\"token punctuation\">.</span><span class=\"token function\">getWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> bitmapHeight <span class=\"token operator\">=</span> bitmap<span class=\"token punctuation\">.</span><span class=\"token function\">getHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> center1X <span class=\"token operator\">=</span> point1<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> bitmapWidth <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> center1Y <span class=\"token operator\">=</span> point1<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> bitmapHeight <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> center2X <span class=\"token operator\">=</span> point2<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> bitmapWidth <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">int</span> center2Y <span class=\"token operator\">=</span> point2<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> bitmapHeight <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n\ncamera<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmatrix<span class=\"token punctuation\">.</span><span class=\"token function\">reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncamera<span class=\"token punctuation\">.</span><span class=\"token function\">rotateX</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncamera<span class=\"token punctuation\">.</span><span class=\"token function\">getMatrix</span><span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncamera<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmatrix<span class=\"token punctuation\">.</span><span class=\"token function\">preTranslate</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>center1X<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span>center1Y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmatrix<span class=\"token punctuation\">.</span><span class=\"token function\">postTranslate</span><span class=\"token punctuation\">(</span>center1X<span class=\"token punctuation\">,</span> center1Y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">drawBitmap</span><span class=\"token punctuation\">(</span>bitmap<span class=\"token punctuation\">,</span> point1<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> point1<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> paint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"camera.translate\">Camera.translate<a title=\"#camera.translate\" href=\"#camera.translate\"></a></h5>\n<h5 id=\"camera.setlocation\">Camera.setLocation<a title=\"#camera.setlocation\" href=\"#camera.setlocation\"></a></h5>\n<blockquote>\n<p>设置虚拟相机的位置</p>\n</blockquote>\n",
            "tags": [
                "图形绘制"
            ]
        },
        {
            "id": "https://onion99.github.io/2021/11/04/VjI1fQxy8MSFqUqm/",
            "url": "https://onion99.github.io/2021/11/04/VjI1fQxy8MSFqUqm/",
            "title": "自定义View(3) - Text相关",
            "date_published": "2021-11-03T21:57:48.000Z",
            "content_html": "<h3 id=\"文字绘制(canvas)\">文字绘制(Canvas)<a title=\"#文字绘制(canvas)\" href=\"#文字绘制(canvas)\"></a></h3>\n<h4 id=\"绘制方式\">绘制方式<a title=\"#绘制方式\" href=\"#绘制方式\"></a></h4>\n<h5 id=\"drawtext\">drawText<a title=\"#drawtext\" href=\"#drawtext\"></a></h5>\n<p><img src=\"https://z3.ax1x.com/2021/11/02/IiheJA.png\" alt=\"IiheJA.png\" loading=\"lazy\" class=\"φbp\"></p>\n<span id=\"more\"></span>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">String</span> text <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello HenCoder\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">drawText</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> paint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"drawtextrun\">drawTextRun<a title=\"#drawtextrun\" href=\"#drawtextrun\"></a></h5>\n<h5 id=\"drawtextonpath\">drawTextOnPath<a title=\"#drawtextonpath\" href=\"#drawtextonpath\"></a></h5>\n<blockquote>\n<p>沿着一条 Path 来绘制文字</p>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/11/02/IihNzq.png\" alt=\"IihNzq.png\" loading=\"lazy\"><br>\n<code>drawTextOnPath()</code> 使用的 <code>Path</code> ，拐弯处全用圆角，别用尖角</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">canvas<span class=\"token punctuation\">.</span><span class=\"token function\">drawPath</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">,</span> paint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 把 Path 也绘制出来，理解起来更方便</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">drawTextOnPath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello HeCoder\"</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> paint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h5 id=\"staticlayout\">StaticLayout<a title=\"#staticlayout\" href=\"#staticlayout\"></a></h5>\n<blockquote>\n<p>进行多行文字的绘制</p>\n</blockquote>\n<ul>\n<li>View 的边缘自动折行</li>\n<li>在换行符 <code>\\n</code> 处换行</li>\n</ul>\n<p><img src=\"https://z3.ax1x.com/2021/11/02/Iih7Yd.md.png\" alt=\"Iih7Yd.md.png\" loading=\"lazy\" class=\"φbp\"></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">String</span> text1 <span class=\"token operator\">=</span> <span class=\"token string\">\"Lorem Ipsum is simply dummy text of the printing and typesetting industry.\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">StaticLayout</span> staticLayout1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StaticLayout</span><span class=\"token punctuation\">(</span>text1<span class=\"token punctuation\">,</span> paint<span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span>\n        <span class=\"token class-name\">Layout<span class=\"token punctuation\">.</span>Alignment</span><span class=\"token punctuation\">.</span>ALIGN_NORMAL<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">String</span> text2 <span class=\"token operator\">=</span> <span class=\"token string\">\"a\\nbc\\ndefghi\\njklm\\nnopqrst\\nuvwx\\nyz\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">StaticLayout</span> staticLayout2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StaticLayout</span><span class=\"token punctuation\">(</span>text2<span class=\"token punctuation\">,</span> paint<span class=\"token punctuation\">,</span> <span class=\"token number\">600</span><span class=\"token punctuation\">,</span>\n        <span class=\"token class-name\">Layout<span class=\"token punctuation\">.</span>Alignment</span><span class=\"token punctuation\">.</span>ALIGN_NORMAL<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nstaticLayout1<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">translate</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nstaticLayout2<span class=\"token punctuation\">.</span><span class=\"token function\">draw</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">restore</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"文字绘制辅助(paint)\">文字绘制辅助(Paint)<a title=\"#文字绘制辅助(paint)\" href=\"#文字绘制辅助(paint)\"></a></h3>\n<h4 id=\"样式设置\">样式设置<a title=\"#样式设置\" href=\"#样式设置\"></a></h4>\n<ul>\n<li><code>setTextSize(float textSize)</code></li>\n<li><code>setTypeface(Typeface typeface)</code></li>\n<li><code>setFakeBoldText(boolean fakeBoldText)</code>是否使用伪粗体</li>\n<li><code>setStrikeThruText(boolean strikeThruText)</code>是否加删除线</li>\n<li><code>setUnderlineText(boolean underlineText)</code></li>\n<li><code>setTextSkewX(float skewX)</code> 文字横切角度</li>\n<li><code>setTextScaleX(float scaleX)</code></li>\n<li><code>setLetterSpacing(float letterSpacing)</code> 字符间距</li>\n<li><code>setFontFeatureSettings(String settings)</code></li>\n<li><code>setTextAlign(Paint.Align align)</code></li>\n<li><code>setTextLocale(Locale locale)</code>语言区域</li>\n<li><code>setHinting(int mode)</code>字体微调</li>\n<li><code>setSubpixelText(boolean subpixelText)</code>是否开启像素级的抗锯齿</li>\n</ul>\n<h4 id=\"测量\">测量<a title=\"#测量\" href=\"#测量\"></a></h4>\n<ul>\n<li><code>getFontSpacing()</code> 获取推荐的行距\n<ul>\n<li><img src=\"https://z3.ax1x.com/2021/11/02/IiboRg.png\" alt=\"IiboRg.png\" loading=\"lazy\" class=\"φbp\"></li>\n</ul>\n</li>\n<li><code>getFontMetrics()</code>\n<ul>\n<li><img src=\"https://z3.ax1x.com/2021/11/02/IibtM9.png\" alt=\"IibtM9.png\" loading=\"lazy\" class=\"φbp\"></li>\n</ul>\n</li>\n<li><code>getTextBounds()</code> 获取文字范围</li>\n<li><code>measureText()</code>测量文字的宽度并返回</li>\n<li><code>getTextWidths()</code>获取字符串中每个字符的宽度</li>\n<li><code>breakText()</code> 和 <code>measureText()</code> 的区别是， breakText() 是在给出宽度上限的前提下测量文字的宽度。如果文字的宽度超出了上限，那么在临近超限的位置截断文字</li>\n<li>光标相关\n<ul>\n<li><code>getRunAdvance()</code>计算出某个字符处光标的 <code>x</code> 坐标\n<ul>\n<li><img src=\"https://z3.ax1x.com/2021/11/02/Iibnrn.png\" alt=\"Iibnrn.png\" loading=\"lazy\" class=\"φbp\"></li>\n<li><img src=\"https://z3.ax1x.com/2021/11/02/IibMV0.md.png\" alt=\"IibMV0.md.png\" loading=\"lazy\" class=\"φbp\"></li>\n</ul>\n</li>\n<li><code>getOffsetForAdvance</code> 计算第几个字符最接近这个坐标</li>\n</ul>\n</li>\n<li><code>hasGlyph()</code>检查指定的字符串中是否是一个单独的字形\n<ul>\n<li><img src=\"https://z3.ax1x.com/2021/11/02/IiH9tU.png\" alt=\"IiH9tU.png\" loading=\"lazy\" class=\"φbp\"></li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "图形绘制"
            ]
        },
        {
            "id": "https://onion99.github.io/2021/11/02/weRgrdLnBqIUWkcH/",
            "url": "https://onion99.github.io/2021/11/02/weRgrdLnBqIUWkcH/",
            "title": "自定义View(2) - Paint相关",
            "date_published": "2021-11-01T22:19:10.000Z",
            "content_html": "<h3 id=\"color\">Color<a title=\"#color\" href=\"#color\"></a></h3>\n<h4 id=\"基本颜色\">基本颜色<a title=\"#基本颜色\" href=\"#基本颜色\"></a></h4>\n<p>setColor(int color):</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">paint<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#009688\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">drawRect</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">30</span><span class=\"token punctuation\">,</span> <span class=\"token number\">230</span><span class=\"token punctuation\">,</span> <span class=\"token number\">180</span><span class=\"token punctuation\">,</span> paint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<span id=\"more\"></span>\n<p>setARGB(int a, int r, int g, int b)</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">paint<span class=\"token punctuation\">.</span><span class=\"token function\">setARGB</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">drawLine</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> paint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h4 id=\"shader\">Shader<a title=\"#shader\" href=\"#shader\"></a></h4>\n<h5 id=\"lineargradient(线性渐变)\">LinearGradient(线性渐变)<a title=\"#lineargradient(线性渐变)\" href=\"#lineargradient(线性渐变)\"></a></h5>\n<p><img src=\"https://z3.ax1x.com/2021/11/01/ICK7e1.png\" alt=\"ICK7e1.png\" loading=\"lazy\" class=\"φbp\"></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">Shader</span> shader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LinearGradient</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#E91E63\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#2196F3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Shader<span class=\"token punctuation\">.</span>TileMode</span><span class=\"token punctuation\">.</span>CLAMP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npaint<span class=\"token punctuation\">.</span><span class=\"token function\">setShader</span><span class=\"token punctuation\">(</span>shader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">drawCircle</span><span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> paint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th style=\"text-align:center\">CLAMP</th>\n<th style=\"text-align:center\">MIRROR</th>\n<th style=\"text-align:center\">REPEAT</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><img src=\"https://z3.ax1x.com/2021/11/01/ICuIVP.png\" alt=\"ICuIVP.png\" loading=\"lazy\"></td>\n<td style=\"text-align:center\"><img src=\"https://z3.ax1x.com/2021/11/01/ICKWJU.png\" alt=\"ICKWJU.png\" loading=\"lazy\"></td>\n<td style=\"text-align:center\"><img src=\"https://z3.ax1x.com/2021/11/01/ICK5QJ.png\" alt=\"ICK5QJ.png\" loading=\"lazy\"></td>\n</tr>\n</tbody>\n</table></div></div><h5 id=\"radialgradient(辐射渐变)\">RadialGradient(辐射渐变)<a title=\"#radialgradient(辐射渐变)\" href=\"#radialgradient(辐射渐变)\"></a></h5>\n<p><img src=\"https://z3.ax1x.com/2021/11/01/IClQRU.png\" alt=\"IClQRU.png\" loading=\"lazy\" class=\"φbp\"></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">Shader</span> shader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RadialGradient</span><span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#E91E63\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#2196F3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Shader<span class=\"token punctuation\">.</span>TileMode</span><span class=\"token punctuation\">.</span>CLAMP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npaint<span class=\"token punctuation\">.</span><span class=\"token function\">setShader</span><span class=\"token punctuation\">(</span>shader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">drawCircle</span><span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> paint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th style=\"text-align:center\">CLAMP</th>\n<th style=\"text-align:center\">MIRROR</th>\n<th style=\"text-align:center\">REPEAT</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><img src=\"https://z3.ax1x.com/2021/11/01/IClfW8.png\" alt=\"IClfW8.png\" loading=\"lazy\"></td>\n<td style=\"text-align:center\"><img src=\"https://z3.ax1x.com/2021/11/01/IC1SOJ.png\" alt=\"IC1SOJ.png\" loading=\"lazy\"></td>\n<td style=\"text-align:center\"><img src=\"https://z3.ax1x.com/2021/11/01/IC1SOJ.png\" alt=\"IC1SOJ.png\" loading=\"lazy\"></td>\n</tr>\n</tbody>\n</table></div></div><h5 id=\"sweepgradient(扫描渐变)\">SweepGradient(扫描渐变)<a title=\"#sweepgradient(扫描渐变)\" href=\"#sweepgradient(扫描渐变)\"></a></h5>\n<p><img src=\"https://z3.ax1x.com/2021/11/01/IC3N8K.png\" alt=\"IC3N8K.png\" loading=\"lazy\">]</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">Shader</span> shader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SweepGradient</span><span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#E91E63\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span><span class=\"token function\">parseColor</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"#2196F3\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npaint<span class=\"token punctuation\">.</span><span class=\"token function\">setShader</span><span class=\"token punctuation\">(</span>shader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">drawCircle</span><span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> paint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"bitmapshader\">BitmapShader<a title=\"#bitmapshader\" href=\"#bitmapshader\"></a></h5>\n<p><img src=\"https://z3.ax1x.com/2021/11/01/IC8dJ0.png\" alt=\"IC8dJ0.png\" loading=\"lazy\" class=\"φbp\"></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">Bitmap</span> bitmap <span class=\"token operator\">=</span> <span class=\"token class-name\">BitmapFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">decodeResource</span><span class=\"token punctuation\">(</span><span class=\"token function\">getResources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">R</span><span class=\"token punctuation\">.</span>drawable<span class=\"token punctuation\">.</span>batman<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Shader</span> shader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BitmapShader</span><span class=\"token punctuation\">(</span>bitmap<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Shader<span class=\"token punctuation\">.</span>TileMode</span><span class=\"token punctuation\">.</span>CLAMP<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Shader<span class=\"token punctuation\">.</span>TileMode</span><span class=\"token punctuation\">.</span>CLAMP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npaint<span class=\"token punctuation\">.</span><span class=\"token function\">setShader</span><span class=\"token punctuation\">(</span>shader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">drawCircle</span><span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> paint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th style=\"text-align:center\">CLAMP</th>\n<th style=\"text-align:center\">MIRROR</th>\n<th style=\"text-align:center\">REPEAT</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><img src=\"https://z3.ax1x.com/2021/11/01/ICGhAs.png\" alt=\"ICGhAs.png\" loading=\"lazy\"></td>\n<td style=\"text-align:center\"><img src=\"https://z3.ax1x.com/2021/11/01/ICG7cT.png\" alt=\"ICG7cT.png\" loading=\"lazy\"></td>\n<td style=\"text-align:center\"><img src=\"https://z3.ax1x.com/2021/11/01/ICGLB4.png\" alt=\"ICGLB4.png\" loading=\"lazy\"></td>\n</tr>\n</tbody>\n</table></div></div><h5 id=\"composeshader-混合着色器\">ComposeShader 混合着色器<a title=\"#composeshader-混合着色器\" href=\"#composeshader-混合着色器\"></a></h5>\n<blockquote>\n<p>所谓混合，就是把两个 Shader 一起使用。</p>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/11/01/ICUmdg.png\" alt=\"ICUmdg.png\" loading=\"lazy\" class=\"φbp\"></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 第一个 Shader：头像的 Bitmap</span>\n<span class=\"token class-name\">Bitmap</span> bitmap1 <span class=\"token operator\">=</span> <span class=\"token class-name\">BitmapFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">decodeResource</span><span class=\"token punctuation\">(</span><span class=\"token function\">getResources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">R</span><span class=\"token punctuation\">.</span>drawable<span class=\"token punctuation\">.</span>batman<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Shader</span> shader1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BitmapShader</span><span class=\"token punctuation\">(</span>bitmap1<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Shader<span class=\"token punctuation\">.</span>TileMode</span><span class=\"token punctuation\">.</span>CLAMP<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Shader<span class=\"token punctuation\">.</span>TileMode</span><span class=\"token punctuation\">.</span>CLAMP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 第二个 Shader：从上到下的线性渐变（由透明到黑色）</span>\n<span class=\"token class-name\">Bitmap</span> bitmap2 <span class=\"token operator\">=</span> <span class=\"token class-name\">BitmapFactory</span><span class=\"token punctuation\">.</span><span class=\"token function\">decodeResource</span><span class=\"token punctuation\">(</span><span class=\"token function\">getResources</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">R</span><span class=\"token punctuation\">.</span>drawable<span class=\"token punctuation\">.</span>batman_logo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Shader</span> shader2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BitmapShader</span><span class=\"token punctuation\">(</span>bitmap2<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Shader<span class=\"token punctuation\">.</span>TileMode</span><span class=\"token punctuation\">.</span>CLAMP<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Shader<span class=\"token punctuation\">.</span>TileMode</span><span class=\"token punctuation\">.</span>CLAMP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// ComposeShader：结合两个 Shader</span>\n<span class=\"token class-name\">Shader</span> shader <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ComposeShader</span><span class=\"token punctuation\">(</span>shader1<span class=\"token punctuation\">,</span> shader2<span class=\"token punctuation\">,</span> <span class=\"token class-name\">PorterDuff<span class=\"token punctuation\">.</span>Mode</span><span class=\"token punctuation\">.</span>SRC_OVER<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npaint<span class=\"token punctuation\">.</span><span class=\"token function\">setShader</span><span class=\"token punctuation\">(</span>shader<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">drawCircle</span><span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> paint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"porterduff\">PorterDuff<a title=\"#porterduff\" href=\"#porterduff\"></a></h4>\n<h3 id=\"patheffect\">PathEffect<a title=\"#patheffect\" href=\"#patheffect\"></a></h3>\n<h4 id=\"style\">Style<a title=\"#style\" href=\"#style\"></a></h4>\n<p><code>Paint.setStrokeWidth</code>:线条宽度<br>\n<img src=\"https://z3.ax1x.com/2021/11/01/ICvqQe.png\" alt=\"ICvqQe.png\" loading=\"lazy\"></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">paint<span class=\"token punctuation\">.</span><span class=\"token function\">setStyle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Paint<span class=\"token punctuation\">.</span>Style</span><span class=\"token punctuation\">.</span>STROKE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npaint<span class=\"token punctuation\">.</span><span class=\"token function\">setStrokeWidth</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">drawCircle</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">125</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> paint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npaint<span class=\"token punctuation\">.</span><span class=\"token function\">setStrokeWidth</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">drawCircle</span><span class=\"token punctuation\">(</span><span class=\"token number\">400</span><span class=\"token punctuation\">,</span> <span class=\"token number\">125</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> paint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npaint<span class=\"token punctuation\">.</span><span class=\"token function\">setStrokeWidth</span><span class=\"token punctuation\">(</span><span class=\"token number\">40</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">drawCircle</span><span class=\"token punctuation\">(</span><span class=\"token number\">650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">125</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> paint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><code>Paint.setStrokeCap</code>:线条形状</p>\n<p><img src=\"https://z3.ax1x.com/2021/11/01/ICxkLj.png\" alt=\"ICxkLj.png\" loading=\"lazy\" class=\"φbp\"></p>\n<p><code>Paint.setStrokeJoin</code>:拐角形状</p>\n<p><img src=\"https://z3.ax1x.com/2021/11/01/ICxQlF.png\" alt=\"ICxQlF.png\" loading=\"lazy\" class=\"φbp\"></p>\n<p><code>Paint.setStrokeMiter</code>:拐角边缘</p>\n<p><img src=\"https://z3.ax1x.com/2021/11/01/ICzenH.png\" alt=\"image\" loading=\"lazy\" class=\"φbp\"></p>\n<h4 id=\"filter\">Filter<a title=\"#filter\" href=\"#filter\"></a></h4>\n<p><code>PathEffect.setDither()</code>:图像抖动<br>\n<img src=\"https://z3.ax1x.com/2021/11/01/ICL31H.png\" alt=\"ICL31H.png\" loading=\"lazy\"></p>\n<p><code>PathEffect.setFilterBitmap()</code>:双线性过滤<br>\n<img src=\"https://z3.ax1x.com/2021/11/01/ICvZ8O.png\" alt=\"ICvZ8O.png\" loading=\"lazy\"></p>\n<h4 id=\"effect\">Effect<a title=\"#effect\" href=\"#effect\"></a></h4>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th style=\"text-align:center\">Name</th>\n<th style=\"text-align:center\">Effect</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">CornerPathEffect</td>\n<td style=\"text-align:center\"><img src=\"https://z3.ax1x.com/2021/11/01/ICgRkq.png\" alt=\"ICgRkq.png\" loading=\"lazy\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DiscretePathEffect</td>\n<td style=\"text-align:center\"><img src=\"https://z3.ax1x.com/2021/11/01/ICgGOH.png\" alt=\"ICgGOH.png\" loading=\"lazy\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">DashPathEffect</td>\n<td style=\"text-align:center\"><img src=\"https://z3.ax1x.com/2021/11/01/ICcXQg.png\" alt=\"ICcXQg.png\" loading=\"lazy\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">PathDashPathEffect</td>\n<td style=\"text-align:center\"><img src=\"https://z3.ax1x.com/2021/11/01/IC6T8U.png\" alt=\"IC6T8U.png\" loading=\"lazy\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">SumPathEffect</td>\n<td style=\"text-align:center\"><img src=\"https://z3.ax1x.com/2021/11/01/ICyBpF.png\" alt=\"ICyBpF.png\" loading=\"lazy\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">ComposePathEffect</td>\n<td style=\"text-align:center\"><img src=\"https://z3.ax1x.com/2021/11/01/ICy8yj.png\" alt=\"ICy8yj.png\" loading=\"lazy\"></td>\n</tr>\n</tbody>\n</table></div></div><h4 id=\"shadowlayer\">ShadowLayer<a title=\"#shadowlayer\" href=\"#shadowlayer\"></a></h4>\n<blockquote>\n<p>绘制层下方的阴影效果</p>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/11/01/ICstPO.png\" alt=\"ICstPO.png\" loading=\"lazy\" class=\"φbp\"></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">paint<span class=\"token punctuation\">.</span><span class=\"token function\">setShadowLayer</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Color</span><span class=\"token punctuation\">.</span>RED<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">drawText</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> paint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<h4 id=\"maskfilter\">MaskFilter<a title=\"#maskfilter\" href=\"#maskfilter\"></a></h4>\n<blockquote>\n<p>绘制层上方的附加效果</p>\n</blockquote>\n<p>BlurMaskFilter(模糊效果):</p>\n<p><img src=\"https://z3.ax1x.com/2021/11/01/ICrhE6.md.png\" alt=\"ICrhE6.md.png\" loading=\"lazy\" class=\"φbp\"></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">paint<span class=\"token punctuation\">.</span><span class=\"token function\">setMaskFilter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">BlurMaskFilter</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">BlurMaskFilter<span class=\"token punctuation\">.</span>Blur</span><span class=\"token punctuation\">.</span>NORMAL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">drawBitmap</span><span class=\"token punctuation\">(</span>bitmap<span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> paint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>EmbossMaskFilter(浮雕效果):<br>\n<img src=\"https://z3.ax1x.com/2021/11/01/ICr0EV.png\" alt=\"ICr0EV.png\" loading=\"lazy\"></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 数组:光源方向,光强度,炫光系数,应用光线范围 </span>\npaint<span class=\"token punctuation\">.</span><span class=\"token function\">setMaskFilter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">EmbossMaskFilter</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token keyword\">float</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.2f</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ncanvas<span class=\"token punctuation\">.</span><span class=\"token function\">drawBitmap</span><span class=\"token punctuation\">(</span>bitmap<span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> paint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"getpath\">getPath<a title=\"#getpath\" href=\"#getpath\"></a></h4>\n<p><code>PathEffect.getFillPath()</code>获取图形Path</p>\n<p><img src=\"https://z3.ax1x.com/2021/11/01/ICDOtU.md.png\" alt=\"ICDOtU.md.png\" loading=\"lazy\" class=\"φbp\"></p>\n<p><code>PathEffect.getTextPath()</code>获取图形Path</p>\n<p><img src=\"https://z3.ax1x.com/2021/11/01/ICDAQs.png\" alt=\"ICDAQs.png\" loading=\"lazy\" class=\"φbp\"></p>\n<h3 id=\"refer\">Refer<a title=\"#refer\" href=\"#refer\"></a></h3>\n<p><a href=\"https://rengwuxian.com/ui-1-2/\" target=\"_blank\">HenCoder Android 开发进阶: 自定义 View 1-2 Paint 详解 (rengwuxian.com)</a></p>\n",
            "tags": [
                "图形绘制"
            ]
        },
        {
            "id": "https://onion99.github.io/2021/11/02/K0uh0dFU4QBtZ8Wm/",
            "url": "https://onion99.github.io/2021/11/02/K0uh0dFU4QBtZ8Wm/",
            "title": "自定义View(1) - 基本绘制",
            "date_published": "2021-11-01T22:17:37.000Z",
            "content_html": "<blockquote>\n<p>简单的绘制基本由<code>Canvas.drawxxx()</code>和Paint的配置组成</p>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/11/01/IC9uZj.png\" alt=\"IC9uZj.png\" loading=\"lazy\" class=\"φbp\"></p>\n<pre class=\"line-numbers language-kotlin\" data-language=\"kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">class</span> PaintView <span class=\"token annotation builtin\">@JvmOverloads</span> <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>context<span class=\"token operator\">:</span> Context<span class=\"token punctuation\">,</span> attrs<span class=\"token operator\">:</span> AttributeSet<span class=\"token operator\">?</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> defStyleAttr<span class=\"token operator\">:</span> Int <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">View</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> attrs<span class=\"token punctuation\">,</span> defStyleAttr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">val</span> mPaint <span class=\"token keyword\">by</span> lazy <span class=\"token punctuation\">&#123;</span> <span class=\"token function\">Paint</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">override</span> <span class=\"token keyword\">fun</span> <span class=\"token function\">onDraw</span><span class=\"token punctuation\">(</span>canvas<span class=\"token operator\">:</span> Canvas<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  \n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onDraw</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span>\n    paint<span class=\"token punctuation\">.</span><span class=\"token function\">setColor</span><span class=\"token punctuation\">(</span>Color<span class=\"token punctuation\">.</span>RED<span class=\"token punctuation\">)</span><span class=\"token comment\">// 设置为红色</span>\n    canvas<span class=\"token punctuation\">.</span><span class=\"token function\">drawCircle</span><span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200</span><span class=\"token punctuation\">,</span> paint<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<span id=\"more\"></span>\n<h3 id=\"canvas\">Canvas<a title=\"#canvas\" href=\"#canvas\"></a></h3>\n<ul>\n<li><code>Canvas.drawArc()</code> 绘制弧形或扇形<br>\n+ <code>left</code>, <code>top</code>, <code>right</code>, <code>bottom</code> 描述的是这个弧形所在的椭圆<br>\n+ <code>startAngle</code> 是弧形的起始角度<br>\n+ <code>sweepAngle</code> 是弧形划过的角度<br>\n+ <code>useCenter</code> 表示是否连接到圆心，如果不连接到圆心，就是弧形，如果连接到圆心，就是扇形</li>\n<li><code>Canvas.drawPath()</code> 组合图形</li>\n</ul>\n<h3 id=\"paint\">Paint<a title=\"#paint\" href=\"#paint\"></a></h3>\n<ul>\n<li><code>Paint.setStyle(Style style)</code>  设置绘制模式</li>\n<li><code>Paint.setColor(int color)</code>  设置颜色</li>\n<li><code>Paint.setStrokeWidth(float width)</code>  设置线条宽度</li>\n<li><code>Paint.setTextSize(float textSize)</code>  设置文字大小</li>\n<li><code>Paint.setAntiAlias(boolean aa)</code>  设置抗锯齿开关</li>\n</ul>\n<h3 id=\"path\">Path<a title=\"#path\" href=\"#path\"></a></h3>\n<blockquote>\n<p>如果只画一个圆，没必要用 Path，直接用 drawCircle() 就行了。drawPath() 一般是在绘制组合图形时才会用到的</p>\n</blockquote>\n<h4 id=\"path.addxxx\">Path.addXxx<a title=\"#path.addxxx\" href=\"#path.addxxx\"></a></h4>\n<blockquote>\n<p>添加子图形</p>\n</blockquote>\n<p><code>path.addCircle(300, 300, 200, Path.Direction.CW)</code></p>\n<h4 id=\"path.xxxto\">Path.xxxTo<a title=\"#path.xxxto\" href=\"#path.xxxto\"></a></h4>\n<blockquote>\n<p>用于画线（直线或曲线）</p>\n</blockquote>\n<p><code>lineTo(float x, float y) / rLineTo(float x, float y) </code>画直线:<br>\n<img src=\"https://z3.ax1x.com/2021/11/01/ICkWGR.png\" alt=\"ICkWGR.png\" loading=\"lazy\"></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">paint<span class=\"token punctuation\">.</span><span class=\"token function\">setStyle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Style</span><span class=\"token punctuation\">.</span>STROKE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npath<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 由当前位置 (0, 0) 向 (100, 100) 画一条直线</span>\npath<span class=\"token punctuation\">.</span><span class=\"token function\">rLineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 由当前位置 (100, 100) 向正右方 100 像素的位置画一条直线</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://z3.ax1x.com/2021/11/01/ICASL8.png\" alt=\"ICASL8.png\" loading=\"lazy\">]</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">paint<span class=\"token punctuation\">.</span><span class=\"token function\">setStyle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Style</span><span class=\"token punctuation\">.</span>STROKE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npath<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 画斜线</span>\npath<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 我移~~</span>\npath<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 画竖线</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<p><code>arcTo()</code> 和 <code>addArc()</code>画弧线:</p>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th style=\"text-align:center\">true</th>\n<th style=\"text-align:center\">false</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><img src=\"https://z3.ax1x.com/2021/11/01/ICEuct.png\" alt=\"ICEuct.png\" loading=\"lazy\"></td>\n<td style=\"text-align:center\"><img src=\"https://z3.ax1x.com/2021/11/01/ICEinK.png\" alt=\"ICEinK.png\" loading=\"lazy\"></td>\n</tr>\n</tbody>\n</table></div></div><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">paint<span class=\"token punctuation\">.</span><span class=\"token function\">setStyle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Style</span><span class=\"token punctuation\">.</span>STROKE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npath<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// true 直接连线连到弧形起点（有痕迹）</span>\n<span class=\"token comment\">// false 强制移动到弧形起点（无痕迹）</span>\npath<span class=\"token punctuation\">.</span><span class=\"token function\">arcTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token operator\">/</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// 等同上面</span>\npaint<span class=\"token punctuation\">.</span><span class=\"token function\">setStyle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Style</span><span class=\"token punctuation\">.</span>STROKE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npath<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npath<span class=\"token punctuation\">.</span><span class=\"token function\">addArc</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">90</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// addArc() 只是一个直接使用了 forceMoveTo = true 的简化版 arcTo()</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><code>close() </code>封闭当前子图形:</p>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th style=\"text-align:center\">no close</th>\n<th style=\"text-align:center\">close</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><img src=\"https://z3.ax1x.com/2021/11/01/ICVaPH.png\" alt=\"ICVaPH.png\" loading=\"lazy\"></td>\n<td style=\"text-align:center\"><img src=\"https://z3.ax1x.com/2021/11/01/ICVgIg.png\" alt=\"ICVgIg.png\" loading=\"lazy\"></td>\n</tr>\n</tbody>\n</table></div></div><pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">paint<span class=\"token punctuation\">.</span><span class=\"token function\">setStyle</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Style</span><span class=\"token punctuation\">.</span>STROKE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npath<span class=\"token punctuation\">.</span><span class=\"token function\">moveTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npath<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">200</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npath<span class=\"token punctuation\">.</span><span class=\"token function\">lineTo</span><span class=\"token punctuation\">(</span><span class=\"token number\">150</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\npath<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"path.setfilltype\">Path.setFillType<a title=\"#path.setfilltype\" href=\"#path.setfilltype\"></a></h4>\n<blockquote>\n<p>设置填充方式</p>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/11/01/ICFucV.png\" alt=\"ICFucV.png\" loading=\"lazy\" class=\"φbp\"></p>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th style=\"text-align:center\">EVEN_ODD:even-odd rule （奇偶原则）</th>\n<th style=\"text-align:center\">WINDING: non-zero winding rule （非零环绕数原则）</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><img src=\"https://z3.ax1x.com/2021/11/01/ICFKXT.png\" alt=\"ICFKXT.png\" loading=\"lazy\"></td>\n<td style=\"text-align:center\"><img src=\"https://z3.ax1x.com/2021/11/01/ICFJhR.png\" alt=\"ICFJhR.png\" loading=\"lazy\"></td>\n</tr>\n</tbody>\n</table></div></div>",
            "tags": [
                "图形绘制"
            ]
        }
    ]
}