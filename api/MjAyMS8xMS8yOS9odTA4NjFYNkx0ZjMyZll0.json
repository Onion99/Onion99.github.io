{"title":"源码学习-DataBinding","date":"2021-11-29T23:27:07.000Z","date_formatted":{"ll":"2021年11月29日","L":"2021/11/29","MM-DD":"11-29"},"link":"2021/11/29/hu0861X6Ltf32fYt","comments":true,"tags":["源码解析"],"categories":["Android"],"updated":"2021-11-29T15:26:40.000Z","content":"<h3 id=\"sameple\">Sameple<a title=\"#sameple\" href=\"#sameple\"></a></h3>\n<p>首先,我们来看看DataBinding使用:</p>\n<ol>\n<li>给layout文件套娃:</li>\n</ol>\n<pre class=\"line-numbers language-xml\" data-language=\"xml\"><code class=\"language-xml\"><span class=\"token prolog\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>layout</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>FrameLayout</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>androidx.viewpager.widget.ViewPager</span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@+id/home_pager<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>com.flyco.tablayout.SlidingTabLayout</span>\n            <span class=\"token attr-name\"><span class=\"token namespace\">android:</span>id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>@+id/home_tab<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>FrameLayout</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>layout</span><span class=\"token punctuation\">></span></span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"2\">\n<li>在Fragment或者View中获取binding对象</li>\n</ol>\n<pre class=\"line-numbers language-kotlin\" data-language=\"kotlin\"><code class=\"language-kotlin\">binding <span class=\"token operator\">=</span> DataBindingUtil<span class=\"token punctuation\">.</span><span class=\"token function\">inflate</span><span class=\"token punctuation\">(</span>inflater<span class=\"token punctuation\">,</span>layoutRes<span class=\"token punctuation\">,</span>container<span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>超,就是这么简单,来从<code>inflate</code>开始解析</p>\n<span id=\"more\"></span>\n<h3 id=\"databindingutil.inflate梳理\">DataBindingUtil.inflate梳理<a title=\"#databindingutil.inflate梳理\" href=\"#databindingutil.inflate梳理\"></a></h3>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ViewDataBinding</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">T</span> <span class=\"token function\">inflate</span><span class=\"token punctuation\">(</span>\n        <span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">LayoutInflater</span> inflater<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> layoutId<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">ViewGroup</span> parent<span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">boolean</span> attachToParent<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">DataBindingComponent</span> bindingComponent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 检查康康是不是子layout附加到父layout,一般是false,因为如果为ture会导致子layout的layoutparams 失效</span>\n    <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> useChildren <span class=\"token operator\">=</span> parent <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> attachToParent<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 上面一般为false,那这里一般也是零蛋啊</span>\n    <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> startChildren <span class=\"token operator\">=</span> useChildren <span class=\"token operator\">?</span> parent<span class=\"token punctuation\">.</span><span class=\"token function\">getChildCount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 解析xml生成View,放空大脑就是这样,深究的话,我只能甩一篇郭神的文章了:https://blog.csdn.net/guolin_blog/article/details/12921889</span>\n    <span class=\"token comment\">// 什么具体inflate是怎么样,不听不听王八念经</span>\n    <span class=\"token keyword\">final</span> <span class=\"token class-name\">View</span> view <span class=\"token operator\">=</span> inflater<span class=\"token punctuation\">.</span><span class=\"token function\">inflate</span><span class=\"token punctuation\">(</span>layoutId<span class=\"token punctuation\">,</span> parent<span class=\"token punctuation\">,</span> attachToParent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 嘿嘿,这里开始binding</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>useChildren<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">bindToAddedViews</span><span class=\"token punctuation\">(</span>bindingComponent<span class=\"token punctuation\">,</span> parent<span class=\"token punctuation\">,</span> startChildren<span class=\"token punctuation\">,</span> layoutId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>bindingComponent<span class=\"token punctuation\">,</span> view<span class=\"token punctuation\">,</span> layoutId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">DataBinderMapper</span> sMapper <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataBinderMapperImpl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">static</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ViewDataBinding</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">T</span> <span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DataBindingComponent</span> bindingComponent<span class=\"token punctuation\">,</span> <span class=\"token class-name\">View</span> root<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> layoutId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 不理了,这里就拿到binding了,可以直接引用View了,停止思考</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">T</span><span class=\"token punctuation\">)</span> sMapper<span class=\"token punctuation\">.</span><span class=\"token function\">getDataBinder</span><span class=\"token punctuation\">(</span>bindingComponent<span class=\"token punctuation\">,</span> root<span class=\"token punctuation\">,</span> layoutId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>问题来了,它是怎么取得我要的DataBinding对象且又是怎么实现View绑定的?</p>\n<ol>\n<li>好,来康康,这个<code>DataBinderMapperImpl</code>,这是编译阶段下kapt自动生成的:</li>\n</ol>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">package</span> <span class=\"token namespace\">androidx<span class=\"token punctuation\">.</span>databinding</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 好家伙,这里直接继承MergedDataBinderMapper </span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DataBinderMapperImpl</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">MergedDataBinderMapper</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token class-name\">DataBinderMapperImpl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 添加kapt下生成当前Module的DataBinderMapperImpl</span>\n    <span class=\"token function\">addMapper</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>xxx<span class=\"token punctuation\">.</span>xxx<span class=\"token punctuation\">.</span></span>DataBinderMapperImpl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token comment\">// 合并其他Mapper的DataBindingMapper </span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MergedDataBinderMapper</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">DataBinderMapper</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">Set</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">DataBinderMapper</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> mExistingMappers <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">HashSet</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 添加Mapper,如果已经存在则忽略</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">addMapper</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DataBinderMapper</span> mapper<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">DataBinderMapper</span><span class=\"token punctuation\">></span></span> mapperClass <span class=\"token operator\">=</span> mapper<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mExistingMappers<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>mapperClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            mMappers<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>mapper<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">final</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">DataBinderMapper</span><span class=\"token punctuation\">></span></span> dependencies <span class=\"token operator\">=</span> mapper<span class=\"token punctuation\">.</span><span class=\"token function\">collectDependencies</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DataBinderMapper</span> dependency <span class=\"token operator\">:</span> dependencies<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token function\">addMapper</span><span class=\"token punctuation\">(</span>dependency<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"2\">\n<li><code>MergedDataBinderMapper.getDataBinder</code>:</li>\n</ol>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">ViewDataBinding</span> <span class=\"token function\">getDataBinder</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DataBindingComponent</span> bindingComponent<span class=\"token punctuation\">,</span> <span class=\"token class-name\">View</span> view<span class=\"token punctuation\">,</span>\n        <span class=\"token keyword\">int</span> layoutId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 遍历之前添加的mMappers    </span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DataBinderMapper</span> mapper <span class=\"token operator\">:</span> mMappers<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">// 好了,这里获取对应的Mapper的DataBinder,超,想想之前添加了哪个Mapper</span>\n        <span class=\"token comment\">// 没错,不正好对上tmd的上面1的com.xxx.xxx.DataBinderMapperImpl()</span>\n        <span class=\"token class-name\">ViewDataBinding</span> result <span class=\"token operator\">=</span> mapper<span class=\"token punctuation\">.</span><span class=\"token function\">getDataBinder</span><span class=\"token punctuation\">(</span>bindingComponent<span class=\"token punctuation\">,</span> view<span class=\"token punctuation\">,</span> layoutId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>result <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">loadFeatures</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token function\">getDataBinder</span><span class=\"token punctuation\">(</span>bindingComponent<span class=\"token punctuation\">,</span> view<span class=\"token punctuation\">,</span> layoutId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ol start=\"3\">\n<li>让我们来康康kapt生成的<code>com.xxx.xxx.DataBinderMapperImpl()</code>到底有什么</li>\n</ol>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DataBinderMapperImpl</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">DataBinderMapper</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// layout id 索引</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> LAYOUT_FRAGMENTHOME <span class=\"token operator\">=</span> <span class=\"token number\">40</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">SparseIntArray</span> INTERNAL_LAYOUT_ID_LOOKUP <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SparseIntArray</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">static</span> <span class=\"token punctuation\">&#123;</span>\n    INTERNAL_LAYOUT_ID_LOOKUP<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token namespace\">com<span class=\"token punctuation\">.</span>xmiles<span class=\"token punctuation\">.</span>callshow<span class=\"token punctuation\">.</span></span>R</span><span class=\"token punctuation\">.</span>layout<span class=\"token punctuation\">.</span>fragment_home<span class=\"token punctuation\">,</span> LAYOUT_FRAGMENTHOME<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token annotation punctuation\">@Override</span>\n  <span class=\"token keyword\">public</span> <span class=\"token class-name\">ViewDataBinding</span> <span class=\"token function\">getDataBinder</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DataBindingComponent</span> component<span class=\"token punctuation\">,</span> <span class=\"token class-name\">View</span> view<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> layoutId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 拿到索引的id</span>\n    <span class=\"token keyword\">int</span> localizedLayoutId <span class=\"token operator\">=</span> INTERNAL_LAYOUT_ID_LOOKUP<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>layoutId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>localizedLayoutId <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">final</span> <span class=\"token class-name\">Object</span> tag <span class=\"token operator\">=</span> view<span class=\"token punctuation\">.</span><span class=\"token function\">getTag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 判断tag</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tag <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">RuntimeException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"view must have a tag\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 这里如果布局数量超50,为避免一个方法体过大,会额外新建另外一个函数去处理,这里为好展示,整个类我就删除了很多其他布局参数</span>\n      <span class=\"token keyword\">int</span> methodIndex <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>localizedLayoutId <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 跟据对应componet生成对应的ViewDetaBinding</span>\n      <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>methodIndex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token number\">0</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">return</span> <span class=\"token function\">internalGetViewDataBinding0</span><span class=\"token punctuation\">(</span>component<span class=\"token punctuation\">,</span> view<span class=\"token punctuation\">,</span> localizedLayoutId<span class=\"token punctuation\">,</span> tag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token number\">1</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">return</span> <span class=\"token function\">internalGetViewDataBinding1</span><span class=\"token punctuation\">(</span>component<span class=\"token punctuation\">,</span> view<span class=\"token punctuation\">,</span> localizedLayoutId<span class=\"token punctuation\">,</span> tag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token comment\">// GetViewDataBinding</span>\n  <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">ViewDataBinding</span> <span class=\"token function\">internalGetViewDataBinding0</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DataBindingComponent</span> component<span class=\"token punctuation\">,</span><span class=\"token class-name\">View</span> view<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> internalId<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> tag<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>internalId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">case</span>  LAYOUT_FRAGMENTHOME<span class=\"token operator\">:</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"layout/fragment_home_0\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>tag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n          <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FragmentHomeBindingImpl</span><span class=\"token punctuation\">(</span>component<span class=\"token punctuation\">,</span> view<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The tag for fragment_home is invalid. Received: \"</span> <span class=\"token operator\">+</span> tag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"refer\">Refer<a title=\"#refer\" href=\"#refer\"></a></h3>\n<p><a href=\"https://www.jianshu.com/p/4be20cc58f17\" target=\"_blank\">Android架构组件之DataBinding源码解析 - 简书 (jianshu.com)</a><br>\n<a href=\"https://www.jianshu.com/p/4e9a1ab05bb5\" target=\"_blank\">DataBinding源码分析 - 简书 (jianshu.com)</a></p>\n","prev":{"title":"源码学习-HashMap","link":"2021/11/29/4diQitvVwGPnicN5"},"next":{"title":"Java并发(7) - ThreadLocal","link":"2021/11/07/MpHTUCP7P1OgtydO"},"plink":"https://onion99.github.io/2021/11/29/hu0861X6Ltf32fYt/","reward":true,"copyright":{"custom":"Copyright:自由转载-非商用-禁止演绎-保持署名（CC BY-NC-ND 4.0）"}}