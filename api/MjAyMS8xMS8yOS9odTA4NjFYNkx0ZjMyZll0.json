{"title":"源码学习-DataBinding","date":"2021-11-29T23:27:07.000Z","date_formatted":{"ll":"2021年11月29日","L":"2021/11/29","MM-DD":"11-29"},"link":"2021/11/29/hu0861X6Ltf32fYt","comments":true,"tags":["源码解析"],"categories":["Android"],"updated":"2021-11-29T15:26:40.000Z","content":"<h3 id=\"sameple\">Sameple<a title=\"#sameple\" href=\"#sameple\"></a></h3>\n<p>首先,我们来看看DataBinding使用:</p>\n<ol>\n<li>给layout文件套娃:</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">layout</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">FrameLayout</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">androidx.viewpager.widget.ViewPager</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:id</span>=<span class=\"string\">&quot;@+id/home_pager&quot;</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">com.flyco.tablayout.SlidingTabLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:id</span>=<span class=\"string\">&quot;@+id/home_tab&quot;</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">FrameLayout</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">layout</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>在Fragment或者View中获取binding对象</li>\n</ol>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">binding = DataBindingUtil.inflate(inflater,layoutRes,container,<span class=\"literal\">false</span>)</span><br></pre></td></tr></table></figure>\n<p>超,就是这么简单,来从<code>inflate</code>开始解析</p>\n<span id=\"more\"></span>\n<h3 id=\"databindingutil.inflate梳理\">DataBindingUtil.inflate梳理<a title=\"#databindingutil.inflate梳理\" href=\"#databindingutil.inflate梳理\"></a></h3>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T extends ViewDataBinding&gt; <span class=\"function\">T <span class=\"title\">inflate</span><span class=\"params\">(</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">        <span class=\"meta\">@NonNull</span> LayoutInflater inflater, <span class=\"keyword\">int</span> layoutId, <span class=\"meta\">@Nullable</span> ViewGroup parent,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">        <span class=\"keyword\">boolean</span> attachToParent, <span class=\"meta\">@Nullable</span> DataBindingComponent bindingComponent)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 检查康康是不是子layout附加到父layout,一般是false,因为如果为ture会导致子layout的layoutparams 失效</span></span><br><span class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">boolean</span> useChildren = parent != <span class=\"keyword\">null</span> &amp;&amp; attachToParent;</span><br><span class=\"line\">    <span class=\"comment\">// 上面一般为false,那这里一般也是零蛋啊</span></span><br><span class=\"line\">    <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> startChildren = useChildren ? parent.getChildCount() : <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 解析xml生成View,放空大脑就是这样,深究的话,我只能甩一篇郭神的文章了:https://blog.csdn.net/guolin_blog/article/details/12921889</span></span><br><span class=\"line\">    <span class=\"comment\">// 什么具体inflate是怎么样,不听不听王八念经</span></span><br><span class=\"line\">    <span class=\"keyword\">final</span> View view = inflater.inflate(layoutId, parent, attachToParent);</span><br><span class=\"line\">    <span class=\"comment\">// 嘿嘿,这里开始binding</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (useChildren) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> bindToAddedViews(bindingComponent, parent, startChildren, layoutId);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> bind(bindingComponent, view, layoutId);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> DataBinderMapper sMapper = <span class=\"keyword\">new</span> DataBinderMapperImpl();</span><br><span class=\"line\"><span class=\"keyword\">static</span> &lt;T extends ViewDataBinding&gt; <span class=\"function\">T <span class=\"title\">bind</span><span class=\"params\">(DataBindingComponent bindingComponent, View root,<span class=\"keyword\">int</span> layoutId)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 不理了,这里就拿到binding了,可以直接引用View了,停止思考</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> (T) sMapper.getDataBinder(bindingComponent, root, layoutId);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>问题来了,它是怎么取得我要的DataBinding对象且又是怎么实现View绑定的?</p>\n<ol>\n<li>好,来康康,这个<code>DataBinderMapperImpl</code>,这是编译阶段下kapt自动生成的:</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> androidx.databinding;</span><br><span class=\"line\"><span class=\"comment\">// 好家伙,这里直接继承MergedDataBinderMapper </span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DataBinderMapperImpl</span> <span class=\"keyword\">extends</span> <span class=\"title\">MergedDataBinderMapper</span> </span>&#123;</span><br><span class=\"line\">  DataBinderMapperImpl() &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 添加kapt下生成当前Module的DataBinderMapperImpl</span></span><br><span class=\"line\">    addMapper(<span class=\"keyword\">new</span> com.xxx.xxx.DataBinderMapperImpl());</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">...</span><br><span class=\"line\"><span class=\"comment\">// 合并其他Mapper的DataBindingMapper </span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MergedDataBinderMapper</span> <span class=\"keyword\">extends</span> <span class=\"title\">DataBinderMapper</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Set&lt;Class&lt;? extends DataBinderMapper&gt;&gt; mExistingMappers = <span class=\"keyword\">new</span> HashSet&lt;&gt;();</span><br><span class=\"line\">    <span class=\"comment\">// 添加Mapper,如果已经存在则忽略</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addMapper</span><span class=\"params\">(DataBinderMapper mapper)</span> </span>&#123;</span><br><span class=\"line\">        Class&lt;? extends DataBinderMapper&gt; mapperClass = mapper.getClass();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mExistingMappers.add(mapperClass)) &#123;</span><br><span class=\"line\">            mMappers.add(mapper);</span><br><span class=\"line\">            <span class=\"keyword\">final</span> List&lt;DataBinderMapper&gt; dependencies = mapper.collectDependencies();</span><br><span class=\"line\">            <span class=\"keyword\">for</span>(DataBinderMapper dependency : dependencies) &#123;</span><br><span class=\"line\">                addMapper(dependency);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li><code>MergedDataBinderMapper.getDataBinder</code>:</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Override</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> ViewDataBinding <span class=\"title\">getDataBinder</span><span class=\"params\">(DataBindingComponent bindingComponent, View view,</span></span></span><br><span class=\"line\"><span class=\"params\"><span class=\"function\">        <span class=\"keyword\">int</span> layoutId)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 遍历之前添加的mMappers    </span></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(DataBinderMapper mapper : mMappers) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 好了,这里获取对应的Mapper的DataBinder,超,想想之前添加了哪个Mapper</span></span><br><span class=\"line\">        <span class=\"comment\">// 没错,不正好对上tmd的上面1的com.xxx.xxx.DataBinderMapperImpl()</span></span><br><span class=\"line\">        ViewDataBinding result = mapper.getDataBinder(bindingComponent, view, layoutId);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (result != <span class=\"keyword\">null</span>) <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (loadFeatures()) <span class=\"keyword\">return</span> getDataBinder(bindingComponent, view, layoutId);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>让我们来康康kapt生成的<code>com.xxx.xxx.DataBinderMapperImpl()</code>到底有什么</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DataBinderMapperImpl</span> <span class=\"keyword\">extends</span> <span class=\"title\">DataBinderMapper</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"comment\">// layout id 索引</span></span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> LAYOUT_FRAGMENTHOME = <span class=\"number\">40</span>;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> SparseIntArray INTERNAL_LAYOUT_ID_LOOKUP = <span class=\"keyword\">new</span> SparseIntArray(<span class=\"number\">1</span>);</span><br><span class=\"line\">  <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">    INTERNAL_LAYOUT_ID_LOOKUP.put(com.xmiles.callshow.R.layout.fragment_home, LAYOUT_FRAGMENTHOME);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"meta\">@Override</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> ViewDataBinding <span class=\"title\">getDataBinder</span><span class=\"params\">(DataBindingComponent component, View view, <span class=\"keyword\">int</span> layoutId)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">// 拿到索引的id</span></span><br><span class=\"line\">    <span class=\"keyword\">int</span> localizedLayoutId = INTERNAL_LAYOUT_ID_LOOKUP.get(layoutId);</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(localizedLayoutId &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">final</span> Object tag = view.getTag();</span><br><span class=\"line\">      <span class=\"comment\">// 判断tag</span></span><br><span class=\"line\">      <span class=\"keyword\">if</span>(tag == <span class=\"keyword\">null</span>)<span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> RuntimeException(<span class=\"string\">&quot;view must have a tag&quot;</span>);</span><br><span class=\"line\">      <span class=\"comment\">// 这里如果布局数量超50,为避免一个方法体过大,会额外新建另外一个函数去处理,这里为好展示,整个类我就删除了很多其他布局参数</span></span><br><span class=\"line\">      <span class=\"keyword\">int</span> methodIndex = (localizedLayoutId - <span class=\"number\">1</span>) / <span class=\"number\">50</span>;</span><br><span class=\"line\">      <span class=\"comment\">// 跟据对应componet生成对应的ViewDetaBinding</span></span><br><span class=\"line\">      <span class=\"keyword\">switch</span>(methodIndex) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">0</span>: &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> internalGetViewDataBinding0(component, view, localizedLayoutId, tag);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">1</span>: &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> internalGetViewDataBinding1(component, view, localizedLayoutId, tag);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">// GetViewDataBinding</span></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">final</span> ViewDataBinding <span class=\"title\">internalGetViewDataBinding0</span><span class=\"params\">(DataBindingComponent component,View view, <span class=\"keyword\">int</span> internalId, Object tag)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span>(internalId) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">case</span>  LAYOUT_FRAGMENTHOME: &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"string\">&quot;layout/fragment_home_0&quot;</span>.equals(tag)) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> FragmentHomeBindingImpl(component, view);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalArgumentException(<span class=\"string\">&quot;The tag for fragment_home is invalid. Received: &quot;</span> + tag);</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"refer\">Refer<a title=\"#refer\" href=\"#refer\"></a></h3>\n<p><a href=\"https://www.jianshu.com/p/4be20cc58f17\" target=\"_blank\">Android架构组件之DataBinding源码解析 - 简书 (jianshu.com)</a><br>\n<a href=\"https://www.jianshu.com/p/4e9a1ab05bb5\" target=\"_blank\">DataBinding源码分析 - 简书 (jianshu.com)</a></p>\n","prev":{"title":"源码学习-HashMap","link":"2021/11/29/4diQitvVwGPnicN5"},"next":{"title":"Java并发(7) - ThreadLocal","link":"2021/11/07/MpHTUCP7P1OgtydO"},"plink":"http://onion66.gitee.io/blog/2021/11/29/hu0861X6Ltf32fYt/","reward":true,"copyright":{"custom":"Copyright:自由转载-非商用-禁止演绎-保持署名（CC BY-NC-ND 4.0）"}}