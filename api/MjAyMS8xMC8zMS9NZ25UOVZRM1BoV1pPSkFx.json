{"title":"CS理论 - 编码与加密","date":"2021-10-31T21:32:00.000Z","date_formatted":{"ll":"2021年10月31日","L":"2021/10/31","MM-DD":"10-31"},"thumbnail":"https://s1.ax1x.com/2022/03/14/bL0JWF.md.png","link":"2021/10/31/MgnT9VQ3PhWZOJAq","comments":true,"tags":["安全","计算机基础"],"categories":["CS理论"],"updated":"2022-03-14T01:10:52.607Z","content":"<h2 id=\"加密\">加密<a title=\"#加密\" href=\"#加密\"></a></h2>\n<blockquote>\n<p>加密(整容)是通过Intranet、Extranet和Internet进行安全的信息交换的基础</p>\n</blockquote>\n<p>常用加密</p>\n<ul>\n<li>对称加密算法</li>\n<li>非对称加密算法</li>\n<li>哈希算法</li>\n</ul>\n<span id=\"more\"></span>\n<h3 id=\"对称加密\">对称加密<a title=\"#对称加密\" href=\"#对称加密\"></a></h3>\n<blockquote>\n<p>使⽤用密钥和加密算法对数据进行转换，得到的无意义数据即为密⽂; 使用密钥和解密算法对密⽂进行逆向转换，得到原数据</p>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/10/28/5bxS8f.png\" alt=\"5bxS8f.png\" loading=\"lazy\" class=\"φbp\"></p>\n<p>算法：DES、AES</p>\n<h3 id=\"非对称加密\">非对称加密<a title=\"#非对称加密\" href=\"#非对称加密\"></a></h3>\n<blockquote>\n<p>使⽤公钥对数据进行加密得到密文;使⽤用私钥对数据进⾏解密得到原数据</p>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/10/28/5bxDZd.png\" alt=\"5bxDZd.png\" loading=\"lazy\" class=\"φbp\"></p>\n<p>算法：RSA、DSA</p>\n<p>完整的非对称加密过程:<br>\n<img src=\"https://z3.ax1x.com/2021/10/28/5qdbl9.png\" alt=\"5qdbl9.png\" loading=\"lazy\"><br>\n对数据进行签名时，实际上，是对数据的hash值（摘要）进行签名（加密），解密时，是对原数据进行hash，得到摘要，再将加密过的摘要进行解密，将得到的两者对比，如果一致就验证通过</p>\n<h4 id=\"公钥与私钥\">公钥与私钥<a title=\"#公钥与私钥\" href=\"#公钥与私钥\"></a></h4>\n<blockquote>\n<p>加密密钥就是公钥，解密密钥就是私钥</p>\n</blockquote>\n<p>将原数据通过我的私钥，也就是签名，进行加密，得到签名数据，别人拿我的公钥对我的签名数据进行解密（也就是验证的过程），得到的就是我要发送的原数据。签名数据只有我能造出来，因为只有我拥有我的私钥，这就证明了这个数据是我写出来的。也就是所谓的签名的作用。</p>\n<p><img src=\"https://z3.ax1x.com/2021/10/28/5bzD6U.png\" alt=\"5bzD6U.png\" loading=\"lazy\" class=\"φbp\"></p>\n<h4 id=\"签名和验证\">签名和验证<a title=\"#签名和验证\" href=\"#签名和验证\"></a></h4>\n<blockquote>\n<p>签名和验证是拿私钥加密（签名），公钥解密（验证）</p>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/10/28/5qSkhq.png\" alt=\"5qSkhq.png\" loading=\"lazy\" class=\"φbp\"></p>\n<h2 id=\"编码\">编码<a title=\"#编码\" href=\"#编码\"></a></h2>\n<blockquote>\n<p>编码(化妆)是信息从一种形式或格式转换为另一种形式的过程。解码，是编码的逆过程</p>\n</blockquote>\n<h3 id=\"常用编码\">常用编码<a title=\"#常用编码\" href=\"#常用编码\"></a></h3>\n<ul>\n<li>Base64， 16进制，Base32\n<ul>\n<li>将原来的信息用另外一种编码机制替换</li>\n</ul>\n</li>\n<li>多语种的编码 UTF-8, UTF-16,UTF-32, Unicode, ISO8859-1, GBK, GB2312\n<ul>\n<li>主要是对各种语言的编码</li>\n</ul>\n</li>\n<li>BER/DER编码</li>\n<li>HTML编码，JS编码，URL编码\n<ul>\n<li>针对脚本语言或者标签语言中的字符串中的特殊字符进行处理</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"base64\">Base64<a title=\"#base64\" href=\"#base64\"></a></h4>\n<blockquote>\n<p>将二进制数据转换成由64个字符组成的字符串的编码算法</p>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/10/28/5qt0Cd.png\" alt=\"5qt0Cd.png\" loading=\"lazy\" class=\"φbp\"></p>\n<p>编码示例:<br>\n<img src=\"https://z3.ax1x.com/2021/10/28/5qNYzn.png\" alt=\"5qNYzn.png\" loading=\"lazy\"></p>\n<p>作用: 让原数据具有字符串所具有的特性，可以放在URL中传输，可以保存到文本文件，可以通过普通的聊天软件进行文本传输</p>\n<p>Base64加密图片会更加安全和高效吗？<br>\n不会，Base64是公开的算法，加密和解密都是公开的，任何人都可以解密，因此并不会更安全。通过Base64加密的文件或数据，都会增大约1/3，降低网络性能，增大用户流量，因此也不存在更高效的问题</p>\n<h3 id=\"应用领域\">应用领域<a title=\"#应用领域\" href=\"#应用领域\"></a></h3>\n<h4 id=\"压缩与解压缩\">压缩与解压缩<a title=\"#压缩与解压缩\" href=\"#压缩与解压缩\"></a></h4>\n<blockquote>\n<p>压缩属于编码过程，解压缩属于解码过程</p>\n</blockquote>\n<p>压缩：把数据换一种方式来存储，以减少存储空间。<br>\n解压缩：把压缩后的数据还原成原先的形式，以便使用。<br>\n常⻅见压缩算法:DEFLATE（zip）、JPEG、MP3</p>\n<h4 id=\"媒体数据的编解码\">媒体数据的编解码<a title=\"#媒体数据的编解码\" href=\"#媒体数据的编解码\"></a></h4>\n<p>图片的编码：把图像数据写成 JPG、PNG 等⽂件的编码格式。<br>\n图⽚的解码：把 JPG、PNG 等⽂文件中的数据解析成标准的图像数据。</p>\n<h4 id=\"序列化与反序列化\">序列化与反序列化<a title=\"#序列化与反序列化\" href=\"#序列化与反序列化\"></a></h4>\n<p>序列化: 把数据对象，一般是内存中的，如JVM中的对象，转换成字节序列的过程。<br>\n反序列化: 把字节序列重新转换成内存中的对象</p>\n<h4 id=\"hash\">Hash<a title=\"#hash\" href=\"#hash\"></a></h4>\n<blockquote>\n<p>把任意数据转换成指定大小范围（通常很小）的数据</p>\n</blockquote>\n<p>经典算法：MD5、SHA1、SHA256等</p>\n<p>实际用途:</p>\n<ul>\n<li>数据完整性验证\n<ul>\n<li>从⽹络上下载文件后，通过比对文件的 Hash 值(例如 MD5、SHA1)，可以确认下载的文件是否有损坏。如果下载的文件 Hash 值和文件提供方给出的 Hash 值一致，则证明下载的文件是完好无损的</li>\n</ul>\n</li>\n<li>唯一性验证\n<ul>\n<li>HashCode是一个数据的指纹信息，也就是从这个数据身上采取了足够多的特征来证明“你是你”</li>\n</ul>\n</li>\n<li>快速查找: HashCode和HashMap\n<ul>\n<li>HashCode是数据的内存地址</li>\n<li>HashMap：Key的HashCode是Value的地址，通过Key的HashCode可以找到Value</li>\n<li>在重写equals()时，也必须重写hashCode(),因为如果不重写hashCode()，当使用equals()比较时，hashCode()是Object中的hashCode()，很可能出现用equals()判断相等而用hashCode()判断不相等的情况,甚至也有可能是相反的</li>\n</ul>\n</li>\n<li>隐私保护</li>\n</ul>\n<p>Hash 是编码吗?<br>\n不是。 Hash 是单向过程，往往是不可逆的，无法进行逆向恢复操作，因此 Hash 不属于编码。</p>\n<p>Hash 是加密吗?<br>\n不是。Hash 是单向过程，无法进行逆向回复操作，因此 Hash 不属于加密。(记住MD5 不是加密!MD5不可逆)</p>\n","prev":{"title":"Java 理论 - JVM","link":"2021/10/31/nOSSxZ51uxl6hUq8"},"next":{"title":"CS理论 - 计算机网络","link":"2021/10/31/Qqq7oSBqBc2Zgbrx"},"plink":"https://onion99.github.io/2021/10/31/MgnT9VQ3PhWZOJAq/","toc":[{"id":"加密","title":"加密","index":"1"},{"id":"编码","title":"编码","index":"2"}],"reward":true,"copyright":{"custom":"Copyright:自由转载-非商用-禁止演绎-保持署名（CC BY-NC-ND 4.0）"}}