{"title":"源码学习-Glide","date":"2021-10-31T21:29:17.000Z","date_formatted":{"ll":"2021年10月31日","L":"2021/10/31","MM-DD":"10-31"},"link":"2021/10/31/15jfHwStpctgCeeA","comments":true,"tags":["源码解析"],"categories":["Android"],"updated":"2021-10-31T13:28:31.000Z","content":"<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token class-name\">Glide</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">with</span><span class=\"token punctuation\">(</span>fragment<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>myUrl<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">into</span><span class=\"token punctuation\">(</span>imageView<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://z3.ax1x.com/2021/10/26/5oUW5R.png\" alt=\"5oUW5R.png\" loading=\"lazy\" class=\"φbp\"></p>\n<h3 id=\"with()\">with()<a title=\"#with()\" href=\"#with()\"></a></h3>\n<blockquote>\n<p>用Method初始化glide的一些必需的环境，然后调用Requestmanagerretriver的<code>get()</code>获取requestManager。如果传入的对象是全局Context，你就不需要处理生命周期;如果输入是具有生命周期的View(包含Frg或Act)则将添加一个隐藏的Fragment来感知生命周期</p>\n</blockquote>\n<span id=\"more\"></span>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">RequestManager</span> <span class=\"token keyword\">with</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Context</span> context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  \n  <span class=\"token keyword\">return</span> <span class=\"token function\">getRetriever</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"getretriever()\">getRetriever()<a title=\"#getretriever()\" href=\"#getretriever()\"></a></h4>\n<blockquote>\n<p>RequestManagerRetriever,用于创建新的RequestManager或从Activity和Fragment中检索现有的</p>\n</blockquote>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@NonNull</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">RequestManagerRetriever</span> <span class=\"token function\">getRetriever</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">Context</span> context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 由于其他原因，上下文可能为空（即用户传入空值），但实际上它只会由于 Fragment 生命周期的错误而发生。</span>\n  <span class=\"token class-name\">Preconditions</span><span class=\"token punctuation\">.</span><span class=\"token function\">checkNotNull</span><span class=\"token punctuation\">(</span>\n      context<span class=\"token punctuation\">,</span><span class=\"token string\">\"You cannot start a load on a not yet attached View or a Fragment where getActivity() \"</span>\n          <span class=\"token operator\">+</span> <span class=\"token string\">\"returns null (which usually occurs when getActivity() is called before the Fragment \"</span>\n          <span class=\"token operator\">+</span> <span class=\"token string\">\"is attached or after the Fragment is destroyed).\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 获取RequestManagerRetriever</span>\n  <span class=\"token keyword\">return</span> <span class=\"token class-name\">Glide</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRequestManagerRetriever</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"get()\">get()<a title=\"#get()\" href=\"#get()\"></a></h4>\n<blockquote>\n<p>单例实现Glide的初始化</p>\n</blockquote>\n<pre class=\"line-numbers language-kotlin\" data-language=\"kotlin\"><code class=\"language-kotlin\"><span class=\"token comment\">//双重检查锁定在这里是安全的</span>\n<span class=\"token keyword\">public</span> static Glide <span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span><span class=\"token annotation builtin\">@NonNull</span> Context context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>glide <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 通过反射GeneratedAppGlideModuleImpl实例化Glide</span>\n    GeneratedAppGlideModule annotationGeneratedModule <span class=\"token operator\">=</span>\n        <span class=\"token function\">getAnnotationGeneratedGlideModules</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">.</span><span class=\"token function\">getApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    <span class=\"token function\">synchronized</span> <span class=\"token punctuation\">(</span>Glide<span class=\"token punctuation\">.</span>class<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>glide <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">checkAndInitializeGlide</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> annotationGeneratedModule<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> glide<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"requestmanagerretriever.get()\">RequestManagerRetriever.get()<a title=\"#requestmanagerretriever.get()\" href=\"#requestmanagerretriever.get()\"></a></h4>\n<blockquote>\n<p>创建对应生命周期的RequestManager</p>\n</blockquote>\n<ul>\n<li>首先判断是在子线程,则拿一个全Context然后在工厂模式创建下RequestManager,所以推荐不要在子线程执行此操作</li>\n<li>如为FragmentActivity,则通过FragmentManager,创建一个空Fragment放进当前<code>Fragment</code>或者<code>Activity</code>,这样就可以感知宿主的生命周期,然后在工厂模式创建下RequestManager</li>\n<li>如为Activity…</li>\n<li>如为ContextWrapper…</li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">RequestManager</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Activity</span> activity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Util</span><span class=\"token punctuation\">.</span><span class=\"token function\">isOnBackgroundThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>activity<span class=\"token punctuation\">.</span><span class=\"token function\">getApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>activity <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">FragmentActivity</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">FragmentActivity</span><span class=\"token punctuation\">)</span> activity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">assertNotDestroyed</span><span class=\"token punctuation\">(</span>activity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    frameWaiter<span class=\"token punctuation\">.</span><span class=\"token function\">registerSelf</span><span class=\"token punctuation\">(</span>activity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\"><span class=\"token namespace\">android<span class=\"token punctuation\">.</span>app<span class=\"token punctuation\">.</span></span>FragmentManager</span> fm <span class=\"token operator\">=</span> activity<span class=\"token punctuation\">.</span><span class=\"token function\">getFragmentManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">fragmentGet</span><span class=\"token punctuation\">(</span>activity<span class=\"token punctuation\">,</span> fm<span class=\"token punctuation\">,</span> <span class=\"token comment\">/*parentHint=*/</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token function\">isActivityVisible</span><span class=\"token punctuation\">(</span>activity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">// FragmentActivity Simple </span>\n<span class=\"token annotation punctuation\">@NonNull</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">RequestManager</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">FragmentActivity</span> activity<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Util</span><span class=\"token punctuation\">.</span><span class=\"token function\">isOnBackgroundThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span>activity<span class=\"token punctuation\">.</span><span class=\"token function\">getApplicationContext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">assertNotDestroyed</span><span class=\"token punctuation\">(</span>activity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    frameWaiter<span class=\"token punctuation\">.</span><span class=\"token function\">registerSelf</span><span class=\"token punctuation\">(</span>activity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">FragmentManager</span> fm <span class=\"token operator\">=</span> activity<span class=\"token punctuation\">.</span><span class=\"token function\">getSupportFragmentManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">supportFragmentGet</span><span class=\"token punctuation\">(</span>activity<span class=\"token punctuation\">,</span> fm<span class=\"token punctuation\">,</span> <span class=\"token comment\">/*parentHint=*/</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> <span class=\"token function\">isActivityVisible</span><span class=\"token punctuation\">(</span>activity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">// 通过supportFragment感知创建</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">RequestManager</span> <span class=\"token function\">supportFragmentGet</span><span class=\"token punctuation\">(</span>\n    <span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Context</span> context<span class=\"token punctuation\">,</span>\n    <span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">FragmentManager</span> fm<span class=\"token punctuation\">,</span>\n    <span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">Fragment</span> parentHint<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">boolean</span> isParentVisible<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token class-name\">SupportRequestManagerFragment</span> current <span class=\"token operator\">=</span> <span class=\"token function\">getSupportRequestManagerFragment</span><span class=\"token punctuation\">(</span>fm<span class=\"token punctuation\">,</span> parentHint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">RequestManager</span> requestManager <span class=\"token operator\">=</span> current<span class=\"token punctuation\">.</span><span class=\"token function\">getRequestManager</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>requestManager <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 工厂模式创建</span>\n    <span class=\"token class-name\">Glide</span> glide <span class=\"token operator\">=</span> <span class=\"token class-name\">Glide</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    requestManager <span class=\"token operator\">=</span>\n        factory<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span>\n            glide<span class=\"token punctuation\">,</span> current<span class=\"token punctuation\">.</span><span class=\"token function\">getGlideLifecycle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> current<span class=\"token punctuation\">.</span><span class=\"token function\">getRequestManagerTreeNode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 这是一个小技巧，我们将启动 RequestManager，而不是相应的 Lifecycle。启动 RequestManager 是安全的，但启动 Lifecycle 可能会引发内存泄漏</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isParentVisible<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      requestManager<span class=\"token punctuation\">.</span><span class=\"token function\">onStart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    current<span class=\"token punctuation\">.</span><span class=\"token function\">setRequestManager</span><span class=\"token punctuation\">(</span>requestManager<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> requestManager<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"load()\">load()<a title=\"#load()\" href=\"#load()\"></a></h3>\n<blockquote>\n<p>对全局变量赋值,构建ReqeustBuilder</p>\n</blockquote>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// Drawable Simple</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">RequestBuilder</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Drawable</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">Drawable</span> drawable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">asDrawable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>drawable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"into()\">into()<a title=\"#into()\" href=\"#into()\"></a></h3>\n<p>设置资源到加载的ImageView中 ，取消任何现有的加载，并释放 Glide 之前可能加载到ImageView的任何资源，以便它们可以被重用</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">// 设置资源配置到TargetView</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">ViewTarget</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ImageView</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">TranscodeType</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">into</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">ImageView</span> view<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">Util</span><span class=\"token punctuation\">.</span><span class=\"token function\">assertMainThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    ···\n    <span class=\"token keyword\">return</span> <span class=\"token function\">into</span><span class=\"token punctuation\">(</span>\n        glideContext<span class=\"token punctuation\">.</span><span class=\"token function\">buildImageViewTarget</span><span class=\"token punctuation\">(</span>view<span class=\"token punctuation\">,</span> transcodeClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">/*targetListener=*/</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n        requestOptions<span class=\"token punctuation\">,</span>\n        <span class=\"token class-name\">Executors</span><span class=\"token punctuation\">.</span><span class=\"token function\">mainThreadExecutor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">// 创建TargetView</span>\n<span class=\"token keyword\">public</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">X</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">ViewTarget</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ImageView</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">X</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">buildImageViewTarget</span><span class=\"token punctuation\">(</span>\n      <span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">ImageView</span> imageView<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">X</span><span class=\"token punctuation\">></span></span> transcodeClass<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> imageViewTargetFactory<span class=\"token punctuation\">.</span><span class=\"token function\">buildTarget</span><span class=\"token punctuation\">(</span>imageView<span class=\"token punctuation\">,</span> transcodeClass<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">// 负责为指定的android.view.View子类生成正确类型的Target工厂</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ImageViewTargetFactory</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token annotation punctuation\">@NonNull</span>\n  <span class=\"token annotation punctuation\">@SuppressWarnings</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unchecked\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">public</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Z</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">ViewTarget</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ImageView</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Z</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">buildTarget</span><span class=\"token punctuation\">(</span>\n      <span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">ImageView</span> view<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Z</span><span class=\"token punctuation\">></span></span> clazz<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Bitmap</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>clazz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ViewTarget</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ImageView</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Z</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BitmapImageViewTarget</span><span class=\"token punctuation\">(</span>view<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Drawable</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token function\">isAssignableFrom</span><span class=\"token punctuation\">(</span>clazz<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">ViewTarget</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">ImageView</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Z</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DrawableImageViewTarget</span><span class=\"token punctuation\">(</span>view<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span>\n          <span class=\"token string\">\"Unhandled class: \"</span> <span class=\"token operator\">+</span> clazz <span class=\"token operator\">+</span> <span class=\"token string\">\", try .as*(Class).transcode(ResourceTranscoder)\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"into()-1\">into()<a title=\"#into()-1\" href=\"#into()-1\"></a></h4>\n<blockquote>\n<p>核心代码加载代码，看起来简单但实现起来复杂。<br>\n首先看看 buildRequest 如何初始化 request</p>\n</blockquote>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Y</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Target</span><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TranscodeType</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">Y</span> <span class=\"token function\">into</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Y</span> target<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">RequestListener</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TranscodeType</span><span class=\"token punctuation\">></span></span> targetListener<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BaseRequestOptions</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> options<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Executor</span> callbackExecutor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token class-name\">Preconditions</span><span class=\"token punctuation\">.</span><span class=\"token function\">checkNotNull</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isModelSet<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You must call #load() before calling #into()\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token comment\">// 现在的请求</span>\n  <span class=\"token class-name\">Request</span> request <span class=\"token operator\">=</span> <span class=\"token function\">buildRequest</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> targetListener<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">,</span> callbackExecutor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 之前的请求</span>\n  <span class=\"token class-name\">Request</span> previous <span class=\"token operator\">=</span> target<span class=\"token punctuation\">.</span><span class=\"token function\">getRequest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 如果之前的请求完成，重新开始以重新传递结果，触发 RequestListeners 和 Targets。如果请求失败，将重新请求，</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">.</span><span class=\"token function\">isEquivalentTo</span><span class=\"token punctuation\">(</span>previous<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token function\">isSkipMemoryCacheWithCompletePreviousRequest</span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">,</span> previous<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 如果之前的请求已经在运行，我们可以让它继续运行而不中断</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token class-name\">Preconditions</span><span class=\"token punctuation\">.</span><span class=\"token function\">checkNotNull</span><span class=\"token punctuation\">(</span>previous<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isRunning</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// 使用先前的请求而不是新的请求来优化，例如跳过设置占位符、跟踪和取消跟踪目标以及获取在单个请求中完成的视图维度</span>\n      previous<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> target<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  requestManager<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  target<span class=\"token punctuation\">.</span><span class=\"token function\">setRequest</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  requestManager<span class=\"token punctuation\">.</span><span class=\"token function\">track</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> target<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"requestbuilder.buildrequest()\">RequestBuilder.buildRequest()<a title=\"#requestbuilder.buildrequest()\" href=\"#requestbuilder.buildrequest()\"></a></h4>\n<blockquote>\n<p>根据存在的场景建立不同Request</p>\n</blockquote>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token class-name\">Request</span> <span class=\"token function\">buildRequest</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Target</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TranscodeType</span><span class=\"token punctuation\">></span></span> target<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">RequestListener</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TranscodeType</span><span class=\"token punctuation\">></span></span> targetListener<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BaseRequestOptions</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> requestOptions<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Executor</span> callbackExecutor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">buildRequestRecursive</span><span class=\"token punctuation\">(</span><span class=\"token comment\">/*requestLock=*/</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> targetListener<span class=\"token punctuation\">,</span><span class=\"token comment\">/*parentCoordinator=*/</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> transitionOptions<span class=\"token punctuation\">,</span> requestOptions<span class=\"token punctuation\">.</span><span class=\"token function\">getPriority</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> requestOptions<span class=\"token punctuation\">.</span><span class=\"token function\">getOverrideWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> requestOptions<span class=\"token punctuation\">.</span><span class=\"token function\">getOverrideHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> requestOptions<span class=\"token punctuation\">,</span> callbackExecutor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">Request</span> <span class=\"token function\">buildRequestRecursive</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> requestLock<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Target</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TranscodeType</span><span class=\"token punctuation\">></span></span> target<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">RequestListener</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TranscodeType</span><span class=\"token punctuation\">></span></span> targetListener<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">RequestCoordinator</span> parentCoordinator<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TransitionOptions</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">super</span> <span class=\"token class-name\">TranscodeType</span><span class=\"token punctuation\">></span></span> transitionOptions<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Priority</span> priority<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> overrideWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> overrideHeight<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BaseRequestOptions</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> requestOptions<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Executor</span> callbackExecutor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 如有必要首先构建 ErrorRequestCoordinator，以便我们可以更新 parentCoordinator。</span>\n  <span class=\"token class-name\">ErrorRequestCoordinator</span> errorRequestCoordinator <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>errorBuilder <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    errorRequestCoordinator <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ErrorRequestCoordinator</span><span class=\"token punctuation\">(</span>requestLock<span class=\"token punctuation\">,</span> parentCoordinator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    parentCoordinator <span class=\"token operator\">=</span> errorRequestCoordinator<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token class-name\">Request</span> mainRequest <span class=\"token operator\">=</span> <span class=\"token function\">buildThumbnailRequestRecursive</span><span class=\"token punctuation\">(</span>requestLock<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> targetListener<span class=\"token punctuation\">,</span> parentCoordinator<span class=\"token punctuation\">,</span> transitionOptions<span class=\"token punctuation\">,</span> priority<span class=\"token punctuation\">,</span> overrideWidth<span class=\"token punctuation\">,</span> overrideHeight<span class=\"token punctuation\">,</span> requestOptions<span class=\"token punctuation\">,</span> callbackExecutor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>errorRequestCoordinator <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> mainRequest<span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">int</span> errorOverrideWidth <span class=\"token operator\">=</span> errorBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">getOverrideWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">int</span> errorOverrideHeight <span class=\"token operator\">=</span> errorBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">getOverrideHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Util</span><span class=\"token punctuation\">.</span><span class=\"token function\">isValidDimensions</span><span class=\"token punctuation\">(</span>overrideWidth<span class=\"token punctuation\">,</span> overrideHeight<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>errorBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">isValidOverride</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    errorOverrideWidth <span class=\"token operator\">=</span> requestOptions<span class=\"token punctuation\">.</span><span class=\"token function\">getOverrideWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    errorOverrideHeight <span class=\"token operator\">=</span> requestOptions<span class=\"token punctuation\">.</span><span class=\"token function\">getOverrideHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token class-name\">Request</span> errorRequest <span class=\"token operator\">=</span> errorBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">buildRequestRecursive</span><span class=\"token punctuation\">(</span>requestLock<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> targetListener<span class=\"token punctuation\">,</span> errorRequestCoordinator<span class=\"token punctuation\">,</span> errorBuilder<span class=\"token punctuation\">.</span>transitionOptions<span class=\"token punctuation\">,</span> errorBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">getPriority</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> errorOverrideWidth<span class=\"token punctuation\">,</span> errorOverrideHeight<span class=\"token punctuation\">,</span> errorBuilder<span class=\"token punctuation\">,</span> callbackExecutor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  errorRequestCoordinator<span class=\"token punctuation\">.</span><span class=\"token function\">setRequests</span><span class=\"token punctuation\">(</span>mainRequest<span class=\"token punctuation\">,</span> errorRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> errorRequestCoordinator<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"requestbuilder.buildthumbnailrequestrecursive()\">RequestBuilder.buildThumbnailRequestRecursive()<a title=\"#requestbuilder.buildthumbnailrequestrecursive()\" href=\"#requestbuilder.buildthumbnailrequestrecursive()\"></a></h4>\n<blockquote>\n<p>根据是否需要缩略图,生成各种不同的Request</p>\n</blockquote>\n<p>这里经过一层又一层最终拿到一个<code>SingleRequest</code>。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token class-name\">Request</span> <span class=\"token function\">buildThumbnailRequestRecursive</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> requestLock<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Target</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TranscodeType</span><span class=\"token punctuation\">></span></span> target<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RequestListener</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TranscodeType</span><span class=\"token punctuation\">></span></span> targetListener<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@Nullable</span> <span class=\"token class-name\">RequestCoordinator</span> parentCoordinator<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TransitionOptions</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">super</span> <span class=\"token class-name\">TranscodeType</span><span class=\"token punctuation\">></span></span> transitionOptions<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Priority</span> priority<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> overrideWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> overrideHeight<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BaseRequestOptions</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> requestOptions<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Executor</span> callbackExecutor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>thumbnailBuilder <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 递归案例：包含一个潜在的递归缩略图Request Builder</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isThumbnailBuilt<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalStateException</span><span class=\"token punctuation\">(</span>\n          <span class=\"token string\">\"You cannot use a request as both the main request and a \"</span>\n              <span class=\"token operator\">+</span> <span class=\"token string\">\"thumbnail, consider using clone() on the request(s) passed to thumbnail()\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token class-name\">TransitionOptions</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">super</span> <span class=\"token class-name\">TranscodeType</span><span class=\"token punctuation\">></span></span> thumbTransitionOptions <span class=\"token operator\">=</span> thumbnailBuilder<span class=\"token punctuation\">.</span>transitionOptions<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 默认情况下我们的将过渡用在缩略图，但避免覆盖可能已明确应用于缩略图请求的自定义选项。</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>thumbnailBuilder<span class=\"token punctuation\">.</span>isDefaultTransitionOptionsSet<span class=\"token punctuation\">)</span> thumbTransitionOptions <span class=\"token operator\">=</span> transitionOptions<span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Priority</span> thumbPriority <span class=\"token operator\">=</span> thumbnailBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">isPrioritySet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> thumbnailBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">getPriority</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token function\">getThumbnailPriority</span><span class=\"token punctuation\">(</span>priority<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> thumbOverrideWidth <span class=\"token operator\">=</span> thumbnailBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">getOverrideWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> thumbOverrideHeight <span class=\"token operator\">=</span> thumbnailBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">getOverrideHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Util</span><span class=\"token punctuation\">.</span><span class=\"token function\">isValidDimensions</span><span class=\"token punctuation\">(</span>overrideWidth<span class=\"token punctuation\">,</span> overrideHeight<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>thumbnailBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">isValidOverride</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      thumbOverrideWidth <span class=\"token operator\">=</span> requestOptions<span class=\"token punctuation\">.</span><span class=\"token function\">getOverrideWidth</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      thumbOverrideHeight <span class=\"token operator\">=</span> requestOptions<span class=\"token punctuation\">.</span><span class=\"token function\">getOverrideHeight</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token class-name\">ThumbnailRequestCoordinator</span> coordinator <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThumbnailRequestCoordinator</span><span class=\"token punctuation\">(</span>requestLock<span class=\"token punctuation\">,</span> parentCoordinator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Request</span> fullRequest <span class=\"token operator\">=</span> <span class=\"token function\">obtainRequest</span><span class=\"token punctuation\">(</span>requestLock<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> targetListener<span class=\"token punctuation\">,</span> requestOptions<span class=\"token punctuation\">,</span> coordinator<span class=\"token punctuation\">,</span> transitionOptions<span class=\"token punctuation\">,</span> priority<span class=\"token punctuation\">,</span> overrideWidth<span class=\"token punctuation\">,</span> overrideHeight<span class=\"token punctuation\">,</span> callbackExecutor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    isThumbnailBuilt <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 递归生成缩略图请求</span>\n    <span class=\"token class-name\">Request</span> thumbRequest <span class=\"token operator\">=</span> thumbnailBuilder<span class=\"token punctuation\">.</span><span class=\"token function\">buildRequestRecursive</span><span class=\"token punctuation\">(</span>requestLock<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span>targetListener<span class=\"token punctuation\">,</span> coordinator<span class=\"token punctuation\">,</span> thumbTransitionOptions<span class=\"token punctuation\">,</span> thumbPriority<span class=\"token punctuation\">,</span> thumbOverrideWidth<span class=\"token punctuation\">,</span> thumbOverrideHeight<span class=\"token punctuation\">,</span> thumbnailBuilder<span class=\"token punctuation\">,</span> callbackExecutor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    isThumbnailBuilt <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    coordinator<span class=\"token punctuation\">.</span><span class=\"token function\">setRequests</span><span class=\"token punctuation\">(</span>fullRequest<span class=\"token punctuation\">,</span> thumbRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> coordinator<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>thumbSizeMultiplier <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 基本情况：缩略图Multiplier生成缩略图请求，但不能递归。</span>\n    <span class=\"token class-name\">ThumbnailRequestCoordinator</span> coordinator <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ThumbnailRequestCoordinator</span><span class=\"token punctuation\">(</span>requestLock<span class=\"token punctuation\">,</span> parentCoordinator<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Request</span> fullRequest <span class=\"token operator\">=</span> <span class=\"token function\">obtainRequest</span><span class=\"token punctuation\">(</span>requestLock<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> targetListener<span class=\"token punctuation\">,</span> requestOptions<span class=\"token punctuation\">,</span> coordinator<span class=\"token punctuation\">,</span> transitionOptions<span class=\"token punctuation\">,</span> priority<span class=\"token punctuation\">,</span> overrideWidth<span class=\"token punctuation\">,</span> overrideHeight<span class=\"token punctuation\">,</span> callbackExecutor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">BaseRequestOptions</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> thumbnailOptions <span class=\"token operator\">=</span> requestOptions<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">sizeMultiplier</span><span class=\"token punctuation\">(</span>thumbSizeMultiplier<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Request</span> thumbnailRequest <span class=\"token operator\">=</span> <span class=\"token function\">obtainRequest</span><span class=\"token punctuation\">(</span>requestLock<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> targetListener<span class=\"token punctuation\">,</span> thumbnailOptions<span class=\"token punctuation\">,</span> coordinator<span class=\"token punctuation\">,</span> transitionOptions<span class=\"token punctuation\">,</span> <span class=\"token function\">getThumbnailPriority</span><span class=\"token punctuation\">(</span>priority<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> overrideWidth<span class=\"token punctuation\">,</span> overrideHeight<span class=\"token punctuation\">,</span> callbackExecutor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    coordinator<span class=\"token punctuation\">.</span><span class=\"token function\">setRequests</span><span class=\"token punctuation\">(</span>fullRequest<span class=\"token punctuation\">,</span> thumbnailRequest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> coordinator<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 基本情况：没有缩略图</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">obtainRequest</span><span class=\"token punctuation\">(</span>requestLock<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> targetListener<span class=\"token punctuation\">,</span> requestOptions<span class=\"token punctuation\">,</span> parentCoordinator<span class=\"token punctuation\">,</span> transitionOptions<span class=\"token punctuation\">,</span> priority<span class=\"token punctuation\">,</span> overrideWidth<span class=\"token punctuation\">,</span> overrideHeight<span class=\"token punctuation\">,</span> callbackExecutor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">Request</span> <span class=\"token function\">obtainRequest</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> requestLock<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Target</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TranscodeType</span><span class=\"token punctuation\">></span></span> target<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RequestListener</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TranscodeType</span><span class=\"token punctuation\">></span></span> targetListener<span class=\"token punctuation\">,</span> <span class=\"token class-name\">BaseRequestOptions</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> requestOptions<span class=\"token punctuation\">,</span> <span class=\"token class-name\">RequestCoordinator</span> requestCoordinator<span class=\"token punctuation\">,</span> <span class=\"token class-name\">TransitionOptions</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span> <span class=\"token keyword\">super</span> <span class=\"token class-name\">TranscodeType</span><span class=\"token punctuation\">></span></span> transitionOptions<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Priority</span> priority<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> overrideWidth<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> overrideHeight<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Executor</span> callbackExecutor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token class-name\">SingleRequest</span><span class=\"token punctuation\">.</span><span class=\"token function\">obtain</span><span class=\"token punctuation\">(</span>context<span class=\"token punctuation\">,</span> glideContext<span class=\"token punctuation\">,</span> requestLock<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">,</span> transcodeClass<span class=\"token punctuation\">,</span> requestOptions<span class=\"token punctuation\">,</span> overrideWidth<span class=\"token punctuation\">,</span> overrideHeight<span class=\"token punctuation\">,</span> priority<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">,</span> targetListener<span class=\"token punctuation\">,</span> requestListeners<span class=\"token punctuation\">,</span> requestCoordinator<span class=\"token punctuation\">,</span> glideContext<span class=\"token punctuation\">.</span><span class=\"token function\">getEngine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> transitionOptions<span class=\"token punctuation\">.</span><span class=\"token function\">getTransitionFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> callbackExecutor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"requestmanager.track()\">RequestManager.track()<a title=\"#requestmanager.track()\" href=\"#requestmanager.track()\"></a></h4>\n<p>这里Glide将判断请求是否需要显示，如果它需要现在显示则开始执行，否则clear( )，并将请求放入队列。这种设计更精巧，省电</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">synchronized</span> <span class=\"token keyword\">void</span> <span class=\"token function\">track</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Target</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> target<span class=\"token punctuation\">,</span> <span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Request</span> request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  \n  targetTracker<span class=\"token punctuation\">.</span><span class=\"token function\">track</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  requestTracker<span class=\"token punctuation\">.</span><span class=\"token function\">runRequest</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token punctuation\">&#125;</span>\n<span class=\"token comment\">/** 开始跟踪给定的请求 */</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">runRequest</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">Request</span> request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  requests<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isPaused<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 启动异步加载</span>\n    request<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 防止从以前的请求加载任何位图，释放此请求持有的任何资源，显示当前占位符（如果提供），并将请求标记为已取消</span>\n    request<span class=\"token punctuation\">.</span><span class=\"token function\">clear</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    pendingRequests<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>request<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"singlerequest.begin()\">SingleRequest.begin()<a title=\"#singlerequest.begin()\" href=\"#singlerequest.begin()\"></a></h4>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span>requestLock<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">assertNotCallingCallbacks</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    stateVerifier<span class=\"token punctuation\">.</span><span class=\"token function\">throwIfRecycled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    startTime <span class=\"token operator\">=</span> <span class=\"token class-name\">LogTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>model <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Util</span><span class=\"token punctuation\">.</span><span class=\"token function\">isValidDimensions</span><span class=\"token punctuation\">(</span>overrideWidth<span class=\"token punctuation\">,</span> overrideHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        width <span class=\"token operator\">=</span> overrideWidth<span class=\"token punctuation\">;</span>\n        height <span class=\"token operator\">=</span> overrideHeight<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token comment\">// 如果用户设置可回调的Drawables,这里进行日志反馈</span>\n      <span class=\"token keyword\">int</span> logLevel <span class=\"token operator\">=</span> <span class=\"token function\">getFallbackDrawable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span>WARN <span class=\"token operator\">:</span> <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span>DEBUG<span class=\"token punctuation\">;</span>\n      <span class=\"token function\">onLoadFailed</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">GlideException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Received null model\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> logLevel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">==</span> <span class=\"token class-name\">Status</span><span class=\"token punctuation\">.</span>RUNNING<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalArgumentException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Cannot restart a running request\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 如果我们在完成后重新启动(通常是通过notifyDataSetChanged之类的方式，向相同的目标或视图启动相同的请求)，我们可以简单地使用上次检索到的资源和大小，而跳过获取一个新的大小，开始一个新的加载等(这意味着希望重新启动加载的用户需要在开始新的加载之前显式地清除view或Target，因为他们觉得视图大小已经改变。)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">==</span> <span class=\"token class-name\">Status</span><span class=\"token punctuation\">.</span>COMPLETE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">onResourceReady</span><span class=\"token punctuation\">(</span>resource<span class=\"token punctuation\">,</span> <span class=\"token class-name\">DataSource</span><span class=\"token punctuation\">.</span>MEMORY_CACHE<span class=\"token punctuation\">,</span> <span class=\"token comment\">/* isLoadedFromAlternateCacheKey= */</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 对于既未完成也未运行的请求，重新启动可以被视为新请求，并可以从头开始运行</span>\n    cookie <span class=\"token operator\">=</span> <span class=\"token class-name\">GlideTrace</span><span class=\"token punctuation\">.</span><span class=\"token function\">beginSectionAsync</span><span class=\"token punctuation\">(</span>TAG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    status <span class=\"token operator\">=</span> <span class=\"token class-name\">Status</span><span class=\"token punctuation\">.</span>WAITING_FOR_SIZE<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 如果宽高已指定,则回调onSizeReady ,否则再获取宽高</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Util</span><span class=\"token punctuation\">.</span><span class=\"token function\">isValidDimensions</span><span class=\"token punctuation\">(</span>overrideWidth<span class=\"token punctuation\">,</span> overrideHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">onSizeReady</span><span class=\"token punctuation\">(</span>overrideWidth<span class=\"token punctuation\">,</span> overrideHeight<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      target<span class=\"token punctuation\">.</span><span class=\"token function\">getSize</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>status <span class=\"token operator\">==</span> <span class=\"token class-name\">Status</span><span class=\"token punctuation\">.</span>RUNNING <span class=\"token operator\">||</span> status <span class=\"token operator\">==</span> <span class=\"token class-name\">Status</span><span class=\"token punctuation\">.</span>WAITING_FOR_SIZE<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">canNotifyStatusChanged</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      target<span class=\"token punctuation\">.</span><span class=\"token function\">onLoadStarted</span><span class=\"token punctuation\">(</span><span class=\"token function\">getPlaceholderDrawable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<ul>\n<li>onLoadFailed : 图片或者资源为空,报错回调</li>\n<li>onResourceReady: 最终通过<code>Engine.release( )</code>,释放资源</li>\n<li>onSizeReady: View大小已明确 , 执行<code>Engine.load()</code>加载资源</li>\n<li>getSize: 获取View大小</li>\n<li>onLoadStarted: 等待或运行中,占位图处理</li>\n</ul>\n<h4 id=\"singlerequest.onsizeready(-)\">SingleRequest.onSizeReady( )<a title=\"#singlerequest.onsizeready(-)\" href=\"#singlerequest.onsizeready(-)\"></a></h4>\n<blockquote>\n<p>启动给定参数进行图片的加载, 必须在主线程上调用</p>\n</blockquote>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onSizeReady</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> height<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  stateVerifier<span class=\"token punctuation\">.</span><span class=\"token function\">throwIfRecycled</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span>requestLock<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>status <span class=\"token operator\">!=</span> <span class=\"token class-name\">Status</span><span class=\"token punctuation\">.</span>WAITING_FOR_SIZE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    status <span class=\"token operator\">=</span> <span class=\"token class-name\">Status</span><span class=\"token punctuation\">.</span>RUNNING<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">float</span> sizeMultiplier <span class=\"token operator\">=</span> requestOptions<span class=\"token punctuation\">.</span><span class=\"token function\">getSizeMultiplier</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>width <span class=\"token operator\">=</span> <span class=\"token function\">maybeApplySizeMultiplier</span><span class=\"token punctuation\">(</span>width<span class=\"token punctuation\">,</span> sizeMultiplier<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>height <span class=\"token operator\">=</span> <span class=\"token function\">maybeApplySizeMultiplier</span><span class=\"token punctuation\">(</span>height<span class=\"token punctuation\">,</span> sizeMultiplier<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    loadStatus <span class=\"token operator\">=</span> engine<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>glideContext<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">,</span> requestOptions<span class=\"token punctuation\">.</span><span class=\"token function\">getSignature</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>height<span class=\"token punctuation\">,</span> requestOptions<span class=\"token punctuation\">.</span><span class=\"token function\">getResourceClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> transcodeClass<span class=\"token punctuation\">,</span> priority<span class=\"token punctuation\">,</span> requestOptions<span class=\"token punctuation\">.</span><span class=\"token function\">getDiskCacheStrategy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> requestOptions<span class=\"token punctuation\">.</span><span class=\"token function\">getTransformations</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> requestOptions<span class=\"token punctuation\">.</span><span class=\"token function\">isTransformationRequired</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> requestOptions<span class=\"token punctuation\">.</span><span class=\"token function\">isScaleOnlyOrNoTransform</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> requestOptions<span class=\"token punctuation\">.</span><span class=\"token function\">getOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> requestOptions<span class=\"token punctuation\">.</span><span class=\"token function\">isMemoryCacheable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> requestOptions<span class=\"token punctuation\">.</span><span class=\"token function\">getUseUnlimitedSourceGeneratorsPool</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> requestOptions<span class=\"token punctuation\">.</span><span class=\"token function\">getUseAnimationPool</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> requestOptions<span class=\"token punctuation\">.</span><span class=\"token function\">getOnlyRetrieveFromCache</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> callbackExecutor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"engine.load(-)\">Engine.load( )<a title=\"#engine.load(-)\" href=\"#engine.load(-)\"></a></h4>\n<blockquote>\n<p>到这里想都不用想了,Engine才是真正加载图片的Class,<br>\nEngine负责执行图片加载和管理活动资源和缓存资源。</p>\n</blockquote>\n<p>活动资源是指那些至少提供一个请求但未释放的资源。一旦资源的所有使用者都释放了该资源，该资源就会进入缓存。如果资源从缓存中返回给新的使用者，它将被重新添加到活动资源中。<br>\n如果从缓存中移除资源，它的资源将被回收和重用(如果可能的话)，资源将被丢弃。没有严格要求消费者释放他们的资源，所以活跃的资源被弱持有。</p>\n<p>请求流程:</p>\n<ul>\n<li>检查当前使用的资源集，返回活动资源（如果存在），并将任何新的非活动资源移动到内存缓存中</li>\n<li>检查内存缓存并提供缓存资源（如果存在）</li>\n<li>检查当前的一组正在进行的加载并将 cb 添加到进行中的加载（如果存在）</li>\n<li>开始加载</li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">LoadStatus</span> <span class=\"token function\">load</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GlideContext</span> glideContext<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> model<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Key</span> signature<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> height<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> resourceClass<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">></span></span> transcodeClass<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Priority</span> priority<span class=\"token punctuation\">,</span> <span class=\"token class-name\">DiskCacheStrategy</span> diskCacheStrategy<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Transformation</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> transformations<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> isTransformationRequired<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> isScaleOnlyOrNoTransform<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Options</span> options<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> isMemoryCacheable<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> useUnlimitedSourceExecutorPool<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> useAnimationPool<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> onlyRetrieveFromCache<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ResourceCallback</span> cb<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Executor</span> callbackExecutor<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">long</span> startTime <span class=\"token operator\">=</span> VERBOSE_IS_LOGGABLE <span class=\"token operator\">?</span> <span class=\"token class-name\">LogTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">EngineKey</span> key <span class=\"token operator\">=</span> keyFactory<span class=\"token punctuation\">.</span><span class=\"token function\">buildKey</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">,</span> signature<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> transformations<span class=\"token punctuation\">,</span>resourceClass<span class=\"token punctuation\">,</span> transcodeClass<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">EngineResource</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> memoryResource<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">synchronized</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    memoryResource <span class=\"token operator\">=</span> <span class=\"token function\">loadFromMemory</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> isMemoryCacheable<span class=\"token punctuation\">,</span> startTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 判断是否有缓存,有则直接加载</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>memoryResource <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token function\">waitForExistingOrStartNewJob</span><span class=\"token punctuation\">(</span>glideContext<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">,</span> signature<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> resourceClass<span class=\"token punctuation\">,</span> transcodeClass<span class=\"token punctuation\">,</span> priority<span class=\"token punctuation\">,</span> diskCacheStrategy<span class=\"token punctuation\">,</span> transformations<span class=\"token punctuation\">,</span> isTransformationRequired<span class=\"token punctuation\">,</span> isScaleOnlyOrNoTransform<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">,</span> isMemoryCacheable<span class=\"token punctuation\">,</span> useUnlimitedSourceExecutorPool<span class=\"token punctuation\">,</span> useAnimationPool<span class=\"token punctuation\">,</span> onlyRetrieveFromCache<span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">,</span> callbackExecutor<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> startTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token comment\">// 避免在保持Engine锁时回调，因为这样做会更容易死锁</span>\n  cb<span class=\"token punctuation\">.</span><span class=\"token function\">onResourceReady</span><span class=\"token punctuation\">(</span>memoryResource<span class=\"token punctuation\">,</span> <span class=\"token class-name\">DataSource</span><span class=\"token punctuation\">.</span>MEMORY_CACHE<span class=\"token punctuation\">,</span> <span class=\"token comment\">/* isLoadedFromAlternateCacheKey= */</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"engine.waitforexistingorstartnewjob(-)\">Engine.waitForExistingOrStartNewJob( )<a title=\"#engine.waitforexistingorstartnewjob(-)\" href=\"#engine.waitforexistingorstartnewjob(-)\"></a></h4>\n<blockquote>\n<p>等待或者执行任务</p>\n</blockquote>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">LoadStatus</span> <span class=\"token function\">waitForExistingOrStartNewJob</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">GlideContext</span> glideContext<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> model<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Key</span> signature<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> width<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> height<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> resourceClass<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">></span></span> transcodeClass<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Priority</span> priority<span class=\"token punctuation\">,</span> <span class=\"token class-name\">DiskCacheStrategy</span> diskCacheStrategy<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Map</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Class</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Transformation</span><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">></span></span> transformations<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> isTransformationRequired<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> isScaleOnlyOrNoTransform<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Options</span> options<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> isMemoryCacheable<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> useUnlimitedSourceExecutorPool<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> useAnimationPool<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> onlyRetrieveFromCache<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ResourceCallback</span> cb<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Executor</span> callbackExecutor<span class=\"token punctuation\">,</span> <span class=\"token class-name\">EngineKey</span> key<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> startTime<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token class-name\">EngineJob</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> current <span class=\"token operator\">=</span> jobs<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> onlyRetrieveFromCache<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>current <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    current<span class=\"token punctuation\">.</span><span class=\"token function\">addCallback</span><span class=\"token punctuation\">(</span>cb<span class=\"token punctuation\">,</span> callbackExecutor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LoadStatus</span><span class=\"token punctuation\">(</span>cb<span class=\"token punctuation\">,</span> current<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token class-name\">EngineJob</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">></span></span> engineJob <span class=\"token operator\">=</span> engineJobFactory<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> isMemoryCacheable<span class=\"token punctuation\">,</span> useUnlimitedSourceExecutorPool<span class=\"token punctuation\">,</span> useAnimationPool<span class=\"token punctuation\">,</span> onlyRetrieveFromCache<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">DecodeJob</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">></span></span> decodeJob <span class=\"token operator\">=</span> decodeJobFactory<span class=\"token punctuation\">.</span><span class=\"token function\">build</span><span class=\"token punctuation\">(</span>glideContext<span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> signature<span class=\"token punctuation\">,</span> width<span class=\"token punctuation\">,</span> height<span class=\"token punctuation\">,</span> resourceClass<span class=\"token punctuation\">,</span> transcodeClass<span class=\"token punctuation\">,</span> priority<span class=\"token punctuation\">,</span> diskCacheStrategy<span class=\"token punctuation\">,</span> transformations<span class=\"token punctuation\">,</span> isTransformationRequired<span class=\"token punctuation\">,</span> isScaleOnlyOrNoTransform<span class=\"token punctuation\">,</span> onlyRetrieveFromCache<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">,</span> engineJob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  jobs<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> engineJob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  engineJob<span class=\"token punctuation\">.</span><span class=\"token function\">addCallback</span><span class=\"token punctuation\">(</span>cb<span class=\"token punctuation\">,</span> callbackExecutor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  engineJob<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span>decodeJob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>VERBOSE_IS_LOGGABLE<span class=\"token punctuation\">)</span>  <span class=\"token function\">logWithTimeAndKey</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Started new load\"</span><span class=\"token punctuation\">,</span> startTime<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LoadStatus</span><span class=\"token punctuation\">(</span>cb<span class=\"token punctuation\">,</span> engineJob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"decodejob\">DecodeJob<a title=\"#decodejob\" href=\"#decodejob\"></a></h4>\n<blockquote>\n<p>负责从缓存数据或原始源中解码资源并应用转换和转码的类</p>\n</blockquote>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Override</span>  \n<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isCancelled<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">notifyFailed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token function\">runWrapped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">runWrapped</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token comment\">// 为了判断运行原因,这里做了三个判断</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>runReason<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">case</span> INITIALIZE<span class=\"token operator\">:</span>\n      <span class=\"token comment\">// 获取当前解码数据的阶段</span>\n      stage <span class=\"token operator\">=</span> <span class=\"token function\">getNextStage</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Stage</span><span class=\"token punctuation\">.</span>INITIALIZE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 获取数据生成器</span>\n      currentGenerator <span class=\"token operator\">=</span> <span class=\"token function\">getNextGenerator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">runGenerators</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> SWITCH_TO_SOURCE_SERVICE<span class=\"token operator\">:</span>\n      <span class=\"token function\">runGenerators</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> DECODE_DATA<span class=\"token operator\">:</span>\n      <span class=\"token function\">decodeFromRetrievedData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalStateException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Unrecognized run reason: \"</span> <span class=\"token operator\">+</span> runReason<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"rungenerators(-)\">runGenerators( )<a title=\"#rungenerators(-)\" href=\"#rungenerators(-)\"></a></h5>\n<p>currentGenerator实现DataFetcherGenerator接口，这个接口主要用来生成一系列的modelLoader和model</p>\n<p>目前Glide有三种类生成器</p>\n<ul>\n<li>ResourceCacheGenerator</li>\n<li>DataCacheGenerator</li>\n<li>SourceGenerator</li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">runGenerators</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  currentThread <span class=\"token operator\">=</span> <span class=\"token class-name\">Thread</span><span class=\"token punctuation\">.</span><span class=\"token function\">currentThread</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  startFetchTime <span class=\"token operator\">=</span> <span class=\"token class-name\">LogTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">boolean</span> isStarted <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// startNext -> 尝试单个新的DataFetcher，如果DataFetcher已启动则返回true，否则返回false</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isCancelled <span class=\"token operator\">&amp;&amp;</span> currentGenerator <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>isStarted <span class=\"token operator\">=</span> currentGenerator<span class=\"token punctuation\">.</span><span class=\"token function\">startNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    stage <span class=\"token operator\">=</span> <span class=\"token function\">getNextStage</span><span class=\"token punctuation\">(</span>stage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    currentGenerator <span class=\"token operator\">=</span> <span class=\"token function\">getNextGenerator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>stage <span class=\"token operator\">==</span> <span class=\"token class-name\">Stage</span><span class=\"token punctuation\">.</span>SOURCE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">reschedule</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token comment\">// We've run out of stages and generators, give up.</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>stage <span class=\"token operator\">==</span> <span class=\"token class-name\">Stage</span><span class=\"token punctuation\">.</span>FINISHED <span class=\"token operator\">||</span> isCancelled<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>isStarted<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">notifyFailed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token keyword\">private</span> <span class=\"token class-name\">DataFetcherGenerator</span> <span class=\"token function\">getNextGenerator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>stage<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">case</span> RESOURCE_CACHE<span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ResourceCacheGenerator</span><span class=\"token punctuation\">(</span>decodeHelper<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> DATA_CACHE<span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataCacheGenerator</span><span class=\"token punctuation\">(</span>decodeHelper<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> SOURCE<span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SourceGenerator</span><span class=\"token punctuation\">(</span>decodeHelper<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">case</span> FINISHED<span class=\"token operator\">:</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n      <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">IllegalStateException</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Unrecognized stage: \"</span> <span class=\"token operator\">+</span> stage<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h6 id=\"sourcegenerator.startnext()\">SourceGenerator.startNext()<a title=\"#sourcegenerator.startnext()\" href=\"#sourcegenerator.startnext()\"></a></h6>\n<p>将首先判断，缓存如果它不是空的，调用 cacheData; 否则，获取 loadData，然后执行 startNextLoad ()</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">startNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>dataToCache <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">Object</span> data <span class=\"token operator\">=</span> dataToCache<span class=\"token punctuation\">;</span>\n    dataToCache <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">boolean</span> isDataInCache <span class=\"token operator\">=</span> <span class=\"token function\">cacheData</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 如果我们没有将数据写入缓存，cacheData方法将尝试直接解码原始数据，而不是通过磁盘缓存。因为此时cacheData已经调用了我们的回调函数，所以除了返回，没有其他事情可做了</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isDataInCache<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n      <span class=\"token comment\">// 如果我们能够成功地将数据写入缓存，那么现在需要继续调用下面的sourceCacheGenerator来从缓存加载数据</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">IOException</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token comment\">// IOException意味着我们无法将数据写入缓存，或者在磁盘缓存写入失败后无法倒带数据。无论哪种情况，我们都可以继续尝试下面的下一个取回</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">isLoggable</span><span class=\"token punctuation\">(</span>TAG<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span>DEBUG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">d</span><span class=\"token punctuation\">(</span>TAG<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Failed to properly rewind or write data to cache\"</span><span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>sourceCacheGenerator <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> sourceCacheGenerator<span class=\"token punctuation\">.</span><span class=\"token function\">startNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  sourceCacheGenerator <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n  loadData <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">boolean</span> started <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>started <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">hasNextModelLoader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    loadData <span class=\"token operator\">=</span> helper<span class=\"token punctuation\">.</span><span class=\"token function\">getLoadData</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>loadDataListIndex<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>loadData <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span>\n        <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>helper<span class=\"token punctuation\">.</span><span class=\"token function\">getDiskCacheStrategy</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">isDataCacheable</span><span class=\"token punctuation\">(</span>loadData<span class=\"token punctuation\">.</span>fetcher<span class=\"token punctuation\">.</span><span class=\"token function\">getDataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token operator\">||</span> helper<span class=\"token punctuation\">.</span><span class=\"token function\">hasLoadPath</span><span class=\"token punctuation\">(</span>loadData<span class=\"token punctuation\">.</span>fetcher<span class=\"token punctuation\">.</span><span class=\"token function\">getDataClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      started <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">startNextLoad</span><span class=\"token punctuation\">(</span>loadData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token keyword\">return</span> started<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h6 id=\"sourcegenerator.cachedata\">SourceGenerator.cacheData<a title=\"#sourcegenerator.cachedata\" href=\"#sourcegenerator.cachedata\"></a></h6>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * 如果我们能够缓存数据，应该尝试直接从缓存解码数据，如果我们不能缓存数据，应该尝试从源解码，则返回false\n */</span>\n<span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">cacheData</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> dataToCache<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">boolean</span> isLoadingFromSourceData <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">DataRewinder</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> rewinder <span class=\"token operator\">=</span> helper<span class=\"token punctuation\">.</span><span class=\"token function\">getRewinder</span><span class=\"token punctuation\">(</span>dataToCache<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Object</span> data <span class=\"token operator\">=</span> rewinder<span class=\"token punctuation\">.</span><span class=\"token function\">rewindAndGet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Encoder</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> encoder <span class=\"token operator\">=</span> helper<span class=\"token punctuation\">.</span><span class=\"token function\">getSourceEncoder</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">DataCacheWriter</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> writer <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataCacheWriter</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">(</span>encoder<span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">,</span> helper<span class=\"token punctuation\">.</span><span class=\"token function\">getOptions</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">DataCacheKey</span> newOriginalKey <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataCacheKey</span><span class=\"token punctuation\">(</span>loadData<span class=\"token punctuation\">.</span>sourceKey<span class=\"token punctuation\">,</span> helper<span class=\"token punctuation\">.</span><span class=\"token function\">getSignature</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">DiskCache</span> diskCache <span class=\"token operator\">=</span> helper<span class=\"token punctuation\">.</span><span class=\"token function\">getDiskCache</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    diskCache<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>newOriginalKey<span class=\"token punctuation\">,</span> writer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>diskCache<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>newOriginalKey<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      originalKey <span class=\"token operator\">=</span> newOriginalKey<span class=\"token punctuation\">;</span>\n      sourceCacheGenerator <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">DataCacheGenerator</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Collections</span><span class=\"token punctuation\">.</span><span class=\"token function\">singletonList</span><span class=\"token punctuation\">(</span>loadData<span class=\"token punctuation\">.</span>sourceKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> helper<span class=\"token punctuation\">,</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// 我们能够将数据写入缓存</span>\n      <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n      isLoadingFromSourceData <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n      cb<span class=\"token punctuation\">.</span><span class=\"token function\">onDataFetcherReady</span><span class=\"token punctuation\">(</span>loadData<span class=\"token punctuation\">.</span>sourceKey<span class=\"token punctuation\">,</span> rewinder<span class=\"token punctuation\">.</span><span class=\"token function\">rewindAndGet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> loadData<span class=\"token punctuation\">.</span>fetcher<span class=\"token punctuation\">,</span> loadData<span class=\"token punctuation\">.</span>fetcher<span class=\"token punctuation\">.</span><span class=\"token function\">getDataSource</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> loadData<span class=\"token punctuation\">.</span>sourceKey<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 写入数据到缓存失败的处理</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isLoadingFromSourceData<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      loadData<span class=\"token punctuation\">.</span>fetcher<span class=\"token punctuation\">.</span><span class=\"token function\">cleanup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h6 id=\"decodehelper.getsourceencoder()\">DecodeHelper.getSourceEncoder()<a title=\"#decodehelper.getsourceencoder()\" href=\"#decodehelper.getsourceencoder()\"></a></h6>\n<p>DecodeHelper.java</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">X</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">Encoder</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">X</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getSourceEncoder</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">X</span> data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Registry<span class=\"token punctuation\">.</span>NoSourceEncoderAvailableException</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">return</span> glideContext<span class=\"token punctuation\">.</span><span class=\"token function\">getRegistry</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getSourceEncoder</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span></span></code></pre>\n<p>Registry.java</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">X</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">Encoder</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">X</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">getSourceEncoder</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@NonNull</span> <span class=\"token class-name\">X</span> data<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">NoSourceEncoderAvailableException</span> <span class=\"token punctuation\">&#123;</span>  \n  <span class=\"token class-name\">Encoder</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">X</span><span class=\"token punctuation\">></span></span> encoder <span class=\"token operator\">=</span> encoderRegistry<span class=\"token punctuation\">.</span><span class=\"token function\">getEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">X</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>encoder <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>  \n    <span class=\"token keyword\">return</span> encoder<span class=\"token punctuation\">;</span>  \n  <span class=\"token punctuation\">&#125;</span>  \n  <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NoSourceEncoderAvailableException</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h6 id=\"register\">Register<a title=\"#register\" href=\"#register\"></a></h6>\n<blockquote>\n<p>每个数据类型对应一个编码器,Register就是用来记录这些的</p>\n</blockquote>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\">registry\n        <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ByteBuffer</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ByteBufferEncoder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">InputStream</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StreamEncoder</span><span class=\"token punctuation\">(</span>arrayPool<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Registry</span><span class=\"token punctuation\">.</span>BUCKET_BITMAP<span class=\"token punctuation\">,</span> <span class=\"token class-name\">ByteBuffer</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Bitmap</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> byteBufferBitmapDecoder<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Registry</span><span class=\"token punctuation\">.</span>BUCKET_BITMAP<span class=\"token punctuation\">,</span> <span class=\"token class-name\">InputStream</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Bitmap</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> streamBitmapDecoder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h5 id=\"decodefromretrieveddata()\">decodeFromRetrievedData()<a title=\"#decodefromretrieveddata()\" href=\"#decodefromretrieveddata()\"></a></h5>\n<blockquote>\n<p>处理返回的数据</p>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/10/26/5oU7rD.png\" alt=\"5oU7rD.png\" loading=\"lazy\" class=\"φbp\"></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">private</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Data</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">Resource</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">decodeFromData</span><span class=\"token punctuation\">(</span>\n    <span class=\"token class-name\">DataFetcher</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token operator\">?</span><span class=\"token punctuation\">></span></span> fetcher<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Data</span> data<span class=\"token punctuation\">,</span> <span class=\"token class-name\">DataSource</span> dataSource<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">GlideException</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">long</span> startTime <span class=\"token operator\">=</span> <span class=\"token class-name\">LogTime</span><span class=\"token punctuation\">.</span><span class=\"token function\">getLogTime</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token class-name\">Resource</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">></span></span> result <span class=\"token operator\">=</span> <span class=\"token function\">decodeFromFetcher</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> dataSource<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span><span class=\"token function\">isLoggable</span><span class=\"token punctuation\">(</span>TAG<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Log</span><span class=\"token punctuation\">.</span>VERBOSE<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n      <span class=\"token function\">logWithTimeAndKey</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Decoded result \"</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">,</span> startTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">finally</span> <span class=\"token punctuation\">&#123;</span>\n    fetcher<span class=\"token punctuation\">.</span><span class=\"token function\">cleanup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n\n<span class=\"token annotation punctuation\">@SuppressWarnings</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"unchecked\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">private</span> <span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Data</span><span class=\"token punctuation\">></span></span> <span class=\"token class-name\">Resource</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">decodeFromFetcher</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Data</span> data<span class=\"token punctuation\">,</span> <span class=\"token class-name\">DataSource</span> dataSource<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">throws</span> <span class=\"token class-name\">GlideException</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token class-name\">LoadPath</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Data</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">?</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">R</span><span class=\"token punctuation\">></span></span> path <span class=\"token operator\">=</span> decodeHelper<span class=\"token punctuation\">.</span><span class=\"token function\">getLoadPath</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Class</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Data</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">runLoadPath</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> dataSource<span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h4 id=\"enginejob\">EngineJob<a title=\"#enginejob\" href=\"#enginejob\"></a></h4>\n<blockquote>\n<p>通过添加和删除加载回调并在加载完成时通知回调来管理加载的类(管理加载过程中的一些回调)</p>\n</blockquote>\n<p>GlideExecutor是一个继承的Executorservice类，它显然是一个线程池。这里通过decodeJob来确定是否从缓存解析，如果是从缓存解析，调用diskCacheExecutor，否则，调用getActiveSourceExecutor</p>\n<ul>\n<li>willDecodeFromCache\n<ul>\n<li>如果此作业将尝试从磁盘缓存解码资源，则返回true</li>\n<li>如果始终从源解码，则返回false</li>\n</ul>\n</li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">synchronized</span> <span class=\"token keyword\">void</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">DecodeJob</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">R</span><span class=\"token punctuation\">></span></span> decodeJob<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n  <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>decodeJob <span class=\"token operator\">=</span> decodeJob<span class=\"token punctuation\">;</span>\n  <span class=\"token class-name\">GlideExecutor</span> executor <span class=\"token operator\">=</span> decodeJob<span class=\"token punctuation\">.</span><span class=\"token function\">willDecodeFromCache</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> diskCacheExecutor <span class=\"token operator\">:</span> <span class=\"token function\">getActiveSourceExecutor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 执行decodeJob线程任务</span>\n  executor<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>decodeJob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n","prev":{"title":"课程-登陆与授权","link":"2021/10/31/Qqq7oSBqBc2Zgbrx"},"next":{"title":"源码学习-OkHttp","link":"2021/10/31/4SVquTFcR8Wyv4GV"},"plink":"https://onion99.github.io/2021/10/31/15jfHwStpctgCeeA/","reward":true,"copyright":{"custom":"Copyright:自由转载-非商用-禁止演绎-保持署名（CC BY-NC-ND 4.0）"}}