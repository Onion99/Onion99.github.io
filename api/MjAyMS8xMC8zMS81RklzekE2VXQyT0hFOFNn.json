{"title":"安卓优化 - 布局优化","date":"2021-10-31T20:50:14.000Z","date_formatted":{"ll":"2021年10月31日","L":"2021/10/31","MM-DD":"10-31"},"link":"2021/10/31/5FIszA6Ut2OHE8Sg","comments":true,"tags":["性能优化"],"categories":["Android"],"updated":"2021-10-31T12:49:54.000Z","content":"<h3 id=\"布局耗时统计\">布局耗时统计<a title=\"#布局耗时统计\" href=\"#布局耗时统计\"></a></h3>\n<ul>\n<li>手动埋点</li>\n<li>AOP/ArtHook\n<ul>\n<li>切入Activity的setContentView</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"布局加载优化\">布局加载优化<a title=\"#布局加载优化\" href=\"#布局加载优化\"></a></h3>\n<ul>\n<li>代码写布局\n<ul>\n<li>Java代码写布局</li>\n<li>Anko</li>\n<li>JetpackCompose</li>\n</ul>\n</li>\n<li>X2C</li>\n<li>Litho</li>\n</ul>\n<span id=\"more\"></span>\n<h3 id=\"视图绘制优化\">视图绘制优化<a title=\"#视图绘制优化\" href=\"#视图绘制优化\"></a></h3>\n<ul>\n<li>优化布局层级以及嵌套\n<ul>\n<li>使用ConstraintLayout</li>\n</ul>\n</li>\n<li>避免过度绘制,自定义View避免多次调用 onDraw,onMeasure</li>\n<li>其他\n<ul>\n<li>ViewStub: 延迟初始化</li>\n<li>onDraw,onMeasure中避免创建大对象,耗时操作</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"include\">Include<a title=\"#include\" href=\"#include\"></a></h4>\n<blockquote>\n<p>提高布局复用性</p>\n</blockquote>\n<p>login.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">include</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">&quot;match_parent&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">&quot;40dp&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">layout</span>=<span class=\"string\">&quot;@layout/titlebar&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<p>include所在的layout的布局有给其设置id, 而include标签里面又给自己的根容器设置id,最好两个id都相同,否则findview时拿到空对象</p>\n<h4 id=\"merge\">Merge<a title=\"#merge\" href=\"#merge\"></a></h4>\n<blockquote>\n<p>帮助include标签排除多余的一层ViewGroup容器，减少view hierarchy的结构，提升UI渲染的性能</p>\n</blockquote>\n<p>titlebar.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">merge</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">&quot;http://schemas.android.com/apk/res/android&quot;</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">Button</span> </span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">&quot;match_parent&quot;</span>  </span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">&quot;wrap_content&quot;</span>  </span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_marginLeft</span>=<span class=\"string\">&quot;20dp&quot;</span>  </span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_marginRight</span>=<span class=\"string\">&quot;20dp&quot;</span>  </span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:text</span>=<span class=\"string\">&quot;标题&quot;</span> /&gt;</span>  </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">merge</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>因为merge标签并不是View,所以在通过LayoutInflate.inflate()方法渲染的时候,第二个参数必须指定一个父容器(parent),且第三个参数(attachToRoot)必须为true</li>\n<li>merge标签必须使用在根布局，并且ViewStub标签中的layout布局不能使用merge标签</li>\n</ul>\n<h4 id=\"viewstub\">ViewStub<a title=\"#viewstub\" href=\"#viewstub\"></a></h4>\n<blockquote>\n<p>延迟绘制View</p>\n</blockquote>\n<p>layout.xml</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ViewStub</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:id</span>=<span class=\"string\">&quot;@+id/viewstub&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">&quot;match_parent&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">&quot;wrap_content&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout</span>=<span class=\"string\">&quot;@layout/info&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure>\n<p>activity.java</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ViewStub stub = ((ViewStub) findViewById(R.id.viewstub));</span><br><span class=\"line\"><span class=\"keyword\">if</span>(stub!=<span class=\"keyword\">null</span>)&#123;</span><br><span class=\"line\">    View stubView = stub.inflate();</span><br><span class=\"line\">    EditText editText = (EditText) stubView.findViewById(R.id.edit_password);  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>ViewStub标签不支持merge标签</li>\n<li>ViewStub的inflate只能被调用一次,第二次调用会抛出异常</li>\n<li>虽然ViewStub是不占用任何空间的，但是每个布局都必须要指定layout_width和layout_height属性，否则运行就会报错</li>\n</ul>\n","prev":{"title":"源码学习 - OkHttp","link":"2021/10/31/4SVquTFcR8Wyv4GV"},"next":{"title":"安卓优化 - 线程优化","link":"2021/10/31/6JN9JxpnRSjVeWry"},"plink":"https://onion99.github.io/2021/10/31/5FIszA6Ut2OHE8Sg/","reward":true,"copyright":{"custom":"Copyright:自由转载-非商用-禁止演绎-保持署名（CC BY-NC-ND 4.0）"}}