{"title":"自定义View(9) - 事件分发","date":"2021-11-03T22:07:31.000Z","date_formatted":{"ll":"2021年11月3日","L":"2021/11/03","MM-DD":"11-03"},"link":"2021/11/03/z3aQsRLVolBbFVsl","comments":true,"tags":["图形绘制"],"categories":["Android"],"updated":"2021-11-03T14:03:54.000Z","content":"<blockquote>\n<p>事件分发的过程其实也就是事件传递过程。事件传递的顺序由Acticity传递到根View，这个根View 通常是一个ViewGroup(ViewGroup本身也是View的子类)，然后再传递给ViewGroup下的子View, 若事件在自上而下的传递过程中一直没有被消费，则事件会反向向上传递，此时父ViewGroup可以对事件进行消费，若仍然没有被消费的话，最后会回到Activity的onTouchEvent</p>\n</blockquote>\n<p>所以很多时候如果有冲突的话,最先消费的是最底部的子View<br>\n<img src=\"https://z3.ax1x.com/2021/11/03/IE3gqf.png\" alt=\"IE3gqf.png\" loading=\"lazy\"></p>\n<span id=\"more\"></span>\n<h3 id=\"事件分发method\">事件分发Method<a title=\"#事件分发method\" href=\"#事件分发method\"></a></h3>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th style=\"text-align:center\">方法</th>\n<th style=\"text-align:center\">作用</th>\n<th style=\"text-align:center\">调用时刻</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">dispatchTouchEvent()</td>\n<td style=\"text-align:center\">用来进行事件传递</td>\n<td style=\"text-align:center\">如果事件能够传递给当前 View，那么此方法一定会被调用</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">onInterceptTouchEvent()</td>\n<td style=\"text-align:center\">用来是否拦截事件</td>\n<td style=\"text-align:center\">如果当前 View 拦截了某个事件，那么在同一个事件序列当中，此方法不会被再次调用</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">onTouchEvent()</td>\n<td style=\"text-align:center\">处理事件</td>\n<td style=\"text-align:center\">在 dispatchTouchEvent()方法中调用</td>\n</tr>\n</tbody>\n</table></div></div><h3 id=\"事件分发顺序\">事件分发顺序<a title=\"#事件分发顺序\" href=\"#事件分发顺序\"></a></h3>\n<p>Activity&amp;Window</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">dispatchTouchEvent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MotionEvent</span> ev<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">.</span><span class=\"token function\">getAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token class-name\">MotionEvent</span><span class=\"token punctuation\">.</span>ACTION_DOWN<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token function\">onUserInteraction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 当事件没有被任何子View 消费时,即这里为false时,最终执行自己的nTouchEvent</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">getWindow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">superDispatchTouchEvent</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">onTouchEvent</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>DecorView(FrameLayout 的子类)</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">PhoneWindow</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Window</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">MenuBuilder<span class=\"token punctuation\">.</span>Callback</span> <span class=\"token punctuation\">&#123;</span>\n\t<span class=\"token annotation punctuation\">@Override</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">superDispatchTouchEvent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MotionEvent</span> event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t    <span class=\"token keyword\">return</span> mDecor<span class=\"token punctuation\">.</span><span class=\"token function\">superDispatchTouchEvent</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n \n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DecorView</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">FrameLayout</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">RootViewSurfaceTaker</span><span class=\"token punctuation\">&#123;</span>\n\t    <span class=\"token comment\">//FrameLayout 并没有重写dispatchTouchEvent方法，所以事件开始交由 ViewGroup 的 dispatchTouchEvent 开始分发了</span>\n\t    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">superDispatchTouchEvent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MotionEvent</span> event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n\t        <span class=\"token keyword\">return</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">dispatchTouchEvent</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t    <span class=\"token punctuation\">&#125;</span>\n\t<span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>ViewGroup</p>\n<ul>\n<li>判断事件是够需要被 ViewGroup 拦截</li>\n<li>遍历所有子View，逐个分发事件</li>\n<li>将事件交给ViewGroup自己或者目标子View处理</li>\n</ul>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Override</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">dispatchTouchEvent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MotionEvent</span> ev<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n \n    <span class=\"token keyword\">boolean</span> handled <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">onFilterTouchEventForSecurity</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> action <span class=\"token operator\">=</span> ev<span class=\"token punctuation\">.</span><span class=\"token function\">getAction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n        <span class=\"token comment\">// 先检验事件是否需要被ViewGroup拦截</span>\n        <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> intercepted<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>actionMasked <span class=\"token operator\">==</span> <span class=\"token class-name\">MotionEvent</span><span class=\"token punctuation\">.</span>ACTION_DOWN <span class=\"token operator\">||</span> mFirstTouchTarget <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// 校验是否给mGroupFlags设置了FLAG_DISALLOW_INTERCEPT标志位</span>\n            <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> disallowIntercept <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>mGroupFlags <span class=\"token operator\">&amp;</span> FLAG_DISALLOW_INTERCEPT<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>disallowIntercept<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">// 走onInterceptTouchEvent判断是否拦截事件</span>\n                intercepted <span class=\"token operator\">=</span> <span class=\"token function\">onInterceptTouchEvent</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                intercepted <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            intercepted <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    \n        <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> split <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>mGroupFlags <span class=\"token operator\">&amp;</span> FLAG_SPLIT_MOTION_EVENTS<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>canceled <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span>intercepted<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// 注意ACTION_DOWN等事件才会走遍历所有子View的流程</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>actionMasked <span class=\"token operator\">==</span> <span class=\"token class-name\">MotionEvent</span><span class=\"token punctuation\">.</span>ACTION_DOWN\n                    <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span>split <span class=\"token operator\">&amp;&amp;</span> actionMasked <span class=\"token operator\">==</span> <span class=\"token class-name\">MotionEvent</span><span class=\"token punctuation\">.</span>ACTION_POINTER_DOWN<span class=\"token punctuation\">)</span>\n                    <span class=\"token operator\">||</span> actionMasked <span class=\"token operator\">==</span> <span class=\"token class-name\">MotionEvent</span><span class=\"token punctuation\">.</span>ACTION_HOVER_MOVE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            \n                <span class=\"token comment\">// 开始遍历所有子View开始逐个分发事件</span>\n                <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> childrenCount <span class=\"token operator\">=</span> mChildrenCount<span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>childrenCount <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> childrenCount <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        <span class=\"token comment\">// 判断触摸点是否在这个View的内部</span>\n                        <span class=\"token keyword\">final</span> <span class=\"token class-name\">View</span> child <span class=\"token operator\">=</span> children<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token function\">canViewReceivePointerEvents</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span>\n                                <span class=\"token operator\">||</span> <span class=\"token operator\">!</span><span class=\"token function\">isTransformedTouchPointInView</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> child<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                            <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">&#125;</span>\n                    \n                        <span class=\"token comment\">// 事件被子View消费，退出循环，不再继续分发给其他子View</span>\n                        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">dispatchTransformedTouchEvent</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> child<span class=\"token punctuation\">,</span> idBitsToAssign<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        \n                            <span class=\"token comment\">// addTouchTarget内部将mFirstTouchTarget设置为child，即不为null</span>\n                            newTouchTarget <span class=\"token operator\">=</span> <span class=\"token function\">addTouchTarget</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">,</span> idBitsToAssign<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                            alreadyDispatchedToNewTouchTarget <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n                        <span class=\"token punctuation\">&#125;</span>\n                    <span class=\"token punctuation\">&#125;</span>\n                <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">// 事件未被任何子View消费，自己处理</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mFirstTouchTarget <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// No touch targets so treat this as an ordinary view.</span>\n            handled <span class=\"token operator\">=</span> <span class=\"token function\">dispatchTransformedTouchEvent</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">,</span> canceled<span class=\"token punctuation\">,</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span>\n                    <span class=\"token class-name\">TouchTarget</span><span class=\"token punctuation\">.</span>ALL_POINTER_IDS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token comment\">// 将MotionEvent.ACTION_DOWN后续事件分发给mFirstTouchTarget指向的View</span>\n            <span class=\"token class-name\">TouchTarget</span> predecessor <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">TouchTarget</span> target <span class=\"token operator\">=</span> mFirstTouchTarget<span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>target <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">final</span> <span class=\"token class-name\">TouchTarget</span> next <span class=\"token operator\">=</span> target<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span>\n                <span class=\"token comment\">// 如果已经在上面的遍历过程中传递过事件，跳过本次传递</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>alreadyDispatchedToNewTouchTarget <span class=\"token operator\">&amp;&amp;</span> target <span class=\"token operator\">==</span> newTouchTarget<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                    handled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n                    <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> cancelChild <span class=\"token operator\">=</span> <span class=\"token function\">resetCancelNextUpFlag</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span>child<span class=\"token punctuation\">)</span>\n                            <span class=\"token operator\">||</span> intercepted<span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">dispatchTransformedTouchEvent</span><span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">,</span> cancelChild<span class=\"token punctuation\">,</span>\n                            target<span class=\"token punctuation\">.</span>child<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">.</span>pointerIdBits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                        handled <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token punctuation\">&#125;</span>\n                \n                <span class=\"token punctuation\">&#125;</span>\n                predecessor <span class=\"token operator\">=</span> target<span class=\"token punctuation\">;</span>\n                target <span class=\"token operator\">=</span> next<span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">// Update list of touch targets for pointer up or cancel, if needed.</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>canceled\n                <span class=\"token operator\">||</span> actionMasked <span class=\"token operator\">==</span> <span class=\"token class-name\">MotionEvent</span><span class=\"token punctuation\">.</span>ACTION_UP\n                <span class=\"token operator\">||</span> actionMasked <span class=\"token operator\">==</span> <span class=\"token class-name\">MotionEvent</span><span class=\"token punctuation\">.</span>ACTION_HOVER_MOVE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token function\">resetTouchState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>split <span class=\"token operator\">&amp;&amp;</span> actionMasked <span class=\"token operator\">==</span> <span class=\"token class-name\">MotionEvent</span><span class=\"token punctuation\">.</span>ACTION_POINTER_UP<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> actionIndex <span class=\"token operator\">=</span> ev<span class=\"token punctuation\">.</span><span class=\"token function\">getActionIndex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> idBitsToRemove <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> ev<span class=\"token punctuation\">.</span><span class=\"token function\">getPointerId</span><span class=\"token punctuation\">(</span>actionIndex<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token function\">removePointersFromTouchTargets</span><span class=\"token punctuation\">(</span>idBitsToRemove<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> handled<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n \n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">resetTouchState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">clearTouchTargets</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">resetCancelNextUpFlag</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    mGroupFlags <span class=\"token operator\">&amp;=</span> <span class=\"token operator\">~</span>FLAG_DISALLOW_INTERCEPT<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n \n<span class=\"token keyword\">private</span> <span class=\"token keyword\">void</span> <span class=\"token function\">clearTouchTargets</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">TouchTarget</span> target <span class=\"token operator\">=</span> mFirstTouchTarget<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>target <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">do</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">TouchTarget</span> next <span class=\"token operator\">=</span> target<span class=\"token punctuation\">.</span>next<span class=\"token punctuation\">;</span>\n            target<span class=\"token punctuation\">.</span><span class=\"token function\">recycle</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            target <span class=\"token operator\">=</span> next<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>target <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        mFirstTouchTarget <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n \n<span class=\"token keyword\">private</span> <span class=\"token class-name\">TouchTarget</span> <span class=\"token function\">addTouchTarget</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">View</span> child<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> pointerIdBits<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token class-name\">TouchTarget</span> target <span class=\"token operator\">=</span> <span class=\"token class-name\">TouchTarget</span><span class=\"token punctuation\">.</span><span class=\"token function\">obtain</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">,</span> pointerIdBits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    target<span class=\"token punctuation\">.</span>next <span class=\"token operator\">=</span> mFirstTouchTarget<span class=\"token punctuation\">;</span>\n    mFirstTouchTarget <span class=\"token operator\">=</span> target<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> target<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n \n<span class=\"token keyword\">private</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">dispatchTransformedTouchEvent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MotionEvent</span> event<span class=\"token punctuation\">,</span> <span class=\"token keyword\">boolean</span> cancel<span class=\"token punctuation\">,</span>\n                                              <span class=\"token class-name\">View</span> child<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> desiredPointerIdBits<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> handled<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 注意传参child为null时，调用的是自己的dispatchTouchEvent</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>child <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        handled <span class=\"token operator\">=</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">dispatchTouchEvent</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span>\n        handled <span class=\"token operator\">=</span> child<span class=\"token punctuation\">.</span><span class=\"token function\">dispatchTouchEvent</span><span class=\"token punctuation\">(</span>transformedEvent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token keyword\">return</span> handled<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span>\n \n<span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">onInterceptTouchEvent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MotionEvent</span> ev<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token comment\">// 默认不拦截事件</span>\n    <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>View:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">dispatchTouchEvent</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MotionEvent</span> event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">onFilterTouchEventForSecurity</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        \t<span class=\"token comment\">// 判断事件是否先交给ouTouch方法处理</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mOnTouchListener <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span>mViewFlags <span class=\"token operator\">&amp;</span> ENABLED_MASK<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> ENABLED <span class=\"token operator\">&amp;&amp;</span>\n                    mOnTouchListener<span class=\"token punctuation\">.</span><span class=\"token function\">onTouch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token comment\">// onTouch未消费事件，传给onTouchEvent</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">onTouchEvent</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"综上\">综上<a title=\"#综上\" href=\"#综上\"></a></h3>\n<ul>\n<li>View 事件分发的本质是递归。</li>\n<li>递归的本质是，任务的下发和结果的上报。</li>\n<li>View 事件分发设计成递归，是为了配合 View 的排版规则，形成符合用户直觉的触控体验。</li>\n<li>View 事件分发的对象是一个 MotionEvent。</li>\n<li>一次用户触控操作包含多个 MotionEvent（例如从 ACTION_DOWN 到 ACTION_UP ），也即会走多次事件分发流程。</li>\n<li>一次 View 事件分发流程包含 “递” 流程和 “归” 流程，“递” 流程可以因 ViewGroup 的拦截而提前步入 “归” 流程。</li>\n<li>child 可以通过 getParent.requestDisallowInterceptTouchEvent 阻止父容器的拦截。因而需要差异化地配置阈值，来确保 child 执行 getParent.requestDisallowInterceptTouchEvent 优先于父容器 onInterceptTouchEvent 返回 true（不然都先被拦截了，child 哪有机会阻止？）</li>\n<li>在“归”流程中，唯有当前层级的 super.dispatchTouchEvent 返回了 true，才认定被消费，被消费前，下级都有干活，只是结果不 OK。被消费后，上级都不需要干活，直接向上传达消费者的功。</li>\n</ul>\n<h3 id=\"事件冲突解决\">事件冲突解决<a title=\"#事件冲突解决\" href=\"#事件冲突解决\"></a></h3>\n<ul>\n<li>从父View着手, 重写onInterceptTouchEvent方法，在父View需要拦截的时候拦截，不要的时候返回false</li>\n<li>从子View着手, 重写子 View的dispatchTouchEvent方法，在Action_down 动作中通过方法 requestDisallowInterceptTouchEvent（true） 先请求 父 View不要拦截事件，这样保证子 View 能够接受到 Action_move 事件，再在 Action_move 动作中根据自己的逻辑是否要拦截事件，不需要拦截事件的话再交给 父 View 处理</li>\n</ul>\n<h3 id=\"refer\">Refer<a title=\"#refer\" href=\"#refer\"></a></h3>\n<p><a href=\"https://juejin.cn/post/6844903894103883789\" target=\"_blank\">学习 View 事件分发，就像外地人上了黑车！ - 掘金 (juejin.cn)</a><br>\n<a href=\"https://juejin.cn/post/6965649194744807461\" target=\"_blank\">View 事件分发机制，看这一篇就够了 - 掘金 (juejin.cn)</a><br>\n<a href=\"https://blog.csdn.net/u010289802/article/details/86169939\" target=\"_blank\">Android 手把手进阶自定义View（十）- 事件分发机制解析_lerendan的博客-CSDN博客</a></p>\n","prev":{"title":"自定义View(10) - GestureDetector","link":"2021/11/03/dY7a31QepeVitGkX"},"next":{"title":"自定义View(8) - draw 绘制过程","link":"2021/11/03/p4CRfuQemJ4TOlAs"},"plink":"https://onion99.github.io/2021/11/03/z3aQsRLVolBbFVsl/","reward":true,"copyright":{"custom":"Copyright:自由转载-非商用-禁止演绎-保持署名（CC BY-NC-ND 4.0）"}}