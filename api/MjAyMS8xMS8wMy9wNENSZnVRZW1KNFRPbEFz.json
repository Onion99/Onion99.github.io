{"title":"自定义View(8) - draw 绘制过程","date":"2021-11-03T22:03:38.000Z","date_formatted":{"ll":"2021年11月3日","L":"2021/11/03","MM-DD":"11-03"},"link":"2021/11/03/p4CRfuQemJ4TOlAs","comments":true,"tags":["图形绘制"],"categories":["Android"],"updated":"2021-11-03T14:03:06.000Z","content":"<blockquote>\n<p>Android 里面的绘制都是按顺序的，先绘制的内容会被后绘制的盖住</p>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/11/03/IES7KP.png\" alt=\"IES7KP.png\" loading=\"lazy\" class=\"φbp\"></p>\n<span id=\"more\"></span>\n<h3 id=\"draw-过程解析\">draw 过程解析<a title=\"#draw-过程解析\" href=\"#draw-过程解析\"></a></h3>\n<p>一个完整的绘制过程会依次绘制以下几个内容：<br>\n<img src=\"https://z3.ax1x.com/2021/11/03/IEp3Ie.png\" alt=\"IEp3Ie.png\" loading=\"lazy\"></p>\n<ul>\n<li><code>drawBackground()</code>绘制背景\n<ul>\n<li>这个方法是 private 的，不能重写，你如果要设置背景，只能用自带的 API 去设置</li>\n</ul>\n</li>\n<li><code>onDraw()</code>绘制主体\n<ul>\n<li>这个方法在 View 和 ViewGroup 里都是空实现，因此自定义时需要复写</li>\n</ul>\n</li>\n<li><code>dispatchDraw()</code>绘制子 View\n<ul>\n<li>在于单一 View 中无子 View，故在 View 中此方法默认为空实</li>\n<li>在 ViewGroup中系统已经复写好此方法对其子视图进行绘制因此我们不需要复写</li>\n</ul>\n</li>\n<li><code>onDrawForeground()</code>滑动边缘渐变和滑动条以及前景</li>\n</ul>\n<p>ViewGroup中的<code>dispatchDraw()</code>:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">dispatchDraw</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Canvas</span> canvas<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token keyword\">boolean</span> usingRenderNodeProperties <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">isRecordingFor</span><span class=\"token punctuation\">(</span>mRenderNode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> childrenCount <span class=\"token operator\">=</span> mChildrenCount<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">final</span> <span class=\"token class-name\">View</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> children <span class=\"token operator\">=</span> mChildren<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">int</span> flags <span class=\"token operator\">=</span> mGroupFlags<span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// 动画处理</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>flags <span class=\"token operator\">&amp;</span> FLAG_RUN_ANIMATION<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">canAnimate</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> buildCache <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token function\">isHardwareAccelerated</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> childrenCount<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">final</span> <span class=\"token class-name\">View</span> child <span class=\"token operator\">=</span> children<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">.</span>mViewFlags <span class=\"token operator\">&amp;</span> VISIBILITY_MASK<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> VISIBLE<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token keyword\">final</span> <span class=\"token class-name\">LayoutParams</span> params <span class=\"token operator\">=</span> child<span class=\"token punctuation\">.</span><span class=\"token function\">getLayoutParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">attachLayoutAnimationParameters</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">,</span> params<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> childrenCount<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token function\">bindLayoutAnimation</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token punctuation\">&#125;</span>\n        <span class=\"token comment\">// xxx</span>\n        controller<span class=\"token punctuation\">.</span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token comment\">// 间距处理</span>\n    <span class=\"token keyword\">int</span> clipSaveCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">final</span> <span class=\"token keyword\">boolean</span> clipToPadding <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>flags <span class=\"token operator\">&amp;</span> CLIP_TO_PADDING_MASK<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> CLIP_TO_PADDING_MASK<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>clipToPadding<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        clipSaveCount <span class=\"token operator\">=</span> canvas<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Canvas</span><span class=\"token punctuation\">.</span>CLIP_SAVE_FLAG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        canvas<span class=\"token punctuation\">.</span><span class=\"token function\">clipRect</span><span class=\"token punctuation\">(</span>mScrollX <span class=\"token operator\">+</span> mPaddingLeft<span class=\"token punctuation\">,</span> mScrollY <span class=\"token operator\">+</span> mPaddingTop<span class=\"token punctuation\">,</span>\n                mScrollX <span class=\"token operator\">+</span> mRight <span class=\"token operator\">-</span> mLeft <span class=\"token operator\">-</span> mPaddingRight<span class=\"token punctuation\">,</span>\n                mScrollY <span class=\"token operator\">+</span> mBottom <span class=\"token operator\">-</span> mTop <span class=\"token operator\">-</span> mPaddingBottom<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n\n    <span class=\"token comment\">// 遍历子View</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> childrenCount<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>transientChild<span class=\"token punctuation\">.</span>mViewFlags <span class=\"token operator\">&amp;</span> VISIBILITY_MASK<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> VISIBLE <span class=\"token operator\">||</span>transientChild<span class=\"token punctuation\">.</span><span class=\"token function\">getAnimation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                <span class=\"token comment\">// 2. 绘制子View视图    </span>\n                more <span class=\"token operator\">|=</span> <span class=\"token function\">drawChild</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">,</span> transientChild<span class=\"token punctuation\">,</span> drawingTime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span>\n<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<h3 id=\"draw顺序\">draw顺序<a title=\"#draw顺序\" href=\"#draw顺序\"></a></h3>\n<h4 id=\"ondraw()\">onDraw()<a title=\"#ondraw()\" href=\"#ondraw()\"></a></h4>\n<blockquote>\n<p>自定义绘制最基本的形态：继承 View 类，在 onDraw() 中完全自定义它的绘制</p>\n</blockquote>\n<p>定义 View 时，绘制代码写在 super.onDraw() 的上面还是下面都无所谓,但基于已有控件的自定义绘制，就不能不考虑 <code>super.onDraw()</code> 了，你需要根据自己的需求，判断出你绘制的内容需要盖住控件原有的内容还是需要被控件原有的内容盖住，从而确定你的绘制代码是应该写在 super.onDraw() 的上面还是下面。</p>\n<div class=\"φbq\"><div class=\"φbs\"><table><thead>\n<tr>\n<th style=\"text-align:center\">上面</th>\n<th style=\"text-align:center\">下面</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><img src=\"https://z3.ax1x.com/2021/11/03/IEFrgH.png\" alt=\"IEFrgH.png\" loading=\"lazy\"></td>\n<td style=\"text-align:center\"><img src=\"https://z3.ax1x.com/2021/11/03/IEFHrn.png\" alt=\"IEFHrn.png\" loading=\"lazy\"></td>\n</tr>\n</tbody>\n</table></div></div><h4 id=\"dispatchdraw()\">dispatchDraw()<a title=\"#dispatchdraw()\" href=\"#dispatchdraw()\"></a></h4>\n<blockquote>\n<p>如果想在一个ViewGroup中按上面的做法在下面添加绘制内容则是不行的,因为在绘制过程中每一个 ViewGroup 会先调用自己的 onDraw() 来绘制完自己的主体之后再去绘制它的子 View,会覆盖其主体</p>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/11/03/IEEpH1.png\" alt=\"IEEpH1.png\" loading=\"lazy\" class=\"φbp\"></p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">SpottedLinearLayout</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">LinearLayout</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token comment\">// 把 onDraw() 换成了 dispatchDraw()</span>\n    <span class=\"token keyword\">protected</span> <span class=\"token keyword\">void</span> <span class=\"token function\">dispatchDraw</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Canvas</span> canvas<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">dispatchDraw</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token comment\">// 绘制斑点</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p>虽然 View 和 ViewGroup 都有 dispatchDraw() 方法，不过由于 View 是没有子 View 的，所以一般来说 dispatchDraw() 这个方法只对 ViewGroup（以及它的子类）有意义。</p>\n<h4 id=\"ondrawforeground()\">onDrawForeground()<a title=\"#ondrawforeground()\" href=\"#ondrawforeground()\"></a></h4>\n<blockquote>\n<p>前景前后处理</p>\n</blockquote>\n<p>在 super.onDrawForeground() 的上面</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppImageView</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ImageView</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onDrawForeground</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Canvas</span> canvas<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token comment\">// 绘制「New」标签</span>\n       <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onDrawForeground</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://z3.ax1x.com/2021/11/03/IEVgSS.png\" alt=\"IEVgSS.png\" loading=\"lazy\" class=\"φbp\"></p>\n<p>在 super.onDrawForeground() 的下面:</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">AppImageView</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">ImageView</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">onDrawForeground</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Canvas</span> canvas<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n       <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">onDrawForeground</span><span class=\"token punctuation\">(</span>canvas<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token comment\">// 绘制「New」标签</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n<p><img src=\"https://z3.ax1x.com/2021/11/03/IEZV0A.png\" alt=\"IEZV0A.png\" loading=\"lazy\" class=\"φbp\"></p>\n<h4 id=\"draw()\">draw()<a title=\"#draw()\" href=\"#draw()\"></a></h4>\n<h3 id=\"总结\">总结<a title=\"#总结\" href=\"#总结\"></a></h3>\n<p><img src=\"https://z3.ax1x.com/2021/11/03/IEZ1XQ.png\" alt=\"IEZ1XQ.png\" loading=\"lazy\" class=\"φbp\"></p>\n","prev":{"title":"自定义View(9) - 事件分发","link":"2021/11/03/z3aQsRLVolBbFVsl"},"next":{"title":"自定义View(7) - layout 布局过程","link":"2021/11/03/ZyOr4iLxJj7nAQxR"},"plink":"https://onion99.github.io/2021/11/03/p4CRfuQemJ4TOlAs/","reward":true,"copyright":{"custom":"Copyright:自由转载-非商用-禁止演绎-保持署名（CC BY-NC-ND 4.0）"}}