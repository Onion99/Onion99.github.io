{"per_page":9,"total":4,"current":4,"data":[{"title":"安卓优化-线程优化","date":"2021-10-31T20:48:51.000Z","date_formatted":{"ll":"2021年10月31日","L":"2021/10/31","MM-DD":"10-31"},"excerpt":"<h3 id=\"线程调度\">线程调度<a title=\"#线程调度\" href=\"#线程调度\"></a></h3>\n<blockquote>\n<p>任意时刻，只有一个线程占用CPU，处于运行状态</p>\n</blockquote>\n<p>多线程并发：轮流获取cpu使用权<br>\nJVM负责线程调度：按照特定调度模型分配CPU使用权</p>\n<h4 id=\"调度模型\">调度模型<a title=\"#调度模型\" href=\"#调度模型\"></a></h4>\n<ul>\n<li>分时调度模型: 轮流获取,均匀分配cpu时间</li>\n<li>抢占式调度模型:  按照优先级来</li>\n</ul>","link":"2021/10/31/6JN9JxpnRSjVeWry","tags":["性能优化"],"categories":["Android"]},{"title":"安卓优化-包体积","date":"2021-10-31T20:48:08.000Z","date_formatted":{"ll":"2021年10月31日","L":"2021/10/31","MM-DD":"10-31"},"excerpt":"","link":"2021/10/31/9LsQhIFgDkllFt0Q","tags":["性能优化"],"categories":["Android"]},{"title":"安卓优化-卡顿优化","date":"2021-10-31T20:47:12.000Z","date_formatted":{"ll":"2021年10月31日","L":"2021/10/31","MM-DD":"10-31"},"excerpt":"<blockquote>\n<p>卡顿产生的根本原因就是CPU和GPU没有及时处理好数据，针对卡顿的优化就有思路了：尽可能减少 CPU 和 GPU 资源的消耗</p>\n</blockquote>\n<ul>\n<li>CPU：中央处理器（CPU，central processing unit）作为计算机系统的运算和控制核心，是信息处理、程序运行的最终执行单元</li>\n<li>GPU：图形处理器（英语：Graphics Processing Unit，缩写：GPU），又称显示核心,做图像和图形相关运算工作的微处理器</li>\n</ul>\n<h3 id=\"卡顿检测\">卡顿检测<a title=\"#卡顿检测\" href=\"#卡顿检测\"></a></h3>\n<p><a href=\"https://blog.csdn.net/lmj623565791/article/details/58626355\" target=\"_blank\">Android UI性能优化 检测应用中的UI卡顿</a></p>\n<p><a href=\"https://www.jianshu.com/p/9e8f88eac490\" target=\"_blank\">Android性能优化-检测App卡顿 - 简书 (jianshu.com)</a></p>","link":"2021/10/31/UYa5EEntsM9sKTYz","tags":["性能优化"],"categories":["Android"]},{"title":"安卓优化-内存优化","date":"2021-10-31T20:46:21.000Z","date_formatted":{"ll":"2021年10月31日","L":"2021/10/31","MM-DD":"10-31"},"excerpt":"<h3 id=\"内存信息查看\">内存信息查看<a title=\"#内存信息查看\" href=\"#内存信息查看\"></a></h3>\n<p><a href=\"https://www.jianshu.com/p/28b9cd87e667\" target=\"_blank\">App内存优化实践：一步一步做内存分析与优化</a></p>\n<p>查看每个App进程可以分配到的最大内存</p>\n<pre class=\"line-numbers language-undefined\" data-language=\"undefined\"><code class=\"language-undefined\">adb shell getprop | grep dalvik.vm.heapsize<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>App的内存使用情况概览</p>\n<pre class=\"line-numbers language-undefined\" data-language=\"undefined\"><code class=\"language-undefined\">adb shell dumpsys meminfo 包名<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h3 id=\"优化工具\">优化工具<a title=\"#优化工具\" href=\"#优化工具\"></a></h3>\n<ul>\n<li>CPU Profiler</li>\n<li>Memory Analyzer（MAT）</li>\n<li>LeakCannary</li>\n</ul>","link":"2021/10/31/T8ghe13OAeLx6NBP","tags":["性能优化"],"categories":["Android"]},{"title":"安卓优化-启动优化","date":"2021-10-31T20:43:04.000Z","date_formatted":{"ll":"2021年10月31日","L":"2021/10/31","MM-DD":"10-31"},"excerpt":"<h3 id=\"启动流程\">启动流程<a title=\"#启动流程\" href=\"#启动流程\"></a></h3>\n<h4 id=\"相关\">相关<a title=\"#相关\" href=\"#相关\"></a></h4>\n<blockquote>\n<p>启动的流程就是通过这六个大类在这三个进程之间不断通信的过程</p>\n</blockquote>\n<h5 id=\"三个进程\">三个进程<a title=\"#三个进程\" href=\"#三个进程\"></a></h5>\n<ul>\n<li>Launcher进程: 整个App启动流程的起点,负责处理桌面与用户之间的交互事件,可以想象为一个桌面启动器</li>\n<li>SystemServer进程: Android中的所有SystemServer都由其孵化(Fork)出来,例如AMS,WindowsMannager,PackageManagerService等</li>\n<li>App进程: 启动的App所在的进程</li>\n</ul>","link":"2021/10/31/4LlbPfdOOCp58LMK","tags":["性能优化"],"categories":["Android"]}]}