{"title":"自定义View(3) - Text相关","date":"2021-11-03T21:57:48.000Z","date_formatted":{"ll":"2021年11月3日","L":"2021/11/03","MM-DD":"11-03"},"link":"2021/11/03/VjI1fQxy8MSFqUqm","comments":true,"tags":["图形绘制"],"categories":["Android"],"updated":"2021-11-03T13:57:07.000Z","content":"<h3 id=\"文字绘制(canvas)\">文字绘制(Canvas)<a title=\"#文字绘制(canvas)\" href=\"#文字绘制(canvas)\"></a></h3>\n<h4 id=\"绘制方式\">绘制方式<a title=\"#绘制方式\" href=\"#绘制方式\"></a></h4>\n<h5 id=\"drawtext\">drawText<a title=\"#drawtext\" href=\"#drawtext\"></a></h5>\n<p><img src=\"https://z3.ax1x.com/2021/11/02/IiheJA.png\" alt=\"IiheJA.png\" loading=\"lazy\" class=\"φbp\"></p>\n<span id=\"more\"></span>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String text = <span class=\"string\">&quot;Hello HenCoder&quot;</span>;</span><br><span class=\"line\">...</span><br><span class=\"line\">canvas.drawText(text, <span class=\"number\">200</span>, <span class=\"number\">100</span>, paint);</span><br></pre></td></tr></table></figure>\n<h5 id=\"drawtextrun\">drawTextRun<a title=\"#drawtextrun\" href=\"#drawtextrun\"></a></h5>\n<h5 id=\"drawtextonpath\">drawTextOnPath<a title=\"#drawtextonpath\" href=\"#drawtextonpath\"></a></h5>\n<blockquote>\n<p>沿着一条 Path 来绘制文字</p>\n</blockquote>\n<p><img src=\"https://z3.ax1x.com/2021/11/02/IihNzq.png\" alt=\"IihNzq.png\" loading=\"lazy\"><br>\n<code>drawTextOnPath()</code> 使用的 <code>Path</code> ，拐弯处全用圆角，别用尖角</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">canvas.drawPath(path, paint); <span class=\"comment\">// 把 Path 也绘制出来，理解起来更方便</span></span><br><span class=\"line\">canvas.drawTextOnPath(<span class=\"string\">&quot;Hello HeCoder&quot;</span>, path, <span class=\"number\">0</span>, <span class=\"number\">0</span>, paint);</span><br></pre></td></tr></table></figure>\n<h5 id=\"staticlayout\">StaticLayout<a title=\"#staticlayout\" href=\"#staticlayout\"></a></h5>\n<blockquote>\n<p>进行多行文字的绘制</p>\n</blockquote>\n<ul>\n<li>View 的边缘自动折行</li>\n<li>在换行符 <code>\\n</code> 处换行</li>\n</ul>\n<p><img src=\"https://z3.ax1x.com/2021/11/02/Iih7Yd.md.png\" alt=\"Iih7Yd.md.png\" loading=\"lazy\" class=\"φbp\"></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">String text1 = <span class=\"string\">&quot;Lorem Ipsum is simply dummy text of the printing and typesetting industry.&quot;</span>;</span><br><span class=\"line\">StaticLayout staticLayout1 = <span class=\"keyword\">new</span> StaticLayout(text1, paint, <span class=\"number\">600</span>,</span><br><span class=\"line\">        Layout.Alignment.ALIGN_NORMAL, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"keyword\">true</span>);</span><br><span class=\"line\">String text2 = <span class=\"string\">&quot;a\\nbc\\ndefghi\\njklm\\nnopqrst\\nuvwx\\nyz&quot;</span>;</span><br><span class=\"line\">StaticLayout staticLayout2 = <span class=\"keyword\">new</span> StaticLayout(text2, paint, <span class=\"number\">600</span>,</span><br><span class=\"line\">        Layout.Alignment.ALIGN_NORMAL, <span class=\"number\">1</span>, <span class=\"number\">0</span>, <span class=\"keyword\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">canvas.save();</span><br><span class=\"line\">canvas.translate(<span class=\"number\">50</span>, <span class=\"number\">100</span>);</span><br><span class=\"line\">staticLayout1.draw(canvas);</span><br><span class=\"line\">canvas.translate(<span class=\"number\">0</span>, <span class=\"number\">200</span>);</span><br><span class=\"line\">staticLayout2.draw(canvas);</span><br><span class=\"line\">canvas.restore();</span><br></pre></td></tr></table></figure>\n<h3 id=\"文字绘制辅助(paint)\">文字绘制辅助(Paint)<a title=\"#文字绘制辅助(paint)\" href=\"#文字绘制辅助(paint)\"></a></h3>\n<h4 id=\"样式设置\">样式设置<a title=\"#样式设置\" href=\"#样式设置\"></a></h4>\n<ul>\n<li><code>setTextSize(float textSize)</code></li>\n<li><code>setTypeface(Typeface typeface)</code></li>\n<li><code>setFakeBoldText(boolean fakeBoldText)</code>是否使用伪粗体</li>\n<li><code>setStrikeThruText(boolean strikeThruText)</code>是否加删除线</li>\n<li><code>setUnderlineText(boolean underlineText)</code></li>\n<li><code>setTextSkewX(float skewX)</code> 文字横切角度</li>\n<li><code>setTextScaleX(float scaleX)</code></li>\n<li><code>setLetterSpacing(float letterSpacing)</code> 字符间距</li>\n<li><code>setFontFeatureSettings(String settings)</code></li>\n<li><code>setTextAlign(Paint.Align align)</code></li>\n<li><code>setTextLocale(Locale locale)</code>语言区域</li>\n<li><code>setHinting(int mode)</code>字体微调</li>\n<li><code>setSubpixelText(boolean subpixelText)</code>是否开启像素级的抗锯齿</li>\n</ul>\n<h4 id=\"测量\">测量<a title=\"#测量\" href=\"#测量\"></a></h4>\n<ul>\n<li><code>getFontSpacing()</code> 获取推荐的行距\n<ul>\n<li><img src=\"https://z3.ax1x.com/2021/11/02/IiboRg.png\" alt=\"IiboRg.png\" loading=\"lazy\" class=\"φbp\"></li>\n</ul>\n</li>\n<li><code>getFontMetrics()</code>\n<ul>\n<li><img src=\"https://z3.ax1x.com/2021/11/02/IibtM9.png\" alt=\"IibtM9.png\" loading=\"lazy\" class=\"φbp\"></li>\n</ul>\n</li>\n<li><code>getTextBounds()</code> 获取文字范围</li>\n<li><code>measureText()</code>测量文字的宽度并返回</li>\n<li><code>getTextWidths()</code>获取字符串中每个字符的宽度</li>\n<li><code>breakText()</code> 和 <code>measureText()</code> 的区别是， breakText() 是在给出宽度上限的前提下测量文字的宽度。如果文字的宽度超出了上限，那么在临近超限的位置截断文字</li>\n<li>光标相关\n<ul>\n<li><code>getRunAdvance()</code>计算出某个字符处光标的 <code>x</code> 坐标\n<ul>\n<li><img src=\"https://z3.ax1x.com/2021/11/02/Iibnrn.png\" alt=\"Iibnrn.png\" loading=\"lazy\" class=\"φbp\"></li>\n<li><img src=\"https://z3.ax1x.com/2021/11/02/IibMV0.md.png\" alt=\"IibMV0.md.png\" loading=\"lazy\" class=\"φbp\"></li>\n</ul>\n</li>\n<li><code>getOffsetForAdvance</code> 计算第几个字符最接近这个坐标</li>\n</ul>\n</li>\n<li><code>hasGlyph()</code>检查指定的字符串中是否是一个单独的字形\n<ul>\n<li><img src=\"https://z3.ax1x.com/2021/11/02/IiH9tU.png\" alt=\"IiH9tU.png\" loading=\"lazy\" class=\"φbp\"></li>\n</ul>\n</li>\n</ul>\n","prev":{"title":"自定义View(4) - Canvas相关","link":"2021/11/03/ZOnr24kULe7cQgsc"},"next":{"title":"自定义View(2) - Paint相关","link":"2021/11/01/weRgrdLnBqIUWkcH"},"plink":"https://onion99.github.io/2021/11/03/VjI1fQxy8MSFqUqm/","reward":true,"copyright":{"custom":"Copyright:自由转载-非商用-禁止演绎-保持署名（CC BY-NC-ND 4.0）"}}